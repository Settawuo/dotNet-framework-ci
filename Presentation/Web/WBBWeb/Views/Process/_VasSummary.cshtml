@model WBBEntity.PanelModels.QuickWinPanelModel
@using WBBEntity.PanelModels

@{
    string VAS = "";
    decimal SffProfileLogID = 0;

    if (ViewBag.Vas != null)
    {
        VAS = ViewBag.Vas;
    }

    if (null != ViewBag.SffProfileLogID)
    {
        SffProfileLogID = ViewBag.SffProfileLogID;
    }

    string L_SELECT_VAS = "";
    string L_ADDED_SERVICE = "";
    string L_FIXED_REGISTER = "";
    string L_TOTAL = "";
    string L_NUMBER = "";
    string L_IDD = "";
    string L_FAX = "";
    string F_MOBILE_FORWARD = "";
    string L_MOBILE_FORWARD = "";
    string T_MOBILE_FORWARD = "";
    string M_MOBILE_FORWARD = "";
    string L_FIXED_CHARGE_RATE = "";
    string L_FIXED_TERM = "";
    string L_FIXED_TERM_1 = "";
    string L_FIXED_TERM_2 = "";
    string L_FIXED_TERM_3 = "";
    string L_FIXED_TERM_4 = "";
    string L_FIXED_TERM_5 = "";
    string L_FIXED_TERM_6 = "";

    string L_FIXED_TERM_4_1 = "";
    string L_FIXED_TERM_4_2 = "";
    string L_FIXED_TERM_4_3 = "";
    string L_FIXED_TERM_4_4 = "";

    string L_FIXED_TERM_4_3_1 = "";
    string L_FIXED_TERM_4_3_2 = "";
    string L_FIXED_TERM_4_3_3 = "";
    string L_FIXED_TERM_4_3_4 = "";
    string L_FIXED_TERM_4_3_5 = "";
    string L_FIXED_TERM_4_3_6 = "";

    string L_CHARGE_RATE = "";
    string L_INSTALLATION_DATE_NUMBER_VAS = "";
    string L_ADDED_SERVICE_PLAYBOX = "";
    string L_AIS_PLAYBOX = "";
    string lCONTACT_PHONE = "";
    string lHOME_PHONE = "";
    string lMOBILE = "";
    string lOR = "";
    string lEXT_NUMBER = "";

    if (ViewBag.LabelFBBTR010 != null)
    {
        var LabelFBBTR010 = (List<LovScreenValueModel>)ViewBag.LabelFBBTR010;
        L_SELECT_VAS = LabelFBBTR010.Any(c => c.Name == "L_SELECT_VAS") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_SELECT_VAS").DisplayValue : "";
        L_ADDED_SERVICE = LabelFBBTR010.Any(c => c.Name == "L_ADDED_SERVICE") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_ADDED_SERVICE").DisplayValue : "";
        L_FIXED_REGISTER = LabelFBBTR010.Any(c => c.Name == "L_FIXED_REGISTER") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_REGISTER").DisplayValue : "";
        L_TOTAL = LabelFBBTR010.Any(c => c.Name == "L_TOTAL") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_TOTAL").DisplayValue : "";
        L_NUMBER = LabelFBBTR010.Any(c => c.Name == "L_NUMBER") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_NUMBER").DisplayValue : "";
        L_IDD = LabelFBBTR010.Any(c => c.Name == "L_IDD") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_IDD").DisplayValue : "";
        L_FAX = LabelFBBTR010.Any(c => c.Name == "L_FAX") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FAX").DisplayValue : "";
        F_MOBILE_FORWARD = LabelFBBTR010.Any(c => c.Name == "F_MOBILE_FORWARD") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "F_MOBILE_FORWARD").DisplayValue : "";
        L_MOBILE_FORWARD = LabelFBBTR010.Any(c => c.Name == "L_MOBILE_FORWARD") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_MOBILE_FORWARD").DisplayValue : "";
        T_MOBILE_FORWARD = LabelFBBTR010.Any(c => c.Name == "T_MOBILE_FORWARD") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "T_MOBILE_FORWARD").DisplayValue : "";
        M_MOBILE_FORWARD = LabelFBBTR010.Any(c => c.Name == "M_MOBILE_FORWARD") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "M_MOBILE_FORWARD").DisplayValue : "";
        L_FIXED_CHARGE_RATE = LabelFBBTR010.Any(c => c.Name == "L_FIXED_CHARGE_RATE") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_CHARGE_RATE").DisplayValue : "";
        L_FIXED_TERM = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM").DisplayValue : "";
        L_FIXED_TERM_1 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_1") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_1").DisplayValue : "";
        L_FIXED_TERM_2 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_2") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_2").DisplayValue : "";
        L_FIXED_TERM_3 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_3") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_3").DisplayValue : "";
        L_FIXED_TERM_4 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4").DisplayValue : "";
        L_FIXED_TERM_5 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_5") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_5").DisplayValue : "";
        L_FIXED_TERM_6 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_6") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_6").DisplayValue : "";

        L_FIXED_TERM_4_1 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_1") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_1").DisplayValue : "";
        L_FIXED_TERM_4_2 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_2") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_2").DisplayValue : "";
        L_FIXED_TERM_4_3 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_3") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_3").DisplayValue : "";
        L_FIXED_TERM_4_4 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_4") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_4").DisplayValue : "";

        L_FIXED_TERM_4_3_1 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_3_1") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_3_1").DisplayValue : "";
        L_FIXED_TERM_4_3_2 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_3_2") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_3_2").DisplayValue : "";
        L_FIXED_TERM_4_3_3 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_3_3") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_3_3").DisplayValue : "";
        L_FIXED_TERM_4_3_4 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_3_4") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_3_4").DisplayValue : "";
        L_FIXED_TERM_4_3_5 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_3_5") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_3_5").DisplayValue : "";
        L_FIXED_TERM_4_3_6 = LabelFBBTR010.Any(c => c.Name == "L_FIXED_TERM_4_3_6") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_FIXED_TERM_4_3_6").DisplayValue : "";

        L_CHARGE_RATE = LabelFBBTR010.Any(c => c.Name == "L_CHARGE_RATE") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_CHARGE_RATE").DisplayValue : "";
        L_INSTALLATION_DATE_NUMBER_VAS = LabelFBBTR010.Any(c => c.Name == "L_INSTALLATION_DATE_NUMBER_VAS") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_INSTALLATION_DATE_NUMBER_VAS").DisplayValue : "";
        L_ADDED_SERVICE_PLAYBOX = LabelFBBTR010.Any(c => c.Name == "L_ADDED_SERVICE_PLAYBOX") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_ADDED_SERVICE_PLAYBOX").DisplayValue : "";

        L_AIS_PLAYBOX = LabelFBBTR010.Any(c => c.Name == "L_AIS_PLAYBOX") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_AIS_PLAYBOX").DisplayValue : "";

        lCONTACT_PHONE = LabelFBBTR010.Any(c => c.Name == "L_CONTACT_PHONE_VAS") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_CONTACT_PHONE_VAS").DisplayValue : "";
        lHOME_PHONE = LabelFBBTR010.Any(c => c.Name == "L_HOME_PHONE_VAS") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_HOME_PHONE_VAS").DisplayValue : "";
        lMOBILE = LabelFBBTR010.Any(c => c.Name == "L_MOBILE_VAS") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_MOBILE_VAS").DisplayValue : "";
        lOR = LabelFBBTR010.Any(c => c.Name == "L_OR_VAS") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "L_OR_VAS").DisplayValue : "";
        lEXT_NUMBER = LabelFBBTR010.Any(c => c.Name == "EXT_NUMBER_VAS") ? LabelFBBTR010.FirstOrDefault(c => c.Name == "EXT_NUMBER_VAS").DisplayValue : "";
    }

    string L_YEAR = "";
    string L_MONTH = "";
    string L_INSTALLATION_DATE = "";
    string L_ONTOP_PLAYBOX_PROMOTION = "";
    string DISPLAY_TIMESLOT_PBOX_JOIN = "";
    string DISPLAY_TIMESLOT_PBOX_MA = "";

    if (ViewBag.LabelFBBTR003 != null)
    {
        var labelFBBTR003 = (List<LovScreenValueModel>)ViewBag.LabelFBBTR003;
        L_INSTALLATION_DATE = labelFBBTR003.Any(c => c.Name == "L_INSTALLATION_DATE") ? labelFBBTR003.FirstOrDefault(c => c.Name == "L_INSTALLATION_DATE").DisplayValue : "";
        L_MONTH = labelFBBTR003.Any(c => c.Name == "L_MONTH") ? labelFBBTR003.FirstOrDefault(c => c.Name == "L_MONTH").DisplayValue : "";
        L_YEAR = labelFBBTR003.Any(c => c.Name == "L_YEAR") ? labelFBBTR003.FirstOrDefault(c => c.Name == "L_YEAR").DisplayValue : "";
        L_ONTOP_PLAYBOX_PROMOTION = labelFBBTR003.Any(c => c.Name == "L_ONTOP_PLAYBOX_PROMOTION") ? labelFBBTR003.FirstOrDefault(c => c.Name == "L_ONTOP_PLAYBOX_PROMOTION").DisplayValue : "";
        DISPLAY_TIMESLOT_PBOX_JOIN = labelFBBTR003.Any(c => c.Name == "DISPLAY_TIMESLOT_PBOX_JOIN") ? labelFBBTR003.FirstOrDefault(c => c.Name == "DISPLAY_TIMESLOT_PBOX_JOIN").DisplayValue : "";
        DISPLAY_TIMESLOT_PBOX_MA = labelFBBTR003.Any(c => c.Name == "DISPLAY_TIMESLOT_PBOX_MA") ? labelFBBTR003.FirstOrDefault(c => c.Name == "DISPLAY_TIMESLOT_PBOX_MA").DisplayValue : "";
    }

    string B_CHOOSE_VAS = "";
    string L_PLAYBOX_DETAIL_1 = "";
    string L_PLAYBOX_DETAIL_2 = "";
    string L_PLAYBOX_DETAIL_3 = "";
    string L_PLAYBOX_DETAIL_4 = "";
    string L_PLAYBOX_DETAIL_5 = "";
    string L_PLAYBOX_REMARK = "";
    string L_PLAYBOX_REMARK_1 = "";
    string L_PLAYBOX_REMARK_2 = "";
    string L_PLAYBOX_REMARK_3 = "";

    //R21.12 ATV
    string L_PLAYBOX_HEADER = "";
    string L_PLAYBOX_DETAIL = "";
    var L_PLAYBOX_HEADER_LIST = new List<LovScreenValueModel>();
    var L_PLAYBOX_DETAIL_LIST = new List<LovScreenValueModel>();
    var L_PLAYBOX_REMARK_LIST = new List<LovScreenValueModel>();

    if (ViewBag.LabelFBBORV11 != null)
    {
        var LabelFBBORV11 = (List<LovScreenValueModel>)ViewBag.LabelFBBORV11;
        B_CHOOSE_VAS = LabelFBBORV11.Any(c => c.Name == "B_CHOOSE_VAS") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "B_CHOOSE_VAS").DisplayValue : "";
        L_PLAYBOX_DETAIL_1 = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_DETAIL_1") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_DETAIL_1").DisplayValue : "";
        L_PLAYBOX_DETAIL_2 = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_DETAIL_2") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_DETAIL_2").DisplayValue : "";
        L_PLAYBOX_DETAIL_3 = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_DETAIL_3") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_DETAIL_3").DisplayValue : "";
        L_PLAYBOX_DETAIL_4 = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_DETAIL_4") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_DETAIL_4").DisplayValue : "";
        L_PLAYBOX_DETAIL_5 = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_DETAIL_5") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_DETAIL_5").DisplayValue : "";
        L_PLAYBOX_REMARK = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_REMARK") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_REMARK").DisplayValue : "";
        L_PLAYBOX_REMARK_1 = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_REMARK_1") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_REMARK_1").DisplayValue : "";
        L_PLAYBOX_REMARK_2 = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_REMARK_2") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_REMARK_2").DisplayValue : "";
        L_PLAYBOX_REMARK_3 = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_REMARK_3") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_REMARK_3").DisplayValue : "";

        //R21.12 ATV
        L_PLAYBOX_HEADER = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_HEADER") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_HEADER").DisplayValue : "";
        L_PLAYBOX_DETAIL = LabelFBBORV11.Any(c => c.Name == "L_PLAYBOX_DETAIL") ? LabelFBBORV11.FirstOrDefault(c => c.Name == "L_PLAYBOX_DETAIL").DisplayValue : "";
        L_PLAYBOX_HEADER_LIST = LabelFBBORV11.Where(w => w.Name == "L_PLAYBOX_HEADER_LIST").OrderBy(o => o.OrderByPDF).ToList();
        L_PLAYBOX_DETAIL_LIST = LabelFBBORV11.Where(w => w.Name == "L_PLAYBOX_DETAIL_LIST").OrderBy(o => o.OrderByPDF).ToList();
        L_PLAYBOX_REMARK_LIST = LabelFBBORV11.Where(w => w.Name == "L_PLAYBOX_REMARK_LIST").OrderBy(o => o.OrderByPDF).ToList();
    }

    string FBB_Con_Length_HomePhone = "";
    string FBB_Con_Length_ExtNumberz = "";
    string FBB_Con_MobileLength = "";
    string FBB_Con_Input_HomePhone = "";
    string FBB_Con_Input_ExtNumber = "";
    //for Validate Mobile Number Created by PatthamawadeeH. 26122016
    string FBB_Con_Input_Moblie_No = "";
    List<string> LIST_CHECK_MAPPING_PB = null;
    string FBB_Con_CHECK_CHANNEL_PB = "";
    string FBB_Con_CONDITION_TIME_SLOT_PB = "";
    List<string> LIST_OUT_CHANNEL_SALE = null;

    if (ViewBag.FbbConstant != null)
    {
        var FbbConstant = (List<FbbConstantModel>)ViewBag.FbbConstant;
        FBB_Con_Length_HomePhone = FbbConstant.Any(f => f.Field == "Length_HomePhone") ? FbbConstant.First(f => f.Field == "Length_HomePhone").Validation : "";
        FBB_Con_Length_ExtNumberz = FbbConstant.Any(f => f.Field == "Length_ExtNumber") ? FbbConstant.First(f => f.Field == "Length_ExtNumber").Validation : "";
        FBB_Con_MobileLength = FbbConstant.Any(f => f.Field == "Mobile Length") ? FbbConstant.First(f => f.Field == "Mobile Length").Validation : "";
        FBB_Con_Input_HomePhone = FbbConstant.Any(f => f.Field == "Input_HomePhone") ? FbbConstant.First(f => f.Field == "Input_HomePhone").Validation : "";
        FBB_Con_Input_ExtNumber = FbbConstant.Any(f => f.Field == "Input_ExtNumber") ? FbbConstant.First(f => f.Field == "Input_ExtNumber").Validation : "";
        FBB_Con_Input_Moblie_No = FbbConstant.Any(f => f.Field == "Input_MobileNo") ? FbbConstant.First(f => f.Field == "Input_MobileNo").Validation : "";
        LIST_CHECK_MAPPING_PB = FbbConstant.Where(f => f.Field == "CHECK_MAPPING_PB").Select(f => f.Validation).ToList();
        FBB_Con_CHECK_CHANNEL_PB = FbbConstant.Any(f => f.Field == "CHECK_CHANNEL_PB") ? FbbConstant.First(f => f.Field == "CHECK_CHANNEL_PB").Validation : "";
        FBB_Con_CONDITION_TIME_SLOT_PB = FbbConstant.Any(f => f.Field == "CONDITION_TIME_SLOT_PB") ? FbbConstant.First(f => f.Field == "CONDITION_TIME_SLOT_PB").Validation : "";
        LIST_OUT_CHANNEL_SALE = FbbConstant.Where(f => f.Field == "OUT_CHANNEL_SALE").Select(f => f.Validation).ToList();
    }

    var bBACK = "";
    var bNEXT = "";
    if (ViewBag.LabelFBBTR000 != null)
    {
        var labelFBBTR000 = (List<LovScreenValueModel>)ViewBag.LabelFBBTR000;

        bBACK = labelFBBTR000.Any(c => c.Name == "B_BACK") ? labelFBBTR000.First(c => c.Name == "B_BACK").DisplayValue : "";
        bNEXT = labelFBBTR000.Any(c => c.Name == "B_NEXT") ? labelFBBTR000.First(c => c.Name == "B_NEXT").DisplayValue : "";
    }

    string AccessModeByPass = "";
    if (ViewBag.AccessModeByPass != null)
    {
        AccessModeByPass = ViewBag.AccessModeByPass;
    }
    string AisAirNumberByPass = "";
    if (ViewBag.AisAirNumberByPass != null)
    {
        AisAirNumberByPass = ViewBag.AisAirNumberByPass;
    }

}

<div id="page2_2" class="container" style="display: none;">
    <div class="col-md-8-5 col-sm-8 col-xs-12 addrounded">
        <div id="divPlayBoxPage">
            <p class="clearfix"></p>
            <h4 class="page-header tgreen"><span id="lblVasSumSelectVas"></span></h4>

            <i class="fa fa-chevron-right tgreen"></i>@L_ADDED_SERVICE_PLAYBOX
            <p class="clearfix"></p>

            <div class="col-xs-12 text-center">
                <img src="~/img/play_box_old.png" class="img-responsive center-block">
            </div>
            
            <div id="divTagIVasPro">
                <i class="fa fa-chevron-right tgreen"></i>@L_ONTOP_PLAYBOX_PROMOTION
                <p class="clearfix"></p>
            </div>
            <div class="col-xs-12" id="divVasPro">
                <div class="panel panel-gray">
                    <div class="panel-heading"></div>
                    <div class="panel-body">
                        <ul style="list-style-type: disc; padding-left: 40px;">
                            <li id="liVasSumInitiation"><span id="lblVasSumInitiation"></span></li>
                            <li id="liVasSumHooq" style="display: none;"><span id="lblVasSumHooq"></span></li>
                            <li id="liBPLDetail"><span id="lblBPLDetail"></span></li>
                        </ul>
                    </div>
                </div>
                <div style="display: none;">
                    <label id="lblVasSumPromotion"></label>
                </div>
                <p class="clearfix"></p>
            </div>

            <i class="fa fa-chevron-right tgreen"></i>@L_AIS_PLAYBOX
            <p class="clearfix"></p>
            <div class=" col-xs-12 ">
                <div class="add-rounded-gray">
                    <p class="clearfix"></p>

@*R21.12PP ATV (แบบเก่า ไม่ได้ใช้ เก็บไว้ก่อน)
    <ul style="list-style-type: disc; padding-left: 40px;">
    <li>@L_PLAYBOX_DETAIL_1</li>
    <li>@L_PLAYBOX_DETAIL_2</li>
    <li>@L_PLAYBOX_DETAIL_4</li>
    <li>@L_PLAYBOX_DETAIL_5</li>
</ul>
<b>@L_PLAYBOX_REMARK</b>
<ul style="list-style-type: disc; padding-left: 40px;">
    <li>@L_PLAYBOX_REMARK_1 <span id="lblRemarkPrice"></span></li>
    <li>@L_PLAYBOX_REMARK_3</li>
</ul>*@

                    @*R21.12PP ATV*@
                    <b>@L_PLAYBOX_HEADER</b>
                    <ul style="list-style-type: disc; padding-left: 40px;">
                        @foreach (var headerList in L_PLAYBOX_HEADER_LIST)
                        {
                            <li>@headerList.DisplayValue</li>
                        }
                    </ul>
                    <b>@L_PLAYBOX_DETAIL</b>
                    <ul style="list-style-type: disc; padding-left: 40px;">
                        @foreach (var detailList in L_PLAYBOX_DETAIL_LIST)
                        {
                            <li>@detailList.DisplayValue</li>
                        }
                    </ul>
                    <b>@L_PLAYBOX_REMARK</b>
                    <ul style="list-style-type: disc; padding-left: 40px;">
                        @foreach (var remarkList in L_PLAYBOX_REMARK_LIST)
                        {
                            <li>@remarkList.DisplayValue</li>
                        }
                    </ul>
                    <p class="clearfix"></p>
                </div>
            </div>
            <p class="clearfix"></p>
        </div>

        <div id="divVoipPage">
            <p class="clearfix"></p>
            <h4 class="page-header tgreen" id="lblSelectVas">@L_SELECT_VAS</h4>

            <i class="fa fa-chevron-right tgreen"></i>@L_ADDED_SERVICE
            <p class="clearfix"></p>

            <div class="col-md-10 col-md-offset-1">
                <div class="radio">
                    <label>
                        <input type="radio" id="L_FIXED_REGISTER" name="L_FIXED_REGISTER" checked>
                        @L_FIXED_REGISTER<br>
                        &mdash; @L_TOTAL @L_NUMBER

                    </label>
                </div>

                <div class="checkbox">
                    <label>
                        <input type="checkbox" id="L_IDD" name="L_IDD" value="N" />@L_IDD
                    </label>
                    <p class="clearfix"></p>
                    <label>
                        <input type="checkbox" id="L_Fax" name="L_Fax" value="N"
                               onclick="return false;" onkeydown="return false;" checked="checked" />@L_FAX
                        </label>
                        @if (false) //F_MOBILE_FORWARD == "Y"
                        {
                            <p class="clearfix"></p>
                            <label class="checkbox-inline">
                                <input type="checkbox" id="chkLPhone" name="L_Phone" />
                                @L_MOBILE_FORWARD

                            </label>
                            <input type="text" id="txtMobileForward" class="form-control" maxlength="10"
                                   title="@T_MOBILE_FORWARD" disabled />
                        }
                    </div>
                </div>

                <p class="clearfix"></p>
                <i class="fa fa-chevron-right tgreen"></i>@L_FIXED_CHARGE_RATE
                <p class="clearfix"></p>
                <div id="divPromotionDetailVasSum">
                </div>

                <div id="divConditionOfService">
                </div>

                <p class="clearfix"></p>
                <div class="add-rounded-gray">
                    <p class="clearfix"></p>
                    <ol type="1">
                        <strong>@L_FIXED_TERM</strong>
                        <li>
                            @L_FIXED_TERM_1 @*<a href="~/Template/003_005_rate.pdf" target="_blank">@L_CHARGE_RATE</a>*@
                    </li>
                    <li>
                        @L_FIXED_TERM_2
                    </li>
                    <li>
                        @L_FIXED_TERM_3
                    </li>
                    <li>
                        @L_FIXED_TERM_4
                        <ul style="list-style-type: disc; padding-left: 40px;">
                            <li>@L_FIXED_TERM_4_1</li>
                            <li>@L_FIXED_TERM_4_2</li>
                            <li>
                                @L_FIXED_TERM_4_3
                                <ul style="list-style-type: none; padding-left: 40px;">
                                    <li>@L_FIXED_TERM_4_3_1</li>
                                    <li>@L_FIXED_TERM_4_3_2</li>
                                    <li>@L_FIXED_TERM_4_3_3</li>
                                    <li>@L_FIXED_TERM_4_3_4</li>
                                    <li>@L_FIXED_TERM_4_3_5</li>
                                    <li>@L_FIXED_TERM_4_3_6</li>
                                </ul>
                            </li>
                            <li>@L_FIXED_TERM_4_4</li>
                        </ul>
                    </li>
                    <li>@L_FIXED_TERM_5</li>
                    <li>@L_FIXED_TERM_6</li>
                    </ol>
                    <p class="clearfix"></p>
                    <p class="clearfix"></p>
                    <p class="clearfix"></p>
                </div>
                <p class="clearfix"></p>
            </div>

            @if (VAS == "2" || ViewBag.TopUp == "1")
            {
                <div id="divContactPhone">
                    <p class="clearfix"></p>
                    <i class="fa fa-chevron-right tgreen"></i>@lCONTACT_PHONE
                    <p class="clearfix"></p>
                    <div class="col-md-6">
                        <input type="text" class="form-control"
                               id="txtVasSumHomePhone" title="@lHOME_PHONE" placeholder="@lHOME_PHONE" maxlength="@FBB_Con_Length_HomePhone">
                        <p class="clearfix"></p>
                    </div>
                    <div class="col-md-6">
                        <input type="text" class="form-control"
                               id="txtVasSumHomePhoneTo" title="@lEXT_NUMBER" placeholder="@lEXT_NUMBER" maxlength="@FBB_Con_Length_ExtNumberz">
                        <p class="clearfix"></p>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(Model => Model.CustomerRegisterPanelModel.L_MOBILE,
                        new
                        {
                            @title = lMOBILE,
                            @placeholder = lMOBILE,
                            @id = "VasSumL_MOBILE",
                            @class = "form-control",
                            @maxlength = FBB_Con_MobileLength
                        })
                        <p class="clearfix"></p>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(Model => Model.CustomerRegisterPanelModel.L_OR,
                        new
                        {
                            @title = lOR,
                            @placeholder = lOR,
                            @id = "VasSumL_OR",
                            @class = "form-control",
                            @maxlength = FBB_Con_MobileLength
                        })
                        <p class="clearfix"></p>
                    </div>
                    <p class="clearfix"></p>
                </div>

                <div id="divInstallDateVas">
                    <p class="clearfix"></p>
                    <i class="fa fa-chevron-right tgreen"></i>@L_INSTALLATION_DATE
                    <p class="clearfix"></p>
                    @*
                        <div style="position: relative;">
                            <div class="col-sm-6">
                                <div id="divThDatePickerVas" class="col-md-12 right-inner-addon" style="position: relative; z-index: 10; padding-left: 0 !important; padding-right: 0 !important">
                                    <i class="fa fa-calendar"></i>
                                    <input type="text" class="form-control" id="dtpInstallDateTHVas_text" title="@L_INSTALLATION_DATE"
                                           placeholder="@L_INSTALLATION_DATE" readonly="readonly" autocomplete="off" />
                                    <p class="clearfix"></p>
                                </div>
                                <div style="position: absolute; width: 100%; height: 100%; z-index: -10;">
                                    <input type="text" class="form-control" id="dtpInstallDateTHVas" autocomplete="off" />
                                </div>
                            </div>
                            <p class="clearfix"></p>
                        </div>
                        <div style="position: relative;">
                            <div id="divEnDatePickerVas" style="display: none;" class="col-md-6 right-inner-addon">
                                <i class="fa fa-calendar"></i>
                                <input type="text" class="form-control" id="dtpInstallDateENVas" title="@L_INSTALLATION_DATE"
                                       placeholder="@L_INSTALLATION_DATE" readonly="readonly" autocomplete="off" />
                            </div>
                            <p class="clearfix"></p>
                        </div>*@

                    <div style="position: relative;">
                        <div class="col-sm-6 col-xs-12" id="divThDatePickerVas">
                            <div class="col-sm-12 col-xs-12 right-inner-addon" style="position: relative; z-index: 10; padding-left: 0 !important; padding-right: 0 !important">
                                <i class="fa fa-calendar"></i>
                                <input id="dtpInstallDateTHVas_text" type="text" class="form-control" title="@L_INSTALLATION_DATE" readonly="readonly" autocomplete="off" />
                            </div>
                            <div style="position: absolute; width: 100%; height: 100%; z-index: -10;">
                                <input type="text" class="form-control" id="dtpInstallDateTHVas" autocomplete="off" />
                            </div>
                        </div>
                        <div class="col-sm-6 col-xs-12 right-inner-addon" id="divEnDatePickerVas" style="display: none;">
                            <i class="fa fa-calendar"></i>
                            <input type="text" class="form-control"
                                   id="dtpInstallDateENVas" title="@L_INSTALLATION_DATE" readonly="readonly" autocomplete="off" />
                            <p class="clearfix"></p>
                        </div>
                        <p class="clearfix visible-xs"></p>
                        <div id="divTimeFlag" class="col-sm-6 col-xs-12"></div>
                        <p class="clearfix"></p>
                    </div>
                    @Html.Hidden("hdTimeSlotRegisterHR")
                    @Html.Hidden("hdTimeSlotRegisterFlowActionNo")
                    @Html.Hidden("hdCurrentDateTime")
                    <div id="divResponsiveTimeSLotWarning" class="text-center" style="display: none;">
                        <img src="~/Content/Content2016/images/loading-icon.gif" />
                    </div>

                    <div id="divResponsiveTimeSLotVas" style="display: none;">
                        <div class="col-sm-12 col-xs-12">
                            <div class="visible-sm visible-xs" style="left: 40%; top: 10%; position: absolute;" id="swipe">
                                <img src="~/img/i-swipe.png">
                            </div>
                            <div class="table-responsive">
                                <div id="divTimeSlotVas" style="margin-left: auto; margin-right: auto; width: 730px;">
                                </div>
                                <p class="clearfix"></p>
                            </div>
                            <p class="clearfix"></p>
                            <div id="divTextSelectTimeSlot" class="center-block" style="max-width: 730px; height: 100%; color: #7fc71f;">
                            </div>
                            <p class="clearfix"></p>
                            <div style="clear: both;"></div>
                            <div id="divTimeSlotVasRemark">
                            </div>
                        </div>
                    </div>
                    @*<p class="clearfix"></p>*@
                </div>
            }
            <p class="clearfix"></p>

            <p class="clearfix page-header"></p>
            <div class="col-md-12 text-center">
                <button id="btnVasSumBackPage" type="button" class="btn btn-default btn-for-xs" onclick="onBtnVasSumBackPage_Click()">&nbsp; @bBACK &nbsp;</button>
                <button id="btnVasSumBackToVas" type="button" class="btn btn-default btn-for-xs" onclick="onBtnVasSumBackToVas_Click()">&nbsp; @B_CHOOSE_VAS &nbsp; </button>
                <button id="btnVasSumNextPage" type="button" class="btn btn-success btn-for-xs" onclick="onBtnVasSumNextPage_Click()">
                    &nbsp; @bNEXT &nbsp; <i class="fa fa-arrow-circle-o-right "></i>
                </button>
            </div>
            <p class="clearfix"></p>
        </div>

        <div id="divVasSumFormSummaryDetail">
        </div>
    </div>

    <div style="display: none;">
        <input type="hidden" id="FlgIDD" value="N" />
        <input type="hidden" id="FlgFax" value="Y" />
        <input type="hidden" id="DisplayVasPackagePanelModel_L_MOBILE_FORWARD_L">
    </div>

    <script>
        var validateInstallDate = new Array();
        var dayTimeslot = 3;
        var checkDateTimeSlot = false;

        var validateHomePhone = false;
        var unvalidateHomePhone = false;
        //R21.10
        var list_check_mapping_pb = @Html.Raw(Json.Encode(LIST_CHECK_MAPPING_PB));
        var list_out_channel_sale = @Html.Raw(Json.Encode(LIST_OUT_CHANNEL_SALE));

    $(function () {
        $("#txtMobileForward").watermark("@T_MOBILE_FORWARD");
        $('#dtpInstallDateTHVas').watermark("@L_INSTALLATION_DATE");
        $('#dtpInstallDateENVas').watermark("@L_INSTALLATION_DATE");
        $('#txtVasSumHomePhone').watermark("@lHOME_PHONE");
        $('#txtVasSumHomePhoneTo').watermark("@lEXT_NUMBER");
        $('#VasSumL_MOBILE').watermark("@lMOBILE");
        $('#VasSumL_OR').watermark("@lOR");
        //$("#txtMobileForward").mask("9999999999");

        //$("#VasSumL_MOBILE").mask("9999999999");

        //$("#VasSumL_OR").mask("9999999999");

        var d = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);

        var month = d.getMonth() + 1;
        var day = d.getDate();

        var currentDateTH = (day < 10 ? '0' : '') + day + '/' +
            (month < 10 ? '0' : '') + month + '/' +
            (d.getFullYear() + 543);

        var currentDateEN = (day < 10 ? '0' : '') + day + '/' +
            (month < 10 ? '0' : '') + month + '/' +
            d.getFullYear();

        $('#dtpInstallDateTHVas').datetimepicker({
            format: 'd/m/Y',
            lang: "th",
            timepicker: false,
            closeOnDateSelect: true
        });

        $('#dtpInstallDateENVas').datetimepicker({
            format: 'd/m/Y',
            lang: 'en',
            timepicker: false,
            closeOnDateSelect: true
        });

        //$('#dtpInstallDateTHVas').datetimepicker({
        //    format: 'd/m/Y',
        //    value: currentDateTH,
        //    yearOffset: 543,
        //    lang: "th",
        //    timepicker: false,
        //    dayOfWeekStart: 3,
        //    onGenerate: function (ct) {
        //        jQuery(this).find('.xdsoft_date')
        //          .toggleClass('xdsoft_disabled');
        //    },
        //    minDate: '1900/12/1',
        //    maxDate: '+1970/01/1',
        //    onSelectDate: function (ct, $i) {
        //        getAppointment(ct, true, "divTimeSlotVas");
        //    }
        //});

        //$('#dtpInstallDateENVas').datetimepicker({
        //    format: 'd/m/Y',
        //    value: currentDateEN,
        //    yearOffset: 0,
        //    lang: 'en',
        //    timepicker: false,
        //    onGenerate: function (ct) {
        //        jQuery(this).find('.xdsoft_date')
        //          .toggleClass('xdsoft_disabled');
        //    },
        //    minDate: '1900/12/1',
        //    maxDate: '+1970/01/1',
        //    onSelectDate: function (ct, $i) {
        //        getAppointment(ct, false, "divTimeSlotVas");
        //    }
        //});

        $("#L_IDD").change(function () {
            if (this.checked == true) {
                $("#FlgIDD").val("Y");
            }
            else {
                $("#FlgIDD").val("N");
            }
        });

        $("#L_Fax").change(function () {
            if (this.checked == true) {
                $("#FlgFax").val("Y");
            }
            else {
                $("#FlgFax").val("N");
            }
        });

        $("#chkLPhone").change(function () {
            $("#txtMobileForward").val("");
            $("#DisplayVasPackagePanelModel_L_MOBILE_FORWARD_L").val("");

            if ($("#chkLPhone").prop('checked') == true) {
                $("#txtMobileForward").prop('disabled', false);
            }
            else {
                $("#txtMobileForward").prop('disabled', true);
            }
        });

        $('#txtMobileForward').keydown(function () {
            // $('#L_FIRST_NAME').val($('#L_FIRST_NAME').val().replace(/[+฿/!@@#$%^&*()_\><{}๐":;'|,=~0123456789]/g, function (str) { return ''; }));
            CheckKeyUp("txtMobileForward", "[0-9]");
        });

        $('#txtVasSumHomePhone').keyup(function () {
            validateHomePhone = false;
            CheckKeyUp("txtVasSumHomePhone", "@FBB_Con_Input_HomePhone", 'M');
            if ($('#txtVasSumHomePhone').val().length > 0) {
                validateHomePhone = true;
            }
        });

        $('#txtVasSumHomePhoneTo').keyup(function () {
            CheckKeyUp("txtVasSumHomePhoneTo", "@FBB_Con_Input_ExtNumber", "M");
        });

        //Validate Input Mobile Created by PatthamawadeeH. 26122016
        $('#VasSumL_MOBILE').keyup(function () {
            CheckKeyUp("VasSumL_MOBILE", "@FBB_Con_Input_Moblie_No","M");
        });

        $('#VasSumL_OR').keyup(function () {
            CheckKeyUp("VasSumL_OR", "@FBB_Con_Input_Moblie_No", "M");
            //CheckMobileNo0("VasSumL_OR", "0");
        });

        $('#VasSumL_MOBILE').keydown(function () {
            CheckKeyUp("VasSumL_MOBILE", "@FBB_Con_Input_Moblie_No", "M");
            //CheckMobileNo0("VasSumL_MOBILE", "0");
        });

        $('#VasSumL_OR').keydown(function () {
            CheckKeyUp("VasSumL_OR", "@FBB_Con_Input_Moblie_No", "M");
            //CheckMobileNo0("VasSumL_OR", "0");
        });

    });

    function CheckKeyUp(id, RexStr, checkMobile) {
        var strKey = $("#" + id).val();
        var strBuilder = "";
        if (checkMobile == undefined || checkMobile != "M") {
            var filter = new RegExp(RexStr);
            for (var i = 0; i < strKey.length; i++) {
                if (filter.test(strKey.substr(i, 1))) {
                    strBuilder += strKey.substr(i, 1);
                }
            }
        }
        else {
            var filterM = new RegExp(RexStr, "g");
            strBuilder = strKey.match(filterM);
        }
        $("#" + id).val(strBuilder);
    }

    function onLoadPage2_2() {

        if ("@VAS" == "2" || "@ViewBag.TopUp" == "1") {
            //line 2
            $("#divLogoLine1").addClass("i-hidden");
            $("#divLogoLine2").removeClass("i-hidden");

            //R20.1 setInstallDate,setTimeSlot
            if ($('select[name=ddlNewPlaybox]').val() == "" || $('select[name=ddlNewPlaybox]').val() == null || $('select[name=ddlNewPlaybox]').val() == undefined) {
                setInstallDateVasSum();
                setTimeSlotConfigSelectDateVas();
            }

            getMobileNumber();
        }
        else {
            //Line 1
            $("#divLogoLine1").removeClass("i-hidden");
            $("#divLogoLine2").addClass("i-hidden");
        }

        $("#lblVasSumSelectVas").text($("#lblSelectVas").text()); //header form summary1
        $("#btnVasSumNextPage").html($("#btnVasNextPage").html());
        $("#btnVasSumBackPage").html($("#btnVasBackPage").html());
        $("#divVasSumFormSummaryDetail").html($("#divSelectValFormSummaryDetail").html());
        $("#divPromotionDetailVasSum").html($("#divPromotionDetail").html());
        //R20.1 Comment
        //if ($("#PlugAndPlayFlow").val() != "Y")
        //    $("#L_INSTALL_DATE").val("");
    }

    function getMobileNumber() {
        var value = "";

        $.ajax({
            url: '/Process/GetOtherInformation',
            data: { mobileno: $('#CoveragePanelModel_P_MOBILE').val() , caid: $('#CoveragePanelModel_CA_ID').val() , baid: $('#CoveragePanelModel_BA_ID').val() , selectvalue: 'CONTACT' },
            dataType: "json",
            type: 'POST',
            success: function (response) {

                if (response != "") {
                    var arrayRespon = response.split(',');
                    $("#txtVasSumHomePhone").val(arrayRespon[0]);
                    $("#txtVasSumHomePhoneTo").val(arrayRespon[1]);
                    $("#VasSumL_MOBILE").val(arrayRespon[2]);
                    $("#VasSumL_OR").val(arrayRespon[3]);
                    //R18.11
                    $('#CustomerRegisterPanelModel_L_CONTACT_PHONE').val(arrayRespon[2]);
                    $("#txtfor_L_HOME_PHONE").html(arrayRespon[2]);
                }

                //if (response != "") {
                //    $('#txtfor_L_CONTACT_PHONE2').text(response);
                //    $('#CustomerRegisterPanelModel_L_CONTACT_PHONE').val(response);
                //}
                //else {
                //    value = $('#CustomerRegisterPanelModel_L_CONTACT_PHONE').val(); if (value != "") { $('#txtfor_L_CONTACT_PHONE2').text(value); }
                //}

            }
        });

        value = $('#CustomerRegisterPanelModel_L_EMAIL').val(); if (value != "") { $('#txtfor_L_EMAIL2').text(value); }
    }

    function getTimeSlotConfigSelectDate() {

        var hour = 0;

        //R20.1
        var accessMode = "";
        var subtype = ""
        var tmp = "";
        tmp = $('select[name=ddlNewPlaybox]').val();
        if (sessionStorage.getItem('ACCESS_MODE') == null) {
            accessMode = "@AccessModeByPass";
            sessionStorage.setItem('ACCESS_MODE', accessMode);
        }
        else {
            accessMode = sessionStorage.getItem('ACCESS_MODE');
        }

        if (accessMode == "" || accessMode == null || accessMode == undefined) {
            accessMode = "PBOX";
        }
        else {
            subtype = (tmp == "" || tmp == undefined) ? "PBOX-JOIN" : "PBOX-MA";
        }

        @*var idVas = ""; var accessMode = "";
        $("#divVasBoxDynamic input[type=checkbox]:checked").each(function (i, e) {
            var selectedVasId = $(this).attr("vasid");
            idVas = selectedVasId.substr(6, selectedVasId.toString().length);
            //idVas = selectedVasId.toString().substr(0, e.id.toString().indexOf('-'));
            //idVas = idVas.substr(6, idVas.toString().length);
        });
        accessMode = $("#ACCESS_MODE" + idVas).val();
        if ("@ViewBag.TopUp" == "1") {
            //Line 2 Cust
            accessMode = "PBOX";
        }*@
        
        var timeSlotPBOldFlag = sessionStorage.getItem('timeSlotPBOldFlag');//R21.10

        $.ajax({
            type: "GET",
            url: "/CustomerRegister/GetTimeSlotConfigSelectDate",
            data: {
                'technology': accessMode,
                'subtype': subtype,
                'timeSlotRegisterFlag': 'Y',
                'timeSlotPBOldFlag': timeSlotPBOldFlag
            },
            dataType: "json",
            async: false,
            success: function (data) {
                //R21.10
                if (data.LovValue1 != "" && data.LovValue1 != null && data.LovValue1 != undefined) {
                    FlagCall_TIME_SLOT_PB = timeSlotPBOldFlag == "N" ? true : false;
                    if (!FlagCall_TIME_SLOT_PB) {
                        //Old
                        hour = parseInt(data.LovValue1, 10) * 24;
                    }
                }
                //End R21.10--------
            },
        });

        return hour;
    }

    function setTimeSlotConfigSelectDateVas() {

        //AWARE_R20.02
        var isBillCycleConfig = false;
        var billCycle = $('#BillCycle').val();
        var billCycleHave2MainFlag = $('#BillCycleHave2MainFlag').val();
        var billCycleTimeSlotStartDate = $('#BillCycleTimeSlotStartDate').val();
        var billCycleTimeSlotDayAdd = $('#BillCycleTimeSlotDayAdd').val();
        var billCycleTimeSlotDtpLenght = $('#BillCycleTimeSlotDtpLenght').val();
        var billCycleTimeSlotDayLenght = $('#BillCycleTimeSlotDayLenght').val();
        if (billCycle != undefined && billCycle != null && billCycle != "" && billCycleHave2MainFlag == "Y") {
            isBillCycleConfig = true;
        }

        //R20.1
        var accessMode = "";
        var subtype = "";
        var tmp = "";
        tmp = $('select[name=ddlNewPlaybox]').val();
        if (sessionStorage.getItem('ACCESS_MODE') == null) {
            accessMode = "@AccessModeByPass";
            sessionStorage.setItem('ACCESS_MODE', accessMode);
        }
        else {
            accessMode = sessionStorage.getItem('ACCESS_MODE');
        }
        if (accessMode == "" || accessMode == null || accessMode == undefined) {
            accessMode = "PBOX";
        }
        else {
            subtype = (tmp == "" || tmp == undefined) ? "PBOX-JOIN" : "PBOX-MA";
        }

        //R21.10
        var timeSlotPBOldFlag = "N";
        var FlagCall_TIME_SLOT_PB = false;
        //Step1. Check BillCycle
        if (isBillCycleConfig) {
            timeSlotPBOldFlag = "Y";
        }
        else {
            //Step2. Check PBOX MAIN
            if (tmp == "" || tmp == undefined) {
                //Step3. Check Maaping Promotion
                var tmp_PromotionCodeMain = $("input[name='sffPromotionCodePboxMain']").val();
                if (list_check_mapping_pb.indexOf(tmp_PromotionCodeMain) > -1) {
                    timeSlotPBOldFlag = "Y";
                }//timeSlotPBOldFlag = "N";
            }
            
            //Step4. Check CHANNEL = OFFICER
            var tmp_P_SALE_CHANNEL = sessionStorage.getItem('P_SALE_CHANNEL');
            var tmp_CHECK_CHANNEL_PB = "@FBB_Con_CHECK_CHANNEL_PB";
            var PBChnSalesFlag;
            if (timeSlotPBOldFlag == "N" && tmp_P_SALE_CHANNEL == tmp_CHECK_CHANNEL_PB) {
                //Step5. Check OUT_CHANNEL_SALE
                var tmp_outChnSales = sessionStorage.getItem('outChnSales');
                if (list_out_channel_sale.indexOf(tmp_outChnSales) > -1) {
                    timeSlotPBOldFlag = "Y";
                    PBChnSalesFlag = true;
                }
                else {
                    PBChnSalesFlag = false; //timeSlotPBOldFlag = "N";
                }
            }
            else {
                PBChnSalesFlag = false;
            }

            //Step6. Check CONDITION_TIME_SLOT_PB ("Y" => Call 'TIME_SLOT_PB' , "N" => call 'TIME_SLOT_BY_SUBTYPE_HR')
            var tmp_CONDITION_TIME_SLOT_PB = "@FBB_Con_CONDITION_TIME_SLOT_PB";
            if (PBChnSalesFlag == false && timeSlotPBOldFlag == "N" && tmp_CONDITION_TIME_SLOT_PB == "N") { timeSlotPBOldFlag = "Y"; }
            
        }
        FlagCall_TIME_SLOT_PB = timeSlotPBOldFlag == "N" ? true : false;
        sessionStorage.setItem('timeSlotPBOldFlag', timeSlotPBOldFlag);
        //-----End R21.10-----

        $.ajax({
            type: "GET",
            url: "/CustomerRegister/GetTimeSlotConfigSelectDate",
            data: {
                'technology': accessMode,
                'subtype': subtype,
                'timeSlotRegisterFlag': 'Y',
                'timeSlotPBOldFlag': timeSlotPBOldFlag
            },
            dataType: "json",
            async: false,
            success: function (data) {

                var minDate = "";
                var maxDate = "";
                var currentDate = "";
                var currentDateTH = "";

                if (data != "" && data != null && data != undefined) {

                    //AWARE_R20.02
                    if (isBillCycleConfig) {
                        //debugger;
                        data.LovValue1 = billCycleTimeSlotDayAdd;
                        data.LovValue2 = billCycleTimeSlotDayLenght;
                        data.DefaultValue = billCycleTimeSlotDtpLenght;
                        //console.log("GetTimeSlotConfigSelectDate : AWARE_R20.02 : _VasSummary : isBillCycleConfig : " + isBillCycleConfig);
                        //console.log("GetTimeSlotConfigSelectDate : AWARE_R20.02 : _VasSummary : BillCycleTimeSlotStartDate : " + billCycleTimeSlotStartDate);
                        //console.log("GetTimeSlotConfigSelectDate : AWARE_R20.02 : _VasSummary : BillCycleTimeSlotDayAdd : " + billCycleTimeSlotDayAdd);
                        //console.log("GetTimeSlotConfigSelectDate : AWARE_R20.02 : _VasSummary : BillCycleTimeSlotDayLenght : " + billCycleTimeSlotDayLenght);
                    }

                    dayTimeslot = data.LovValue2;

                    if (data.LovValue5 == "PULL" || data.LovValue5 == "PUSH")
                        $("#CustomerRegisterPanelModel_ASSIGN_RULE").val(data.LovValue5);
                    else
                        $("#CustomerRegisterPanelModel_ASSIGN_RULE").val("PUSH");

                    //var minDayPlus = parseInt(data.LovValue1, 10) * 24;
                    //var maxDayPlus = parseInt(data.DefaultValue, 10) * 24;

                    //R21.10
                    var defaultDate;
                    if (FlagCall_TIME_SLOT_PB) {
                        var tmpInstallationDateLovValue1 = data.LovValue1.split('-');
                        defaultDate = new Date(parseInt(tmpInstallationDateLovValue1[0]), parseInt(tmpInstallationDateLovValue1[1] - 1), parseInt(tmpInstallationDateLovValue1[2]));

                        //Case Flag CONDITION_TIME_SLOT_PB = Y and LovValue1 < DateTimeNow
                        var dateTimeNow = new Date(parseInt(@DateTime.Now.Year), parseInt(@DateTime.Now.Month) - 1, parseInt(@DateTime.Now.Day));
                        if (defaultDate.getTime() <= dateTimeNow.getTime())
                            defaultDate = new Date(parseInt(@DateTime.Now.Year), parseInt(@DateTime.Now.Month) - 1, parseInt(@DateTime.Now.Day) + parseInt(data.OrderBy, 10));
                    }
                    else {
                        //var defaultDate = new Date(new Date().getTime() + minDayPlus * 60 * 60 * 1000);
                        defaultDate = new Date(parseInt(@DateTime.Now.Year), parseInt(@DateTime.Now.Month) - 1, parseInt(@DateTime.Now.Day) + parseInt(data.LovValue1, 10));
                    }
                    //End R21.10--------

                    var month = defaultDate.getMonth() + 1;
                    var day = defaultDate.getDate();

                    //18.6
                    sessionStorage.setItem('DefaultDateCompare', defaultDate.getDate().toString() + '/' + (defaultDate.getMonth() + 1).toString() + '/' + defaultDate.getFullYear().toString());

                    var minDateTH = (defaultDate.getFullYear() + 543) + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (day < 10 ? '0' : '') + day;

                    var minDateEN = defaultDate.getFullYear() + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (day < 10 ? '0' : '') + day;

                    currentDateTH = (day < 10 ? '0' : '') + day + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (defaultDate.getFullYear() + 543);

                    var currentDateEN = (day < 10 ? '0' : '') + day + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        defaultDate.getFullYear();

                    //R21.10
                    var defaultDateMax;
                    if (FlagCall_TIME_SLOT_PB) {
                        var tmp2InstallationDateLovValue1 = data.LovValue1.split('-');
                        defaultDateMax = new Date(parseInt(tmp2InstallationDateLovValue1[0]), parseInt(tmp2InstallationDateLovValue1[1] - 1), parseInt(tmp2InstallationDateLovValue1[2]) + parseInt(data.DefaultValue, 10));

                        //Case Flag CONDITION_TIME_SLOT_PB = Y and LovValue1 < DateTimeNow
                        var tmp3InstallationDateLovValue1 = data.LovValue1.split('-');
                        var tmpDateLovValue1 = new Date(parseInt(tmp3InstallationDateLovValue1[0]), parseInt(tmp3InstallationDateLovValue1[1] - 1), parseInt(tmp3InstallationDateLovValue1[2]));
                        var dateTimeNow = new Date(parseInt(@DateTime.Now.Year), parseInt(@DateTime.Now.Month) - 1, parseInt(@DateTime.Now.Day));
                        if (tmpDateLovValue1.getTime() <= dateTimeNow.getTime())
                            defaultDateMax = new Date(parseInt(@DateTime.Now.Year), parseInt(@DateTime.Now.Month) - 1, parseInt(@DateTime.Now.Day) + parseInt(data.OrderBy, 10) + parseInt(data.DefaultValue, 10));
                    }
                    else {
                        //var defaultDateMax = new Date(new Date().getTime() + maxDayPlus * 60 * 60 * 1000);
                        defaultDateMax = new Date(parseInt(@DateTime.Now.Year), parseInt(@DateTime.Now.Month) - 1, parseInt(@DateTime.Now.Day) + parseInt(data.DefaultValue, 10));
                    }
                    //End R21.10--------
                    
                    var monthMax = defaultDateMax.getMonth() + 1;
                    var dayMax = defaultDateMax.getDate();

                    var maxDateTH = (defaultDateMax.getFullYear() + 543) + '/' +
                       (monthMax < 10 ? '0' : '') + monthMax + '/' +
                       (dayMax < 10 ? '0' : '') + dayMax;

                    var maxDateEN = defaultDateMax.getFullYear() + '/' +
                        (monthMax < 10 ? '0' : '') + monthMax + '/' +
                        (dayMax < 10 ? '0' : '') + dayMax;

                    minDate = minDateEN;
                    maxDate = maxDateEN;
                    currentDate = currentDateEN;

                    //if (data.Type == "TIME_SLOT_BY_SUBTYPE_HR") {
                        $("#hdTimeSlotRegisterHR").val(data.LovValue3);
                        $("#hdTimeSlotRegisterFlowActionNo").val(data.LovValue4);

                    if ($("#LanguagePage").val() == "1") {
                        $("#hdCurrentDateTime").val(currentDateTH);
                     }
                    else {
                        $("#hdCurrentDateTime").val(currentDateEN);
                     }
                    //}

                    @*var minDayPlus = parseInt(data.LovValue1, 10) * 24;
                    var maxDayPlus = parseInt(data.DefaultValue, 10) * 24;

                    var defaultDate = new Date(new Date().getTime() + minDayPlus * 60 * 1000);
                    var month = defaultDate.getMonth() + 1;
                    var day = defaultDate.getDate();

                    //18.6
                    sessionStorage.setItem('DefaultDateCompare', defaultDate.getDate().toString() + '/' + (defaultDate.getMonth() + 1).toString() + '/' + defaultDate.getFullYear().toString());

                    var minDateTH = (defaultDate.getFullYear() + 543) + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (day < 10 ? '0' : '') + day;

                    var minDateEN = defaultDate.getFullYear() + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (day < 10 ? '0' : '') + day;

                    var currentDateTH = (day < 10 ? '0' : '') + day + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (defaultDate.getFullYear() + 543);

                    var currentDateEN = (day < 10 ? '0' : '') + day + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        defaultDate.getFullYear();

                    var defaultDateMax = new Date(new Date().getTime() + maxDayPlus * 60 * 60 * 1000);
                    var monthMax = defaultDateMax.getMonth() + 1;
                    var dayMax = defaultDateMax.getDate();

                    var maxDateTH = (defaultDateMax.getFullYear() + 543) + '/' +
                        (monthMax < 10 ? '0' : '') + monthMax + '/' +
                        (dayMax < 10 ? '0' : '') + dayMax;

                    var maxDateEN = defaultDateMax.getFullYear() + '/' +
                        (monthMax < 10 ? '0' : '') + monthMax + '/' +
                        (dayMax < 10 ? '0' : '') + dayMax;

                    minDate = minDateEN;
                    maxDate = maxDateEN;
                    currentDate = currentDateEN;*@
                }
                else {

                    $("#CustomerRegisterPanelModel_ASSIGN_RULE").val("PUSH");
                    //var defaultDate = new Date();
                    var defaultDate = new Date(parseInt(@DateTime.Now.Year), parseInt(@DateTime.Now.Month) - 1, parseInt(@DateTime.Now.Day));
                    var month = defaultDate.getMonth() + 1;
                    var day = defaultDate.getDate();

                    var minDateTH = (defaultDate.getFullYear() + 543) + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (day < 10 ? '0' : '') + day;

                    var minDateEN = defaultDate.getFullYear() + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (day < 10 ? '0' : '') + day;

                    currentDateTH = (day < 10 ? '0' : '') + day + '/' +
                      (month < 10 ? '0' : '') + month + '/' +
                      (defaultDate.getFullYear() + 543);

                    var currentDateEN = (day < 10 ? '0' : '') + day + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        defaultDate.getFullYear();

                    //var defaultDateMax = new Date(new Date().getTime() + 1200 * 60 * 60 * 1000);
                    var defaultDateMax = new Date(parseInt(@DateTime.Now.Year), parseInt(@DateTime.Now.Month) - 1, parseInt(@DateTime.Now.Day) + 50);
                    var monthMax = defaultDateMax.getMonth() + 1;
                    var dayMax = defaultDateMax.getDate();

                    var maxDateTH = (defaultDateMax.getFullYear() + 543) + '/' +
                       (monthMax < 10 ? '0' : '') + monthMax + '/' +
                       (dayMax < 10 ? '0' : '') + dayMax;

                    var maxDateEN = defaultDateMax.getFullYear() + '/' +
                        (monthMax < 10 ? '0' : '') + monthMax + '/' +
                        (dayMax < 10 ? '0' : '') + dayMax;


                    minDate = minDateEN;
                    maxDate = maxDateEN;
                    currentDate = currentDateEN;

                    @*var defaultDate = new Date();
                    var month = defaultDate.getMonth() + 1;
                    var day = defaultDate.getDate();

                    var minDateTH = (defaultDate.getFullYear() + 543) + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (day < 10 ? '0' : '') + day;

                    var minDateEN = defaultDate.getFullYear() + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (day < 10 ? '0' : '') + day;

                    var currentDateTH = (day < 10 ? '0' : '') + day + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        (defaultDate.getFullYear() + 543);

                    var currentDateEN = (day < 10 ? '0' : '') + day + '/' +
                        (month < 10 ? '0' : '') + month + '/' +
                        defaultDate.getFullYear();

                    var defaultDateMax = new Date(new Date().getTime() + 1200 * 60 * 60 * 1000);
                    var monthMax = defaultDateMax.getMonth() + 1;
                    var dayMax = defaultDateMax.getDate();

                    var maxDateTH = (defaultDateMax.getFullYear() + 543) + '/' +
                        (monthMax < 10 ? '0' : '') + monthMax + '/' +
                        (dayMax < 10 ? '0' : '') + dayMax;

                    var maxDateEN = defaultDateMax.getFullYear() + '/' +
                        (monthMax < 10 ? '0' : '') + monthMax + '/' +
                        (dayMax < 10 ? '0' : '') + dayMax;


                    minDate = minDateEN;
                    maxDate = maxDateEN;
                    currentDate = currentDateEN;*@
                }

                $('#dtpInstallDateTHVas').datetimepicker({
                    onGenerate: function (ct) {
                        jQuery(this).find('.xdsoft_disabled')
                            .toggleClass('xdsoft_date');
                    },
                    onSelectDate: function (ct, $i) {
                        var ctTh = convertToThaiDate($('#dtpInstallDateTHVas').val());
                        $("#dtpInstallDateTHVas_text").val(ctTh);
                        getAppointment(ctTh, true, "divTimeSlotVas", "N");
                    },
                    minDate: minDate,
                    maxDate: maxDate,
                    value: currentDate
                });

                $("#dtpInstallDateTHVas_text").val(convertToThaiDate($('#dtpInstallDateTHVas').val()));
                $("#dtpInstallDateTHVas_text").click(function () {
                    $("#dtpInstallDateTHVas").trigger('open.xdsoft');
                });

                $('#dtpInstallDateENVas').datetimepicker({
                    onGenerate: function (ct) {
                        jQuery(this).find('.xdsoft_disabled')
                            .toggleClass('xdsoft_date');
                    },
                    onSelectDate: function (ct, $i) {
                        var ctEN = $('#dtpInstallDateENVas').val();
                        getAppointment(ctEN, false, "divTimeSlotVas", "N");
                    },
                    minDate: minDate,
                    maxDate: maxDate,
                    value: currentDate
                });

                if ($("#LanguagePage").val() == "1") {
                    getAppointment(currentDateTH, true, "divTimeSlotVas", "Y");
                }
                else {
                    getAppointment(currentDateEN, false, "divTimeSlotVas", "Y");
                }

                @*$('#dtpInstallDateTHVas').datetimepicker({
                    format: 'd/m/Y',
                    lang: "th",
                    timepicker: false,
                    onSelectDate: function (ct, $i) {
                        var ctTh = convertToThaiDate($('#dtpInstallDateTHVas').val());
                        $("#dtpInstallDateTHVas_text").val(ctTh);
                        getAppointment(ctTh, true, "divTimeSlotVas");
                    },
                    onGenerate: function (ct) {
                        //jQuery(this).find('.xdsoft_date')
                        //  .toggleClass('xdsoft_disabled');
                        jQuery(this).find('.xdsoft_disabled')
                            .toggleClass('xdsoft_date');
                    },
                    autoclose: true,
                    closeOnDateSelect: true,
                    minDate: minDate,
                    maxDate: maxDate,
                    value: currentDate
                });

                $('#dtpInstallDateENVas').datetimepicker({
                    format: 'd/m/Y',
                    yearOffset: 0,
                    lang: 'en',
                    timepicker: false,
                    onSelectDate: function (ct, $i) {
                        var ctEN = $('#dtpInstallDateENVas').val();
                        getAppointment(ctEN, false, "divTimeSlotVas");
                    },
                    onGenerate: function (ct) {
                        jQuery(this).find('.xdsoft_disabled')
                            .toggleClass('xdsoft_date');
                    },
                    autoclose: true,
                    closeOnDateSelect: true,
                    minDate: minDate,
                    maxDate: maxDate,
                    value: currentDate
                });

                if ($("#LanguagePage").val() == "1") {
                    var ctTh = convertToThaiDate($('#dtpInstallDateTHVas').val());
                    $("#dtpInstallDateTHVas_text").val(ctTh);

                    $("#dtpInstallDateTHVas_text").click(function () {
                        $("#dtpInstallDateTHVas").trigger('open.xdsoft');
                    });
                    getAppointment(currentDate, true, "divTimeSlotVas");
                }
                else {
                    getAppointment(currentDate, false, "divTimeSlotVas");
                }

                *@
                ////////////////////////////////////
                //var days = 0;

                //if (data != "" && data != null && data != undefined) {
                //    dayTimeslot = data.LovValue3;

                //    if (data.LovValue1 == "0") {
                //        $('#dtpInstallDateTHVas').datetimepicker({
                //            onGenerate: function (ct) {
                //            },
                //            minDate: '-1970/01/01',
                //            maxDate: '2700/01/01'
                //        });

                //        $('#dtpInstallDateENVas').datetimepicker({
                //            onGenerate: function (ct) {
                //            },
                //            minDate: '-1970/01/01',
                //            maxDate: '2100/01/01'
                //        });
                //    }
                //    else {

                //        days = parseInt(data.LovValue1, 10) * 24;

                //        $('#dtpInstallDateTHVas').datetimepicker({
                //            onGenerate: function (ct) {
                //                jQuery(this).find('.xdsoft_date')
                //                  .toggleClass('xdsoft_disabled');
                //            },
                //            minDate: '1900/12/1',
                //            maxDate: '+1970/01/' + data.LovValue1,
                //        });

                //        $('#dtpInstallDateENVas').datetimepicker({
                //            onGenerate: function (ct) {
                //                jQuery(this).find('.xdsoft_date')
                //                  .toggleClass('xdsoft_disabled');
                //            },
                //            minDate: '1900/12/1',
                //            maxDate: '+1970/01/' + data.LovValue1,
                //        });
                //    }
                //}
                //else {

                //    days = 24;

                //    $('#dtpInstallDateTHVas').datetimepicker({
                //        format: 'd/m/Y',
                //        value: tomorrowDateTH,
                //        yearOffset: 543,
                //        lang: "th",
                //        timepicker: false,
                //        dayOfWeekStart: 3,
                //        onGenerate: function (ct) {
                //            jQuery(this).find('.xdsoft_date')
                //              .toggleClass('xdsoft_disabled');
                //        },
                //        minDate: '1900/12/1',
                //        maxDate: '+1970/01/1',
                //        onSelectDate: function (ct, $i) {
                //            getAppointment(ct, true, "divTimeSlotVas");
                //        }
                //    });

                //    $('#dtpInstallDateENVas').datetimepicker({
                //        format: 'd/m/Y',
                //        value: tomorrowDateEN,
                //        yearOffset: 0,
                //        lang: 'en',
                //        timepicker: false,
                //        onGenerate: function (ct) {
                //            jQuery(this).find('.xdsoft_date')
                //              .toggleClass('xdsoft_disabled');
                //        },
                //        minDate: '1900/12/1',
                //        maxDate: '+1970/01/1',
                //        onSelectDate: function (ct, $i) {
                //            getAppointment(ct, false, "divTimeSlotVas");
                //        }
                //    });
                //}

                //var defaultDate = new Date();

                //if (days != 0)
                //    defaultDate = new Date(new Date().getTime() + days * 60 * 60 * 1000);

                //var month = defaultDate.getMonth() + 1;
                //var day = defaultDate.getDate();

                //if ($("#LanguagePage").val() == "1") {

                //    var currentDateTH = (day < 10 ? '0' : '') + day + '/' +
                //        (month < 10 ? '0' : '') + month + '/' +
                //        (defaultDate.getFullYear() + 543);

                //    $('#dtpInstallDateTHVas').datetimepicker({
                //        value: currentDateTH
                //    });

                //    getAppointment(currentDateTH, true, "divTimeSlotVas")
                //}
                //else {

                //    var currentDateEN = (day < 10 ? '0' : '') + day + '/' +
                //        (month < 10 ? '0' : '') + month + '/' +
                //        defaultDate.getFullYear();

                //    $('#dtpInstallDateENVas').datetimepicker({
                //        value: currentDateEN
                //    });

                //    getAppointment(currentDateEN, false, "divTimeSlotVas")
                //}
            },
        });

        }
        function onChangeTimeFlag(timeFlag, timeSlotId) {
            if ($("#" + timeSlotId).find(".color-green").length > 0) {
                $("#" + timeSlotId).find(".select-header").hide();
                $("#" + timeSlotId).find(".day-item").removeClass("day-item-select");
                $("#" + timeSlotId).find(".day-footer").hide();
                $("#" + timeSlotId).find(".header-label").show();
                $("#" + timeSlotId).find(".header-label-hidden").hide();
                $("#" + timeSlotId).find(".color-green").removeClass().addClass("fa fa-circle color-gray");
                $("#divTextSelectTimeSlot").html("");
                $('#CustomerRegisterPanelModel_FBSSTimeSlot_AppointmentDate').val("");
                $('#CustomerRegisterPanelModel_FBSSTimeSlot_InstallationCapacity').val("");
                $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlot').val("");
                $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlotId').val("");
                $('#L_INSTALL_DATE').val("");
                checkDateTimeSlot = false;
            }
            $(".slot-m").hide();
            $(".slot-a").hide();
            if (timeFlag.value == "M") {
                $(".slot-m").show();
            }
            else {
                $(".slot-a").show();
            }
        }

    function convertToThaiDate(englishDate) {
        var dd = englishDate.substring('0', '2');
        var MM = englishDate.substring('3', '5');
        var yyyy = englishDate.substring('6', '10');
        var year = parseInt(yyyy, 10) + 543;
        return dd + "/" + MM + "/" + year;
    }

    function setFormSummary() {
        $("#lblVasSumSelectVas").text($("#lblSelectVas").text()); //header form summary1
        $("#btnVasSumNextPage").html($("#btnVasNextPage").html());
        $("#btnVasSumBackPage").html($("#btnVasBackPage").html());
        $("#divVasSumFormSummaryDetail").html($("#divSelectValFormSummaryDetail").html());
        $("#divPromotionDetailVasSum").html($("#divPromotionDetail").html());
        if ($("#PlugAndPlayFlow").val() != "Y")
            $("#L_INSTALL_DATE").val("");
    }

    function onBtnVasSumNextPage_Click() {

        var chkInstallDate = true;
        var chkOneLove = false;

        //start check one love

        if ($("#chkLPhone").prop('checked') == true && $("#hdGetVoip").val() == "1") {
            if ($("#txtMobileForward").val() != "" && $("#txtMobileForward").val() != undefined) {
                if ($("#txtMobileForward").val().substr(0, 1) != "0") {
                    toastrErrorMessage("@M_MOBILE_FORWARD");
                    $("#txtMobileForward").removeClass("form-control").addClass("form-control errorinput");
                    chkOneLove = false;
                }
                else {
                    //Call Ajax
                    var OrderRef = "";
                    if ("@VAS" == "2" || "@ViewBag.TopUp" == "1") {
                        OrderRef = "@SffProfileLogID";
                    }
                    else {
                        OrderRef = $("#HdResultId").val();
                    }

                    $.ajax({
                        url: '/VasSummary/GetAisMobile',
                        data: { msisdn: $("#txtMobileForward").val(), orderRef: OrderRef },
                        dataType: "json",
                        type: 'GET',
                        async: false,
                        success: function (response) {
                            if (response) {
                                $("#DisplayVasPackagePanelModel_L_MOBILE_FORWARD_L").val($("#txtMobileForward").val());
                                $("#txtMobileForward").removeClass("form-control errorinput").addClass("form-control");
                                chkOneLove = true;
                            }
                            else {
                                toastrErrorMessage("@M_MOBILE_FORWARD");
                                $("#txtMobileForward").removeClass("form-control").addClass("form-control errorinput");
                                chkOneLove = false;
                            }
                        }
                    });
                }
            }
            else {
                $("#txtMobileForward").removeClass("form-control").addClass("form-control errorinput");
                chkOneLove = false;
            }
        }
        else {
            $("#txtMobileForward").removeClass("form-control errorinput").addClass("form-control");
            chkOneLove = true;
        }

        //end check one love

        if ("@VAS" == "2" || "@ViewBag.TopUp" == "1") {
            //Line 2
            if ($("#hdGetVoip").val() == "1" && $("#hdGetPlayBox").val() == "1" && !$('#divVoipPage').is(':visible')) {
                $('#divPlayBoxPage').hide();
                $('#divVoipPage').show();
                $('#divContactPhone').show();
                $('#divInstallDateVas').show();
            }
            else {
                @*var hourAdd = getTimeSlotConfigSelectDate();

                var d = new Date();

                if (hourAdd != 0)
                    d = new Date(new Date().getTime() + hourAdd * 60 * 60 * 1000);

                var month = d.getMonth() + 1;
                var day = d.getDate();

                var output = (day < 10 ? '0' : '') + day + '/' +
                    (month < 10 ? '0' : '') + month + '/' +
                    d.getFullYear();

                var outputAppointment = d.getFullYear() + '/' +
                    (month < 10 ? '0' : '') + month + '/' +
                    (day < 10 ? '0' : '') + day;

                if ("@ViewBag.TopUp" == "1") {
                    //Line 2 Cust
                    $('#CustomerRegisterPanelModel_FBSSTimeSlot_AppointmentDate').val(outputAppointment);
                    $('#CustomerRegisterPanelModel_FBSSTimeSlot_InstallationCapacity').val("0/10");
                    $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlot').val("08:00-10:00");
                    $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlotId').val("");
                    $("#L_INSTALL_DATE").val(output);
                }
                else {
                    if ($("#hdGetVoip").val() == "1") {
                        if ($("#L_INSTALL_DATE").val() == "" || $("#L_INSTALL_DATE").val() == undefined) {
                            chkInstallDate = false;
                            $("#dtpInstallDateTHVas").removeClass("textFieldDatePicker").addClass("textFieldDatePickerFalse");
                            $("#dtpInstallDateENVas").removeClass("textFieldDatePicker").addClass("textFieldDatePickerFalse");
                        }
                        else {
                            chkInstallDate = true;
                            $("#dtpInstallDateTHVas").removeClass("textFieldDatePickerFalse").addClass("textFieldDatePicker");
                            $("#dtpInstallDateENVas").removeClass("textFieldDatePickerFalse").addClass("textFieldDatePicker");
                        }
                    }
                    else {
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_AppointmentDate').val(outputAppointment);
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_InstallationCapacity').val("0/10");
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlot').val("08:00-10:00");
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlotId').val("");
                        $("#L_INSTALL_DATE").val(output);
                    }
                }*@

                validateInstallDate.push({ id: "VasSumL_MOBILE", condition: "MobileNumber" });

                // R19.11
                if (validateHomePhone) {
                    validateInstallDate.push({ id: "txtVasSumHomePhone", condition: "HomePhoneFixedline" });
                }
                else {
                    $("#txtVasSumHomePhone").removeClass("form-control errorinput ").addClass("form-control");
                    var tmp = validateInstallDate.filter(m => { return m.id != "txtVasSumHomePhone" });
                    validateInstallDate = tmp;
                }

                var chkPhoneNum = ValidationProcessing(validateInstallDate, "errVasSum");
                var chkPhoneNumOr = validateMobileNumberOR("VasSumL_OR", "errVasSum");
                if (chkInstallDate && chkOneLove && chkPhoneNum && chkPhoneNumOr && checkDateTimeSlot) {
                    DataBindPage();
                    $('#page2_2').hide();
                    $('#page4').show();
                }
                else {
                    if (chkOneLove && chkPhoneNum && chkPhoneNumOr) {
                        var temp = "";
                        if ($("#LanguagePage").val() == "1") {
                            temp = "กรุณาระบุข้อมูลให้ถูกต้องและครบถ้วน";
                        }
                        else {
                            temp = "Please Fill In All Required Fields.";
                        }
                        toastrErrorMessage(temp);
                    }
                }
            }
        }
        else {
            //Line 1
            if ($("#hdGetVoip").val() == "1" && $("#hdGetPlayBox").val() == "1" && !$('#divVoipPage').is(':visible')) {
                //Change to VOIP
                $('#divPlayBoxPage').hide();
                $('#divVoipPage').show();

                //script Adobe Analytic
                var lang = $("#LanguagePage").val() == 1 ? "th" : "en";
                digitalData.page = {
                    pageInfo: {
                        pageName: "newfibre:" + lang + ":detailFixline",
                        site: "newfibre",
                        language: lang
                    }
                }
                console.log("page load detailFixline : ", lang);
                
            }
            else {
                if (chkOneLove) {
                    onLoad003();
                    $('#page2_2').hide();
                    $('#page3').show();

                    //script Adobe Analytic
                    var lang = $("#LanguagePage").val() == 1 ? "th" : "en";
                    digitalData.page = {
                        pageInfo: {
                            pageName: "newfibre:" + lang + ":customer",
                            site: "newfibre",
                            language: lang
                        }
                    }
                    console.log("page load customer : ", lang);
                    

                }
            }
        }

        @* if ("@VAS" != "2") {
        //Line 1
        if(chkOneLove){
            onLoad003();
            $('#page2_2').hide();
            $('#page3').show();
        }
    }
    else {
        //Line 2
        //if ($('#ddlDayInstallVasSum').val() != "" || $('#ddlMonthInstallVasSum').val() != "" || $('#ddlYearInstallVasSum').val() != "") {
        //    pushRequireFieldInstallDateVasSum();
        //    chkInstallDate = ValidationProcessing(validateInstallDate, "errVasSum");
        //}
        //else {
        //    popRequireFieldInstallDateVasSum();
        //    $('#ddlDayInstallVasSum').parent().removeClass("styledFalse").addClass("styled");
        //    $('#ddlMonthInstallVasSum').parent().removeClass("styledFalse").addClass("styled");
        //    $('#ddlYearInstallVasSum').parent().removeClass("styledFalse").addClass("styled");
        //}

        if ($("#L_INSTALL_DATE").val() == "" || $("#L_INSTALL_DATE").val() == undefined) {
            chkInstallDate = false;
            $("#dtpInstallDateTHVas").removeClass("textFieldDatePicker").addClass("textFieldDatePickerFalse");
            $("#dtpInstallDateENVas").removeClass("textFieldDatePicker").addClass("textFieldDatePickerFalse");
        }
        else {
            chkInstallDate = true;
            $("#dtpInstallDateTHVas").removeClass("textFieldDatePickerFalse").addClass("textFieldDatePicker");
            $("#dtpInstallDateENVas").removeClass("textFieldDatePickerFalse").addClass("textFieldDatePicker");
        }

        if (chkInstallDate && chkOneLove) {

            //if ($("#ddlDayInstallVasSum :selected").val() == "" || $("#ddlMonthInstallVasSum :selected").val() == "" || $("#ddlYearInstallVasSum :selected").val() == "") {
            //    $('#L_INSTALL_DATE').val("");
            //}
            //else {
            //    var day = $("#ddlDayInstallVasSum :selected").val().length != 2 ? "0" + $("#ddlDayInstallVasSum :selected").val() : $("#ddlDayInstallVasSum :selected").val();
            //    var month = $("#ddlMonthInstallVasSum :selected").val().length != 2 ? "0" + $("#ddlMonthInstallVasSum :selected").val() : $("#ddlMonthInstallVasSum :selected").val();

            //    $('#L_INSTALL_DATE').val(day + "/" + month + "/" + $('#ddlYearInstallVasSum :selected').val());
            //}
            DataBindPage();
            $('#page2_2').hide();
            $('#page4').show();
        }
    }*@

    }

        @*function reserveTimeSlot() {

            var result = false;
        $.ajax({
            type: "GET",
            url: "/CustomerRegister/ReserveTimeSlot",
            data: { 'transactionGuid': $("#hdTransactionGuid").val(), 'timeSlotId': $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlotId').val() },
            dataType: "json",
            async: false,
            success: function (data) {
                if (data != null && data != undefined) {
                    if (data.Return_Code == "1")
                        result = true;
                }
            }
        });

        return result;
    }*@

    function onBtnVasSumBackToVas_Click() {
        $('#divVoipPage').hide();
        $('#divPlayBoxPage').hide();
        $('#divInstallDateVas').hide();

        clearPage2_3();
        $('#page2_2').hide(); // VasSummary
        $('#page2_1').show(); // SelectVas

        //script Adobe Analytic
        var lang = $("#LanguagePage").val() == 1 ? "th" : "en";
        digitalData.page = {
            pageInfo: {
                pageName: "newfibre:" + lang + ":selectVas",
                site: "newfibre",
                language: lang
            }
        }
        console.log("page load selectVas : ", lang);
        
    }

    function onBtnVasSumBackPage_Click() {
            @*if ("@VAS" == "2") {
            //Line 2
            clearPage2_3();
        }*@
        if ("@VAS" == "2" || "@ViewBag.TopUp" == "1") {
            //Line 2
            clearPage2_3();
            $('#page2_2').hide();
            $('#page2_1').show();
        }
        else {
            //Line 1
            $('#hdSelectVas').val("1");
            $('#page2_1').hide();
            $('#page2_2').hide();
            $('#page2').show();
        }
    }

    function setHomePhone() {
        var phone = $("#txtVasSumHomePhone").val();
        var phoneTo = $("#txtVasSumHomePhoneTo").val();
        var result = "";

        if (phone != "" && phoneTo != "")
            result = phone + " Ext." + phoneTo;
        else if (phone != "" && phoneTo == "")
            result = phone;
        else if (phone == "" && phoneTo != "")
            result = "Ext." + phoneTo;

        $("#L_HOME_PHONE").val(result);
    }

    function onChkLPhone_Check() {
        $("#txtMobileForward").val("");
        $("#DisplayVasPackagePanelModel_L_MOBILE_FORWARD_L").val("");

        if ($("#chkLPhone").prop('checked') == true) {
            $("#txtMobileForward").prop('disabled', false);
        }
        else {
            $("#txtMobileForward").prop('disabled', true);
        }
    }

    function clearPage2_3() {
        popRequireFieldInstallDateVasSum();
        $("#txtMobileForward").removeClass("form-control errorinput").addClass("form-control");
        $('#ddlDayInstallVasSum').parent().removeClass("styledFalse").addClass("styled");
        $('#ddlMonthInstallVasSum').parent().removeClass("styledFalse").addClass("styled");
        $('#ddlYearInstallVasSum').parent().removeClass("styledFalse").addClass("styled");

        $('#txtVasSumHomePhone').removeClass("form-control errorinput").addClass("form-control");
        $('#VasSumL_MOBILE').removeClass("form-control errorinput").addClass("form-control");
        $('#VasSumL_OR').removeClass("form-control errorinput").addClass("form-control");
    }

    function pushRequireFieldInstallDateVasSum() {
        validateInstallDate.push({ id: "ddlDayInstallVasSum" });
        validateInstallDate.push({ id: "ddlMonthInstallVasSum" });
        validateInstallDate.push({ id: "ddlYearInstallVasSum" });
    }

    function popRequireFieldInstallDateVasSum() {
        validateInstallDate.pop({ id: "ddlDayInstallVasSum" });
        validateInstallDate.pop({ id: "ddlMonthInstallVasSum" });
        validateInstallDate.pop({ id: "ddlYearInstallVasSum" });
    }

    function setInstallDateVasSum() {

        if ($("#LanguagePage").val() == "1") {
            $("#divEnDatePickerVas").hide();
            $("#divThDatePickerVas").show();

            $("#divEnDatePickerVas").hide();
            $("#divThDatePickerVas").show();
        }
        else {
            $("#divThDatePickerVas").hide();
            $("#divEnDatePickerVas").show();

            $("#divThDatePickerVas").hide();
            $("#divEnDatePickerVas").show();
        }

        var daySelect = $('#ddlDayInstallVasSum :selected').val();
        var monthSelect = $('#ddlMonthInstallVasSum :selected').val();
        var yearSelect = $('#ddlYearInstallVasSum :selected').val();
        var numOfDay = chkNumOfDayVasSum(daySelect, monthSelect, yearSelect);

        $('#ddlDayInstallVasSum').empty();
        $('#ddlMonthInstallVasSum').empty();
        $('#ddlYearInstallVasSum').empty();

        var currentMonth = new Date().getMonth() + 1;
        var tomorrowDay = new Date().getDate() + 1;
        var currentYear = new Date().getFullYear();

        if ($("#LanguagePage").val() == "1")
            currentYear += 543;

        if (yearSelect == currentYear) {
        }
        else {
            currentMonth = 1;
        }

        if (monthSelect == currentMonth && yearSelect == currentYear) {
        }
        else {
            tomorrowDay = 1;
        }

        $('#ddlDayInstallVasSum').append(getDayVasSum(daySelect, "@L_INSTALLATION_DATE", tomorrowDay, numOfDay, false, false));
        $('#ddlMonthInstallVasSum').append(getMonthVasSum(monthSelect, "@L_MONTH", currentMonth, 12, false, false));
        $('#ddlYearInstallVasSum').append(getYearVasSum(yearSelect, "@L_YEAR", 0, -1, false, false));
    }

    function chkNumOfDayVasSum(daySelect, monthSelect, yearSelect) {
        var numOfDay = 0;

        if (monthSelect == "2") {
            if (yearSelect != "" && yearSelect != undefined) {
                var isleap = (yearSelect % 4 == 0 && (yearSelect % 100 != 0 || yearSelect % 400 == 0));
                if (isleap == false) {
                    numOfDay = 28;
                }
                else {
                    numOfDay = 29;
                }
            }
            else {
                numOfDay = 29;
            }
        }
        else if (monthSelect == "4" || monthSelect == "6" || monthSelect == "9" || monthSelect == "11") {
            numOfDay = 30;
        }
        else {
            numOfDay = 31;
        }

        return numOfDay;
    }

    function getYearVasSum(yearSelect, label, yearLimitLow, yearLimitHigh, defaultFromSFF, disableFirstRow) {
        var currentYear = new Date().getFullYear();

        if ($("#LanguagePage").val() == "1")
            currentYear += 543;

        var limitLowYear = currentYear - yearLimitLow;
        var limitHighYear = currentYear - yearLimitHigh;

        var strBuilder = "";

        if (disableFirstRow) {
            strBuilder = "<option value='' disabled selected >" + label + "</option>";
        }
        else {
            strBuilder = "<option value='' selected >" + label + "</option>";
        }

        for (var i = limitLowYear; i <= limitHighYear ; i++) {
            if ((i == $("#tYY").val() && defaultFromSFF == true) || i == yearSelect)
                strBuilder += "<option value='" + i + "' selected>" + i + "</option>";
            else
                strBuilder += "<option value='" + i + "' >" + i + "</option>";
        }

        return strBuilder;
    }

    function getMonthVasSum(monthSelect, label, monthLimitLow, monthLimitHigh, defaultFromSFF, disableFirstRow) {

        var strBuilder = "";

        if (disableFirstRow) {
            strBuilder = "<option value='' disabled selected >" + label + "</option>";
        }
        else {
            strBuilder = "<option value='' selected >" + label + "</option>";
        }

        var arrayMonth;

        if ($("#LanguagePage").val() == "1") {
            arrayMonth = ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"];
        }
        else {
            arrayMonth = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        }

        monthLimitLow--;
        monthLimitHigh--;

        for (var i = monthLimitLow; i <= monthLimitHigh; i++) {
            var value = i + 1;
            if (value == $("#tMM").val() && defaultFromSFF == true) {
                strBuilder += "<option value='" + value + "' selected>" + arrayMonth[i] + "</option>";
                $("#tMM").val("");
            }
            else if (value == monthSelect)
                strBuilder += "<option value='" + value + "' selected>" + arrayMonth[i] + "</option>";
            else
                strBuilder += "<option value='" + value + "' >" + arrayMonth[i] + "</option>";
        }

        return strBuilder;
    }

    function getDayVasSum(daySelect, label, dayLimitLow, dayLimitHigh, defaultFromSFF, disableFirstRow) {
        var strBuilder = "";

        if (disableFirstRow) {
            strBuilder = "<option value='' disabled selected >" + label + "</option>";
        }
        else {
            strBuilder = "<option value='' selected >" + label + "</option>";
        }

        for (var i = dayLimitLow; i <= dayLimitHigh; i++) {
            if ($("#tDD").val() == i && defaultFromSFF == true) {
                strBuilder += "<option value='" + i + "' selected>" + i + "</option>";
                $("#tDD").val("");
            }
            else if (daySelect == i)
                strBuilder += "<option value='" + i + "' selected>" + i + "</option>";
            else
                strBuilder += "<option value='" + i + "' >" + i + "</option>";
        }

        return strBuilder;
    }

    function getAppointment(e, isThai, timeSlotId, setDefault) {
        $("#divResponsiveTimeSLotVas").hide();
        $('#divTextSelectTimeSlot').html("");
        $("#divTimeFlag").html("");

        //R20.1
        var accessMode = "";
        var serviceCode = "";
        var tasktype = "";
        var tmp = $('select[name=ddlNewPlaybox]').val();
        serviceCode = sessionStorage.getItem('SERVICE_CODE');
        if (sessionStorage.getItem('ACCESS_MODE') == null) {
            accessMode = "@AccessModeByPass";
            sessionStorage.setItem('ACCESS_MODE', accessMode);
        }
        else {
            accessMode = sessionStorage.getItem('ACCESS_MODE');
        }

        var subDistrict = $("#CustomerRegisterPanelModel_installAddress2").val();
        var postalCode = $("#CustomerRegisterPanelModel_installAddress5").val();

        //R20.5 Service Level
        var eventRule = "";
        var serviceLevel = sessionStorage.getItem("ServiceLevel");
        var areaRegion = $("#CoveragePanelModel_Address_AreaRegion").val();
        var PlayBoxCountOld = "";
        var PlayBoxCountNew = "";
        var configLineLOV = "_PBOX_JOIN";

        if (accessMode == "" || accessMode == null || accessMode == undefined) {
            accessMode = "PBOX";
        }
        else {
            //R20.1PP Hide Timeslot Playbox 2,3 case tasktype = MA set subDistrict,postalCode ว่าง (ถ้าจะให้ Show Timeslot subDistrict,postalCode ไม่ต้องเซต ว่าง) (Edit 2020-01-15)
            tasktype = tmp == "" || tmp == null || tmp == undefined ? "" : "MA";

            if (tasktype == "MA") { //กล่อง 2,3
                //R20.6 Service Level
                //subDistrict = ""; postalCode = ""; //Show TimeSLot Playbox 2,3 Comment subDistrict,postalCode
                //serviceLevel = ""; //Comment serviceLevel
                eventRule = ""; areaRegion = "";
                PlayBoxCountOld = $("#pBoxCount").val();
                PlayBoxCountNew = $('select[name=ddlNewPlaybox] option:selected').text();
                configLineLOV = "_PBOX_MA";
            }
            else { //กล่อง Main
                eventRule = "Join";
                configLineLOV = "_PBOX_JOIN";
            }
        }

        var installDate = e;
        var tmpAisAirNumber = "";
        if (sessionStorage.getItem("AisAirNumber") == null) {
            tmpAisAirNumber = '@AisAirNumberByPass';
            sessionStorage.setItem("AisAirNumber", tmpAisAirNumber);
        }
        else {
            tmpAisAirNumber = sessionStorage.getItem("AisAirNumber");
        }

        $.ajax({
            type: "POST",
            url: "/CustomerRegister/GetAppointment",
            data: {
                'installation_Date': installDate,
                'productSpecCode': serviceCode,
                'access_Mode': accessMode,
                'address_Id': $("#ZTEVasAddressID").val(),
                'days': dayTimeslot,
                'subDistrict': subDistrict,
                'postalCode': postalCode,
                'SubAccessMode': "",
                'taskType': tasktype,
                'lineSelect': 2,
                'isThai': isThai, 'timeSlotId': timeSlotId, 'smallSize': true,
                'timeSlotRegisterFlag': "Y",
                'timeSlotRegisterHR': $("#hdTimeSlotRegisterHR").val(),
                'timeSlotRegisterFlowActionNo': $("#hdTimeSlotRegisterFlowActionNo").val(),
                'installation_DateTimeNow': $("#hdCurrentDateTime").val(),
                'AisAirNumber': tmpAisAirNumber,
                //R20.5 Service Level
                "serviceLevel": serviceLevel,
                "areaRegion": areaRegion,
                "eventRule": eventRule,
                "PlayBoxCountOld": PlayBoxCountOld,
                "PlayBoxCountNew": PlayBoxCountNew,
                "SpecialSkilL": "",
                "configLineLOV": configLineLOV
            },
            dataType: "json",
            beforeSend: function () {
                $("#" + timeSlotId).html("");
                $("#divTimeSlotVasRemark").html("");
                $("#divResponsiveTimeSLotWarning").show();
            },
            success: function (data) {

                $("#" + timeSlotId).html(data.timeSlotData);
                $("#divTimeSlotVasRemark").html(data.timeSlotRemark);

                var dataCount = data.timeSlotData.toString().indexOf("List data = 0");
                var dataNull = data.timeSlotData.toString().indexOf(" Data null");
                var dataError = data.timeSlotData.toString().indexOf("Data error");

                //set dllTimeFlage
                if (data.dllTimeFlag != "") {
                    $("#divTimeFlag").html(data.dllTimeFlag);
                    $('#dll_TimeFlag').select2();
                    $(".slot-m").hide();
                    $(".slot-a").hide();
                    if ($('#dll_TimeFlag :selected').val() == "M") {
                        $(".slot-m").show();
                    }
                    else {
                        $(".slot-a").show();
                    }
                }

                if (dataCount != "-1" || dataNull != "-1" || dataError != "-1") {

                    // set format AppointmentDate
                    var tmpFBSSAppointmentDateData = $("#" + timeSlotId).find("input[name='FBSSAppointmentDate']").val();
                    var p = tmpFBSSAppointmentDateData.split('/');
                    var tmp_appointment_date = p[0] + "/" + p[1] + "/" + p[2];

                    $('#CustomerRegisterPanelModel_FBSSTimeSlot_AppointmentDate').val(tmp_appointment_date);
                    $('#CustomerRegisterPanelModel_FBSSTimeSlot_InstallationCapacity').val($("#" + timeSlotId).find("input[name='FBSSInstallationCapacity']").val());
                    $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlot').val($("#" + timeSlotId).find("input[name='FBSSTimeSlot']").val());
                    $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlotId').val($("#" + timeSlotId).find("input[name='TimeSlotId']").val());
                    $('#L_INSTALL_DATE').val($("#" + timeSlotId).find("input[name='FBSSInstallDate']").val());

                    checkDateTimeSlot = true;
                } else {
                    $("#divResponsiveTimeSLotVas").show();
                    var getDiv = "";
                    var parentDiv = "";

                    // Check Set Default and Check Show Time Slot

                    console.log("------------------------------------------------------------------------");
                    console.log($("#" + timeSlotId).find(".color-green").length);
                    console.log(!$("#" + timeSlotId).is(":hidden"));
                    console.log($("#" + timeSlotId).find(".color-green").length > 0 && !$("#" + timeSlotId).is(":hidden"));
                    console.log(!$("#divResponsiveTimeSLot").is(":hidden"));
                    console.log("------------------------------------------------------------------------");

                    if ($("#" + timeSlotId).find(".color-green").length > 0) {

                        getDiv = $("#" + timeSlotId).find(".color-green").parent().parent();
                        parentDiv = getDiv.parent();

                        $(parentDiv).find(".select-header").show();
                        $(parentDiv).find(".day-item").addClass("day-item-select");
                        $(parentDiv).find(".day-footer").show();

                        $(parentDiv).find(".header-label").hide();
                        $(parentDiv).find(".header-label-hidden").show();

                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_AppointmentDate').val($(getDiv).find("input[name='FBSSAppointmentDate']").val());
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_InstallationCapacity').val($(getDiv).find("input[name='FBSSInstallationCapacity']").val());
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlot').val($(getDiv).find("input[name='FBSSTimeSlot']").val());
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlotId').val($(getDiv).find("input[name='TimeSlotId']").val());
                        $('#L_INSTALL_DATE').val($(getDiv).find("input[name='FBSSInstallDate']").val());

                        checkDateTimeSlot = true;

                        var textSelectTimeSlot = "@DISPLAY_TIMESLOT_PBOX_JOIN"; //กล่อง Main
                        if (tasktype == "MA") textSelectTimeSlot = "@DISPLAY_TIMESLOT_PBOX_MA"; //กล่อง 2,3
                        textSelectTimeSlot = textSelectTimeSlot.replace("{TIMESLOT}", $(getDiv).find("input[name='FBSSTimeSlot']").val());
                        $('#divTextSelectTimeSlot').html(textSelectTimeSlot);
                    }
                    else {
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_AppointmentDate').val("");
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_InstallationCapacity').val("");
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlot').val("");
                        $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlotId').val("");
                        $('#L_INSTALL_DATE').val("");

                        checkDateTimeSlot = false;
                    }

                }

            },
            complete: function () {
                $("#divResponsiveTimeSLotWarning").hide();
            }
        });
    }

    function onDayItemClick(t, timeSlotId) {
        var parentDiv = $(t).parent();

        if ($(t).find(".color-red").length > 0) {
            return;
        }

        $("#" + timeSlotId).find(".select-header").hide();
        $("#" + timeSlotId).find(".day-item").removeClass("day-item-select");
        $("#" + timeSlotId).find(".day-footer").hide();
        $("#" + timeSlotId).find(".header-label").show();
        $("#" + timeSlotId).find(".header-label-hidden").hide();
        $('#divTextSelectTimeSlot').html("");

        $('#CustomerRegisterPanelModel_FBSSTimeSlot_AppointmentDate').val("");
        $('#CustomerRegisterPanelModel_FBSSTimeSlot_InstallationCapacity').val("");
        $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlot').val("");
        $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlotId').val("");
        $('#L_INSTALL_DATE').val("");

        if ($(t).find(".color-green").length > 0) {
            $(t).find(".color-green").removeClass().addClass("fa fa-circle color-gray");
            checkDateTimeSlot = false;
            return;
        }
        else if ($("#" + timeSlotId).find(".color-green").length > 0) {
            $("#" + timeSlotId).find(".color-green").removeClass().addClass("fa fa-circle color-gray");
        }

        if ($(t).find(".color-gray").length > 0) {
            $(parentDiv).find(".select-header").show();
            $(parentDiv).find(".day-item").addClass("day-item-select");
            $(parentDiv).find(".day-footer").show();

            $(parentDiv).find(".header-label").hide();
            $(parentDiv).find(".header-label-hidden").show();

            $(t).find(".color-gray").removeClass("color-gray").addClass("color-green");

            if ($("#PlugAndPlayFlow").val() != "Y") {
                $('#CustomerRegisterPanelModel_FBSSTimeSlot_AppointmentDate').val($(t).find("input[name='FBSSAppointmentDate']").val());
                $('#CustomerRegisterPanelModel_FBSSTimeSlot_InstallationCapacity').val($(t).find("input[name='FBSSInstallationCapacity']").val());
                $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlot').val($(t).find("input[name='FBSSTimeSlot']").val());
                $('#CustomerRegisterPanelModel_FBSSTimeSlot_TimeSlotId').val($(t).find("input[name='TimeSlotId']").val());
                $('#L_INSTALL_DATE').val($(t).find("input[name='FBSSInstallDate']").val());
                checkDateTimeSlot = true;
                
                var tmp = $('select[name=ddlNewPlaybox]').val();
                var tasktype = (tmp == "" || tmp == null || tmp == undefined) ? "" : "MA";

                var textSelectTimeSlot = "@DISPLAY_TIMESLOT_PBOX_JOIN"; //กล่อง Main
                if (tasktype == "MA") textSelectTimeSlot = "@DISPLAY_TIMESLOT_PBOX_MA"; //กล่อง 2,3
                textSelectTimeSlot = textSelectTimeSlot.replace("{TIMESLOT}", $(t).find("input[name='FBSSTimeSlot']").val());
                $('#divTextSelectTimeSlot').html(textSelectTimeSlot);
            }
        }
    }

    </script>
