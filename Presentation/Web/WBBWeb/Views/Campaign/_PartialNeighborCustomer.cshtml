@using WBBEntity.PanelModels
@model List<WBBEntity.PanelModels.CustomerNeighbor>
@{
    string L_NEIGHBOR_HEADER_INFOMATION = "";
    string L_SURNAME = "";
    string L_NAME = "";
    string L_NEIGHBOR_EMAIL = "";
    string L_NEIGHBOR_CONTACT_NUMBER = "";
    string L_NEIGHBOR_ADDRESS = "";
    string L_NEIGHBOR_SELECT_TYPE = "";
    string L_NEIGHBOR_BUILDING = "";
    string L_NEIGHBOR_VILLAGE = "";
    string L_NEIGHBOR_VILLAGE_NAME = "";
    string L_NEIGHBOR_BUILDING_NAME = "";
    string L_FULL_ADDRESS = "";
    string L_NEIGHBOR_PROVINCE = "";
    string L_NEIGHBOR_SUB_DISTRICT = "";
    string L_NEIGHBOR_DISTRICT = "";
    string L_NEIGHBOR_POSTAL_CODE = "";
    string L_NEIGHBOR_HOUSE_NO = "";
    string L_NEIGHBOR_SOI = "";
    string L_NEIGHBOR_ROAD = "";
    string L_NEIGHBOR_CONTACT_TIME = "";
    string L_PLEASE_SELECT = "";
    string L_NEIGHBOR_LINE_ID = "";
    string L_NEIGHBOR_CONDITION = "";
    string L_NEIGHBOR_CONDITION_LOADING_PACKAGE = "";
    string L_NEIGHBOR_YOUR_REWARDS = "";

    if (ViewBag.LabelFBBOR021 != null)
    {
        var LabelFBBOR021 = (List<LovScreenValueModel>)ViewBag.LabelFBBOR021;
        L_FULL_ADDRESS = LabelFBBOR021.Any(c => c.Name == "L_FULL_ADDRESS") ? LabelFBBOR021.FirstOrDefault(c => c.Name == "L_FULL_ADDRESS").DisplayValue : "";
    }

    if (ViewBag.LabelFBBOR022 != null)
    {
        var LabelFBBOR022 = (List<LovScreenValueModel>)ViewBag.LabelFBBOR022;
        L_NEIGHBOR_HEADER_INFOMATION = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_HEADER_INFOMATION") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_HEADER_INFOMATION").DisplayValue : "";
        L_NAME = LabelFBBOR022.Any(c => c.Name == "L_NAME") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NAME").DisplayValue : "";
        L_SURNAME = LabelFBBOR022.Any(c => c.Name == "L_SURNAME") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_SURNAME").DisplayValue : "";
        L_NEIGHBOR_CONTACT_NUMBER = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_CONTACT_NUMBER") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_CONTACT_NUMBER").DisplayValue : "";
        L_NEIGHBOR_EMAIL = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_EMAIL") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_EMAIL").DisplayValue : "";
        L_NEIGHBOR_ADDRESS = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_ADDRESS") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_ADDRESS").DisplayValue : "";
        L_NEIGHBOR_SELECT_TYPE = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_SELECT_TYPE") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_SELECT_TYPE").DisplayValue : "";
        L_NEIGHBOR_BUILDING = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_BUILDING") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_BUILDING").DisplayValue : "";
        L_NEIGHBOR_VILLAGE = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_VILLAGE") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_VILLAGE").DisplayValue : "";
        L_NEIGHBOR_VILLAGE_NAME = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_VILLAGE_NAME") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_VILLAGE_NAME").DisplayValue : "";
        L_NEIGHBOR_BUILDING_NAME = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_BUILDING_NAME") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_BUILDING_NAME").DisplayValue : "";
        L_NEIGHBOR_PROVINCE = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_PROVINCE") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_PROVINCE").DisplayValue : "";
        L_NEIGHBOR_DISTRICT = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_DISTRICT") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_DISTRICT").DisplayValue : "";
        L_NEIGHBOR_SUB_DISTRICT = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_SUB_DISTRICT") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_SUB_DISTRICT").DisplayValue : "";
        L_NEIGHBOR_POSTAL_CODE = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_POSTAL_CODE") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_POSTAL_CODE").DisplayValue : "";
        L_NEIGHBOR_HOUSE_NO = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_HOUSE_NO") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_HOUSE_NO").DisplayValue : "";
        L_NEIGHBOR_SOI = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_SOI") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_SOI").DisplayValue : "";
        L_NEIGHBOR_ROAD = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_ROAD") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_ROAD").DisplayValue : "";
        L_NEIGHBOR_CONTACT_TIME = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_CONTACT_TIME") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_CONTACT_TIME").DisplayValue : "";
        L_PLEASE_SELECT = LabelFBBOR022.Any(c => c.Name == "L_PLEASE_SELECT") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_PLEASE_SELECT").DisplayValue : "";
        L_NEIGHBOR_LINE_ID = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_LINE_ID") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_LINE_ID").DisplayValue : "";
        L_NEIGHBOR_CONDITION = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_CONDITION") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_CONDITION").DisplayValue : "";
        L_NEIGHBOR_CONDITION_LOADING_PACKAGE = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_CONDITION_LOADING_PACKAGE") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_CONDITION_LOADING_PACKAGE").DisplayValue : "";
        L_NEIGHBOR_YOUR_REWARDS = LabelFBBOR022.Any(c => c.Name == "L_NEIGHBOR_YOUR_REWARDS") ? LabelFBBOR022.FirstOrDefault(c => c.Name == "L_NEIGHBOR_YOUR_REWARDS").DisplayValue : "";
    }

    string FBB_Con_CharNotonName = "";
    string FBB_Input_MobileNo = "";
    string FBB_Con_Input_Building = "";
    string FBB_Con_Input_Home_Number = "";
    string FBB_Con_Input_Soi = "";
    string FBB_Con_Input_Road = "";
    string FBB_Con_Input_Line_Id = "";

    if (ViewBag.FbbConstant != null)
    {
        var FbbConstant = (List<FbbConstantModel>)ViewBag.FbbConstant;

        FBB_Con_CharNotonName = FbbConstant.Any(f => f.Field == "Char Not on Name") ? FbbConstant.First(f => f.Field == "Char Not on Name").Validation : "";
        FBB_Input_MobileNo = FbbConstant.Any(f => f.Field == "Input_MobileNo") ? FbbConstant.First(f => f.Field == "Input_MobileNo").Validation : "";
        FBB_Con_Input_Building = FbbConstant.Any(f => f.Field == "Input BUILDING_NAME") ? FbbConstant.First(f => f.Field == "Input BUILDING_NAME").Validation : "";
        FBB_Con_Input_Home_Number = FbbConstant.Any(f => f.Field == "Input_Home_Number") ? FbbConstant.First(f => f.Field == "Input_Home_Number").Validation : "";
        FBB_Con_Input_Soi = FbbConstant.Any(f => f.Field == "Input_Soi") ? FbbConstant.First(f => f.Field == "Input_Soi").Validation : "";
        FBB_Con_Input_Road = FbbConstant.Any(f => f.Field == "Input_Road") ? FbbConstant.First(f => f.Field == "Input_Road").Validation : "";
        FBB_Con_Input_Line_Id = FbbConstant.Any(f => f.Field == "Input LINE_ID") ? FbbConstant.First(f => f.Field == "Input LINE_ID").Validation : "";

    }
}

@if (Model != null)
{
    for(int index = 1 ; index <= Model.Count() ; index ++)
    {
<div id="@("Customer" + index)" class="Customer" style="display: none">
    <h4 class="page-header tgreen">@L_NEIGHBOR_HEADER_INFOMATION @index</h4>

    @*ชื่อ , นามสกุล*@
    <div class="row">
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_NAME", L_NAME)
            @Html.TextBox("CustomerNeighborList[" + index + "].Name", Model[index - 1].Name, new { @class = "form-control", @title = L_NAME, @maxlength = 50, @onkeyup = "nameKeyup(this)" })
        </div>
        <div class="col-xs-2 col-sm-2">
        </div>
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_SURNAME", L_SURNAME)
            @Html.TextBox("CustomerNeighborList[" + index + "].Surname", Model[index - 1].Surname, new { @class = "form-control", @title = L_SURNAME, @maxlength = 50, @onkeyup = "nameKeyup(this)" })
        </div>
        <p class="clearfix"></p>
    </div>

    @*เบอร์ที่สะดวกในการติดต่อกลับ , ของรางวัล*@
    <div class="row">
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_CONTACT_MOBILE", L_NEIGHBOR_CONTACT_NUMBER)
            @Html.TextBox("CustomerNeighborList[" + index + "].ContactNo", Model[index - 1].ContactNo, new { id = "ContactNo" + index, @class = "form-control", @title = L_NEIGHBOR_CONTACT_NUMBER, @maxlength = 10, @onkeyup = "contactNoKeyup(this)", @onfocusout = "contactNoFocusout(this)" })
            @Html.Hidden("CustomerNeighborList[" + index + "].IsAisMobile", "", new { id = "IsAisMobile" + index })
            @Html.Hidden("CustomerNeighborList[" + index + "].OldContactNo", "", new { id = "OldContactNo" + index })
        </div>
        <div class="col-xs-2 col-sm-2">
            <p class="clearfix"></p>
            <p class="clearfix"></p>
            <p class="clearfix"></p>
            <div id=@("IsAIS"+ index) class="isAisImage" style="display: none;">
                <img src="../Images/is_ais.png" alt="" style="max-width: none !important; width: 30px; height: 30px; color: white;">
            </div>
        </div>
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_YOUR_REWARDS", L_NEIGHBOR_YOUR_REWARDS)
            <select class="select rewards" style="width: 100%" id="@("Rewards" + index)" name="@("CustomerNeighborList[" + index + "].Rewards")">
                <option disabled selected value="">@L_PLEASE_SELECT</option>
            </select>
        </div>
        <p class="clearfix"></p>
    </div>

    @*Line ID , อีเมลล์*@
    @*<div class="row">
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_LINE_ID", L_NEIGHBOR_LINE_ID)
            @Html.TextBox("CustomerNeighborList[" + index + "].LineId", Model[index - 1].LineId, new { @class = "form-control", @title = L_NEIGHBOR_LINE_ID, @maxlength = 100, @onkeyup = "lineIdKeyup(this)" })
        </div>
        <div class="col-xs-2 col-sm-2"></div>
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_EMAIL", L_NEIGHBOR_EMAIL)
            @Html.TextBox("CustomerNeighborList[" + index + "].Email", Model[index - 1].Email, new { @class = "form-control", @title = L_NEIGHBOR_EMAIL, @maxlength = 100 })

        </div>
        <p class="clearfix"></p>
    </div>*@

    <p class="clearfix"></p>

    @*Label ที่อยู่ที่ต้องการติดตั้ง*@
    <div class="row">
        <div class="col-xs-10">
            @Html.Label("L_INSTALL_ADDRESS", L_NEIGHBOR_ADDRESS)
        </div>
    </div>

    <p class="clearfix"></p>

    @*Label เลือกประเภท*@
    <div class="row">
        <div class="col-xs-10">
            @Html.Label("L_SELECT_ADDRESS_TYPE", L_NEIGHBOR_SELECT_TYPE)
        </div>
    </div>

    @*RadioButton คอนโด/อาคาร , หมู่บ้าน*@
    <div class="row">
        <div class="col-xs-10">
            <label for="R_BUILD">
                @L_NEIGHBOR_BUILDING
                <input type="radio" class="rdoBuild" name="@("R_BUILD" + index)" id="@("rdoBuild" + index)" value="B" checked="checked" onclick="onBuildChange(this)">
            </label>
            &nbsp;&nbsp;
            <label for="R_MOOBAN">
                @L_NEIGHBOR_VILLAGE
                <input type="radio" name="@("R_BUILD" + index)" id="@("rdoMooban" + index)" value="V" onclick="onBuildChange(this)">
            </label>

            @Html.Hidden("CustomerNeighborList[" + index + "].SelectAddressType", "B", new { @class = "selectAddressType" })
        </div>
        <p class="clearfix"></p>
    </div>

    @*ที่อยู่ (เต็ม)*@
    @*<div class="row">
            <div class="col-xs-10  col-sm-5">
                <div id="@("divFullAddress" + index)">
                    @Html.Label("L_FULL_ADDRESS", L_FULL_ADDRESS)
                </div>
                @Html.TextArea("CustomerNeighborList[" + index + "].FullAddress", Model[index - 1].FullAddress, new { @class = "form-control", @maxlength = 1000, rows = "5" })
            </div>
            <p class="clearfix"></p>
        </div>*@

    @*ชื่อหมู่บ้าน , ชื่อคอนโด*@
    <div class="row">
        <div class="col-xs-10  col-sm-5">
            <div id="@("divCondo" + index)">
                @Html.Label("L_BUILDING_NAME", L_NEIGHBOR_BUILDING_NAME)
            </div>
            <div id="@("divMoban" + index)" style="display: none;">
                @Html.Label("L_VILLAGE_NAME", L_NEIGHBOR_VILLAGE_NAME)
            </div>
            @Html.TextBox("CustomerNeighborList[" + index + "].Building", Model[index - 1].Building, new { @class = "form-control", @maxlength = 255, @onkeyup = "buildingKeyup(this)" })
        </div>
        <p class="clearfix"></p>
    </div>

    @*จังหวัด , อำเภอ/เขต*@
    <div class="row">
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_PROVINCE", L_NEIGHBOR_PROVINCE)
            <select class="select province" style="width: 100%" id="@("Province" + index)" name="@("CustomerNeighborList[" + index + "].Province")" onchange="onProvinceChange(this)">
                <option disabled selected value="">@L_NEIGHBOR_PROVINCE</option>
            </select>
            @*<select class="select province" style="width: 100%" id="@("Province" + index)" name="@("CustomerNeighborList[" + index + "].Province")">
                    <option disabled selected value="">@L_NEIGHBOR_PROVINCE</option>
                </select>*@
        </div>
        <div class="col-xs-2 col-sm-2"></div>
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_DISTRICT", L_NEIGHBOR_DISTRICT)
            <select class="select district" style="width: 100%" id="@("District" + index)" name="@("CustomerNeighborList[" + index + "].District")" onchange="onAmphurChange(this)">
                <option disabled selected value="">@L_NEIGHBOR_DISTRICT</option>
            </select>
        </div>
        <p class="clearfix"></p>
    </div>

    @*ตำบล/แขวง , รหัสไปรษณีย์*@
    <div class="row">
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_SUB_DISTRICT", L_NEIGHBOR_SUB_DISTRICT)
            <select class="select subDistrict" style="width: 100%" id="@("SubDistrict" + index)" name="@("CustomerNeighborList[" + index + "].SubDistrict")" onchange="onTumbolChange(this)">
                <option disabled selected value="">@L_NEIGHBOR_SUB_DISTRICT</option>
            </select>
        </div>
        <div class="col-xs-2 col-sm-2">
        </div>
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_POSTAL_CODE", L_NEIGHBOR_POSTAL_CODE)
            <select class="select postalCode" style="width: 100%" id="@("PostalCode" + index)" name="@("CustomerNeighborList[" + index + "].PostalCode")" onchange="onZipCodeChange(this)">
                <option disabled selected value="">@L_NEIGHBOR_POSTAL_CODE</option>
            </select>
        </div>
        <p class="clearfix"></p>
    </div>

    @*บ้านเลขที่ , ซอย*@
    <div class="row">
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_HOUSE_NO", L_NEIGHBOR_HOUSE_NO)
            @Html.TextBox("CustomerNeighborList[" + index + "].HouseNo", Model[index - 1].HouseNo, new { @class = "form-control", @title = L_NEIGHBOR_HOUSE_NO, @maxlength = 20, @onkeyup = "houseNoKeyup(this)" })
        </div>
        <div class="col-xs-2 col-sm-2"></div>
        <div class="col-xs-10 col-sm-5">
            @Html.Label("L_SOI", L_NEIGHBOR_SOI)
            @Html.TextBox("CustomerNeighborList[" + index + "].Soi", Model[index - 1].Soi, new { @class = "form-control", @title = L_NEIGHBOR_SOI, @maxlength = 50, @onkeyup = "soiKeyup(this)" })
        </div>
        <p class="clearfix"></p>
    </div>

    @*ถนน*@
    <div class="row">
        <div class="col-xs-10  col-sm-5">
            @Html.Label("L_ROAD", L_NEIGHBOR_ROAD)
            @Html.TextBox("CustomerNeighborList[" + index + "].Road", Model[index - 1].Road, new { @class = "form-control", @title = L_NEIGHBOR_ROAD, @maxlength = 50, @onkeyup = "roadKeyup(this)" })

        </div>
        <p class="clearfix"></p>
    </div>

    @*เวลาสะดวกในการติดต่อกลับ*@
    <div class="row">
        <div class="col-xs-10  col-sm-5">
            @Html.Label("L_CONTACT_TIME", L_NEIGHBOR_CONTACT_TIME)
            <select class="select contactTime" style="width: 100%" id="@("ContactTime" + index)" name="@("CustomerNeighborList[" + index + "].ContactTime")">
                <option disabled="disabled" selected="selected">@L_PLEASE_SELECT</option>
            </select>
        </div>
        <p class="clearfix"></p>
    </div>

    <p class="clearfix"></p>

</div>
    }
    
    <div class="col-md-12 text-center chkCondition Customer" style="display: none">
        <p class="clearfix"></p>
        <label class="checkbox-inline text-center">
            <input type="checkbox" id="chkCondition" name="chkCondition" />
            @L_NEIGHBOR_CONDITION
            <a target="_blank" style="text-decoration: underline;" onclick="$('#aCondition').click();">@L_NEIGHBOR_CONDITION_LOADING_PACKAGE</a>
        </label>
        <p class="clearfix"></p>
    </div>
    
}

<script type="text/javascript">

    $(document).ready(function() {
        getProvince();
        getContactTime();
        getRewards();

        $('#NeighborName').keyup(function() {
            CheckKeyUps("NeighborName", "@FBB_Con_CharNotonName");
        });
        $('#NeighborSurname').keyup(function() {
            CheckKeyUps("NeighborSurname", "@FBB_Con_CharNotonName");
        });
        $("#MobileNo").keyup(function() {
            CheckKeyUps("MobileNo", '@FBB_Input_MobileNo', 'M');
        });
        $("#InternetNo").keyup(function() {
            CheckKeyUps("InternetNo", '[0-9]');
            CheckAirNumber8("InternetNo");
        });

    });

    function nameKeyup(input) {
        CheckKeyUps(input.id, '@FBB_Con_CharNotonName');
    }

    function contactNoKeyup(input) {
        CheckKeyUps(input.id, '@FBB_Input_MobileNo','M');
    }

    function lineIdKeyup(input) {
        CheckKeyUps(input.id, '@FBB_Con_Input_Line_Id');
    }

    function contactNoFocusout(input) {
        var id = input.id;
        var val = $.trim($("#" + id).val());
        var index = id.replace('ContactNo', '');
        var oldContactNo = $("#OldContactNo" + index).val();
        
        if (val != oldContactNo) {

            $("#OldContactNo" + index).val(val);
            $("#IsAIS" + index).hide();
            $("#IsAisMobile" + index).val("N");
            if (val.length == 10) {
                if (GetCheckMobileOnlineQuery(val)) { //R22.06
                    $("#IsAIS" + index).show();
                    $("#IsAisMobile" + index).val("Y");
                }
            }
        }
    }

    function buildingKeyup(input) {
        CheckKeyUps(input.id, '@FBB_Con_Input_Building');
    }

    function houseNoKeyup(input) {
        CheckKeyUps(input.id, '@FBB_Con_Input_Home_Number');
    }

    function soiKeyup(input) {
        CheckKeyUps(input.id, '@FBB_Con_Input_Soi');
    }

    function roadKeyup(input) {
        CheckKeyUps(input.id, '@FBB_Con_Input_Road');
    }

    function getProvince() {
        $('.province').empty();
        var str = '<option disabled selected value="">' + "@L_PLEASE_SELECT" + '</option>';

        $('.province').append(str);
        $.ajax({
            type: "GET",
            url: "/Campaign/GetProvince",
            dataType: "json",
            async: false,
            success: function (data) {
                var strBuilder = '';
                $.each(data, function (i, e) {
                    
                    strBuilder += '<option value="' + e.Value + '">' + e.Text + '</option>';
                });

                $('.province').append(strBuilder);
                $('.province').select2();
            }
        });
    }
    
    function onProvinceChange(sel) {

        var pv = sel.value;
        var id = sel.id;

        var index = id.replace('Province', '');

        //var districtId = "District" + index;

        $('#District' + index).empty();
        $('#SubDistrict' + index).empty();
        $('#PostalCode' + index).empty();
        $.ajax({
            type: "GET",
            url: "/Campaign/GetAmphur",
            dataType: "json",
            data: { 'provinceFilter': pv },
            async: false,
            success: function (data) {
                var strBuilder = "<option value='' disabled selected >" + "@L_PLEASE_SELECT" + "</option>";
                $.each(data, function (i, e) {

                    var str = '<option value="' + e.Value + '">' + e.Text + '</option>';
                    strBuilder += str;
                });
                $('#District' + index).append(strBuilder);
            }
        });
        $('#District' + index).select2();
        $('#SubDistrict' + index).append("<option value='' disabled selected >" + "@L_NEIGHBOR_SUB_DISTRICT" + "</option>");
        $('#SubDistrict' + index).select2();
        $('#PostalCode' + index).append("<option value='' disabled selected >" + "@L_NEIGHBOR_POSTAL_CODE" + "</option>");
        $('#PostalCode' + index).select2();
    }

    function onAmphurChange(sel) {

        var aphur = sel.value;
        var id = sel.id;
        var index = id.replace('District', '');

        $('#SubDistrict' + index).empty();
        $('#PostalCode' + index).empty();

        var pv = $('#Province' + index).val();

        $.ajax({
            type: "GET",
            url: "/Campaign/GetTumbon",
            async: false,
            data: { 'provinceFilter': pv, 'amphurFilter': aphur },
            dataType: "json",
            success: function (data) {

                var strBuilder = "<option value='' disabled selected >" + "@L_PLEASE_SELECT" + "</option>";
                $.each(data, function (i, e) {
                    var str = '<option value="' + e.Value + '">' + e.Text + '</option>';
                    strBuilder += str;
                });

                $('#SubDistrict' + index).append(strBuilder);
            },
            error: function () {

            }
        });

        $('#SubDistrict' + index).select2();
        $('#PostalCode' + index).append("<option value='' disabled selected >" + "@L_NEIGHBOR_POSTAL_CODE" + "</option>");
        $('#PostalCode' + index).select2();

    }

    function onTumbolChange(sel) {
        var tum = sel.value;
        var id = sel.id;
        var index = id.replace('SubDistrict', '');

        $('#PostalCode' + index).empty();

        var pro = $('#Province' + index).val();
        var amp = $('#District' + index).val();

        $.ajax({
            type: "GET",
            url: "/Campaign/GetCoverageZipCode",
            dataType: "json",
            data: {
                'provinceFilter': pro,
                'amphurFilter': amp,
                'tumbonFilter': tum,
                "sso": ""
            },
            async: false,
            success: function (data) {
                var tempZipCode = "";
                if (data.zipCodeList.length == 1)
                    $("#PostalCode" + index + " option[value='']").remove();

                $.each(data.zipCodeList, function (i, e) {
                    var str = '<option value="' + e.Text + '">' + e.Text + '</option>';
                    tempZipCode += str;
                });
                $('#PostalCode' + index).append(tempZipCode);
                $('#PostalCode' + index).val($('#PostalCode' + index).val());
            }
        });
        $('#PostalCode' + index).select2();
    }

    function onZipCodeChange(sel) {
        var zip = sel.value;
        var id = sel.id;
        var index = id.replace('PostalCode', '');
        $('#PostalCode' + index).val($('#PostalCode' + index).val());
    }

    function getContactTime() {
        $('.contactTime').empty();
        var str = '<option disabled selected value="">' + "@L_PLEASE_SELECT" + '</option>';

        $('.contactTime').append(str);
        $.ajax({
            type: "GET",
            url: "/Campaign/GetContactTimeNeighbor",
            dataType: "json",
            async: false,
            success: function(data) {
                var strBuilder = '';
                $.each(data, function(i, e) {

                    strBuilder += '<option value="' + e.Value + '">' + e.Text + '</option>';
                });

                $('.contactTime').append(strBuilder);
                $('.contactTime').select2();
            }
        });
    }

    function onBuildChange(chk) {

        var id = chk.id;
        var index = id.replace('rdoBuild', '').replace('rdoMooban', '');

        if ($("#rdoBuild" + index).is(":checked")) {
            $("input[name = 'CustomerNeighborList[" + index + "].SelectAddressType']").val("B");
            $("#divCondo" + index).show();
            $("#divMoban" + index).hide();
        } else if ($("#rdoMooban" + index).is(":checked")) {

            $("input[name = 'CustomerNeighborList[" + index + "].SelectAddressType']").val("V");
            //$("#CustomerNeighborList[" + index + "].SelectAddressType").val("V");
            $("#divCondo" + index).hide();
            $("#divMoban" + index).show();
        }

    }

    function CheckKeyUps(id, RexStr, checkMobile) {
        var strKey = $("#" + id).val();
        var strBuilder = "";
        if (checkMobile == undefined || checkMobile != "M") {
            var filter = new RegExp(RexStr);
            for (var i = 0; i < strKey.length; i++) {
                if (filter.test(strKey.substr(i, 1))) {
                    strBuilder += strKey.substr(i, 1);
                }
            }
        }
        else {
            var filterM = new RegExp(RexStr, "g");
            strBuilder = strKey.match(filterM);
        }
        $("#" + id).val(strBuilder);
    }

    function getRewards() {
        $('.rewards').empty();
        var str = '<option disabled selected value="">' + "@L_PLEASE_SELECT" + '</option>';

        $('.rewards').append(str);
        $.ajax({
            type: "GET",
            url: "/Campaign/GetRewardsNeighbor",
            dataType: "json",
            async: false,
            success: function (data) {
                var strBuilder = '';
                $.each(data, function (i, e) {

                    strBuilder += '<option value="' + e.Value + '">' + e.Text + '</option>';
                });

                $('.rewards').append(strBuilder);
                $('.rewards').select2();
            }
        });
    }

    function clearDetial() {
        $('.Customer').hide();
        getProvince();
        getContactTime();
        getRewards();

        $('.district').empty();
        $('.subDistrict').empty();
        $('.postalCode').empty();
        $('.district').append("<option value='' disabled selected >" + "@L_NEIGHBOR_DISTRICT" + "</option>");
        $('.district').select2();
        $('.subDistrict').append("<option value='' disabled selected >" + "@L_NEIGHBOR_SUB_DISTRICT" + "</option>");
        $('.subDistrict').select2();
        $('.postalCode').append("<option value='' disabled selected >" + "@L_NEIGHBOR_POSTAL_CODE" + "</option>");
        $('.postalCode').select2();
        $('#chkCondition').prop('checked', false);
        $(".rdoBuild").prop("checked", true);
        $(".selectAddressType").val("B");
        $('.isAisImage').hide();
    }

    function CheckAirNumber8(id) {
        var strKey = $("#" + id).val();
        var strBuilder = "";
        var filter = new RegExp("[8]");
        for (var i = 0; i < strKey.length; i++) {
            if (i < 1) {
                if (filter.test(strKey.substr(i, 1))) {
                    strBuilder += strKey.substr(i, 1);
                }
            } else {
                strBuilder += strKey.substr(i, 1);
            }
        }
        $("#" + id).val(strBuilder);
    }
    
    function checkIsAisMobile(input) {
        var id = input.id;
        var index = id.replace('ContactNo', '');
    }

    //R22.07 Issue Check Mobile OnlineQuery
    function GetCheckMobileOnlineQuery(mobileNo) {
        var IsAIS = false;
        $.ajax({
            url: '/CheckCoverage/GetCheckMobileOnlineQuery',
            data: {
                mobileNo: mobileNo,
                fibreID: '',
                locationCode: ''
            },
            dataType: "json",
            type: 'POST',
            async: false,
            success: function (response) {
                if (response.SubNetworkType == "Pre-paid" || response.SubNetworkType == "Post-paid") {
                    // IsAIS // Pre-paid // Post-paid
                    IsAIS = true;
                }
            }
        });
        return IsAIS;
    }

</script>