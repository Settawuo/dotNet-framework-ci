@model WBBEntity.PanelModels.FBBWebConfigModels.ConfigurationPackagesModel
@using WBBEntity.PanelModels;

@{
    ViewBag.Title = "Index";
    

    string B_SAVE_FINISH = "";
    string B_SAVE_CONTINUE_MAPPING = "";

    //PopUp

    string L_PRODUCT_TYPE = "";
    string L_NEW_PACKAGE_GROUP = "";
    string L_NEW_PRODUCT_SUBTYPE3 = "";
    string L_NEW_VENDOR_PARTNER = "";

    string B_SAVE = "";
    string B_CLOSE = "";
    string B_CLEAR = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        B_SAVE_FINISH = configscreen.Any(f => f.Name == "B_SAVE_FINISH") ? configscreen.First(f => f.Name == "B_SAVE_FINISH").LovValue1 : "";
        B_SAVE_CONTINUE_MAPPING = configscreen.Any(f => f.Name == "B_SAVE_CONTINUE_MAPPING") ? configscreen.First(f => f.Name == "B_SAVE_CONTINUE_MAPPING").LovValue1 : "";

        /// PopUp

        L_PRODUCT_TYPE = configscreen.Any(f => f.Name == "L_PRODUCT_TYPE") ? configscreen.First(f => f.Name == "L_PRODUCT_TYPE").LovValue1 : "";
        L_NEW_PACKAGE_GROUP = configscreen.Any(f => f.Name == "L_NEW_PACKAGE_GROUP") ? configscreen.First(f => f.Name == "L_NEW_PACKAGE_GROUP").LovValue1 : "";
        L_NEW_PRODUCT_SUBTYPE3 = configscreen.Any(f => f.Name == "L_NEW_PRODUCT_SUBTYPE3") ? configscreen.First(f => f.Name == "L_NEW_PRODUCT_SUBTYPE3").LovValue1 : "";
        L_NEW_VENDOR_PARTNER = configscreen.Any(f => f.Name == "L_NEW_VENDOR_PARTNER") ? configscreen.First(f => f.Name == "L_NEW_VENDOR_PARTNER").LovValue1 : "";

        B_SAVE = configscreen.Any(f => f.Name == "B_SAVE") ? configscreen.First(f => f.Name == "B_SAVE").LovValue1 : "";
        B_CLOSE = configscreen.Any(f => f.Name == "B_CLOSE") ? configscreen.First(f => f.Name == "B_CLOSE").LovValue1 : "";
        B_CLEAR = configscreen.Any(f => f.Name == "B_CLEAR") ? configscreen.First(f => f.Name == "B_CLEAR").LovValue1 : "";

    }
    
    
     
}

<div class="page-header i-header-fit" id="HeadPage1">
    <div class="row">
        <div class="col-sm-12 col-md-12">
            <h3 style="margin-top: 0">Configuration Package</h3>
            <ol class="breadcrumb">
                <li class="active">Main Page</li>
            </ol>
        </div>
    </div>
</div>

<div class="page-header i-header-fit i-hidden" id="HeadPage2">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <h3 style="margin-top: 0">Configuration Package</h3>
                <ol class="breadcrumb">
                    <li><a onclick="_backSearch()">Main Page</a></li>
                    <li class="active">Configuration Package</li>
                </ol>
            </div>
        </div>
</div>

<div class="page-header i-header-fit i-hidden" id="HeadPage3">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <h3 style="margin-top: 0">Configuration Package</h3>
                <ol class="breadcrumb">
                    <li><a onclick="_backSearch()">Main Page</a></li>
                    <li><a onclick="_backPage1()">Configuration Package</a></li>
                    <li class="active">Mapping</li>
                </ol>
            </div>
        </div>
</div>

<div class="page-header i-header-fit i-hidden" id="HeadPage4">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <h3 style="margin-top: 0">Configuration Package</h3>
                <ol class="breadcrumb">
                    <li><a onclick="_backSearch()">Main Page</a></li>
                    <li><a onclick="_backPage1()">Configuration Package</a></li>
                    <li><a onclick="_backPage2()">Mapping</a></li>
                    <li class="active">Catalog and Authorize</li>
                </ol>
            </div>
        </div>
</div>

<div class="page-header i-header-fit i-hidden" id="HeadPage5">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <h3 style="margin-top: 0">Configuration Package</h3>
                <ol class="breadcrumb">
                    <li><a onclick="_backSearch()">Main Page</a></li>
                    <li><a onclick="_backPage1()">Configuration Package</a></li>
                    <li><a onclick="_backPage2()">Mapping</a></li>
                    <li><a onclick="_backPage3()">Catalog and Authorize</a></li>
                    <li class="active">Region Provice and Location</li>
                </ol>
            </div>
        </div>
</div>

<div class="page-header i-header-fit i-hidden" id="HeadReport">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <h3 style="margin-top: 0">Configuration Package</h3>
                <ol class="breadcrumb">
                    <li><a onclick="_backSearch()">Main Page</a></li>
                    <li><a onclick="_backPage1()">Configuration Package</a></li>
                    <li><a onclick="_backPage2()">Mapping</a></li>
                    <li><a onclick="_backPage3()">Catalog and Authorize</a></li>
                    <li><a onclick="_backPage4()">Region Provice and Location</a></li>
                    <li class="active">Summary</li>
                </ol>
            </div>
        </div>
</div>

<div class="row i-hidden" id="SearchPane">
    <div class="col-sm-12 col-md-12">
        @SearchPane()
    </div>
</div>
@using (Html.BeginForm("SaveConfigurationPackagePage1", "ConfigurationPackages", FormMethod.Post, new { id = "frmConfigurationPackagePage1", @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(t => t.SaveStatus)
    @Html.HiddenFor(t => t.SaveToPage2)
    @Html.HiddenFor(t => t.PACKAGE_CLASS)
    @Html.HiddenFor(t => t.VendorOrPartnerShow)
    <div class="row i-hidden" id="NewPane">
        <div class="col-sm-12 col-md-12">
            @NewPackagePane()
        </div>
    </div>

    <div class="row i-hidden" id="PackageDescPane">
        <div class="col-sm-12 col-md-12">
            @PackageDescPane1()
        </div>
    </div>
}
@using (Html.BeginForm("SaveConfigurationPackagePage2", "ConfigurationPackages", FormMethod.Post, new { id = "frmConfigurationPackagePage2", @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(t => t.SaveToPage3)
    @Html.HiddenFor(t => t.SFFProductCodeMapping)
    @Html.HiddenFor(t => t.PACKAGE_CODE_MAPPING)
    <div class="row i-hidden" id="PackageDescPane2">
        <div class="col-sm-12 col-md-12">
            @PackageDescPane2()
        </div>
    </div>
}

@using (Html.BeginForm("SaveConfigurationPackagePage3", "ConfigurationPackages", FormMethod.Post, new { id = "frmConfigurationPackagePage3", @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(t => t.SaveToPage4)
    @Html.HiddenFor(t => t.SFFProductCodeCatalog)
    @Html.HiddenFor(t => t.PACKAGE_CODE_CATALOG)
    <div class="row i-hidden" id="PackageDescPane3">
        <div class="col-sm-12 col-md-12">
            @PackageDescPane3()
        </div>
    </div>
}

@using (Html.BeginForm("SaveConfigurationPackagePage4", "ConfigurationPackages", FormMethod.Post, new { id = "frmConfigurationPackagePage4", @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(t => t.SFFProductCodeLocation)
    @Html.HiddenFor(t => t.PACKAGE_CODE_LOCATION)
    <div class="row i-hidden" id="PackageDescPane4">
        <div class="col-sm-12 col-md-12">
            @PackageDescPane4()
        </div>
    </div>
    <div class="row i-hidden" id="PackageDescPane5">
        <div class="col-sm-12 col-md-12">
            @PackageDescPane5()
        </div>
    </div>
}
@using (Html.BeginForm("SaveConfigurationPackageFinish", "ConfigurationPackages", FormMethod.Post, new { id = "frmConfigurationPackageReport", @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(t => t.SFFProductCodeReport)
    @Html.HiddenFor(t => t.PACKAGE_CODE_REPORT)
    <div class="row i-hidden" id="PackageRptPane">
        <div class="col-sm-12 col-md-12">
            @PackageReportPane()
        </div>
    </div>
}

@helper SearchPane()
{
    string L_SFF_PRODUCT_CODE = "";
    string Q_SFF_PRODUCT_CODE = "";
    string Q_SFF_PRODUCT_CODE_ENABLE = "";
    string L_SFF_PROMO_NAME_THAI = "";
    string Q_SFF_PROMO_NAME_THAI = "";
    string Q_SFF_PROMO_NAME_THAI_ENABLE = "";
    string L_SFF_PROMO_NAME_ENG = "";
    string Q_SFF_PROMO_NAME_ENG = "";
    string Q_SFF_PROMO_NAME_ENG_ENABLE = "";
    string B_SEARCH = "";
    string B_CLEAR = "";

    string B_NEW = "";
    string B_EDIT = "";
    string G_SFF_PROMOTION_CODE = "";
    string G_SFF_PROMOTION_BILL_THA = "";
    string G_SFF_PROMOTION_BILL_ENG = "";
    string G_PACKAGE_CODE = "";
    string G_PACKAGE_TYPE = "";
    string G_PACKAGE_CLASS = "";
    string G_SALE_START_DATE = "";
    string G_SALE_END_DATE = "";
    string G_PRE_INITIATION_CHARGE = "";
    string G_INITIATION_CHARGE = "";
    string G_PRE_RECURRING_CHARGE = "";
    string G_RECURRING_CHARGE = "";
    string G_PACKAGE_NAME_THA = "";
    string G_PACKAGE_NAME_ENG = "";
    string G_DOWNLOAD_SPEED = "";
    string G_UPLOAD_SPEED = "";
    string G_DISCOUNT_TYPE = "";
    string G_DISCOUNT_VALUE = "";
    string G_DISCOUNT_DAY = "";
    string G_VAS_SERVICE = "";

    string G_SFF_PROMOTION_CODE_ENABLE = "";
    string G_SFF_PROMOTION_BILL_THA_ENABLE = "";
    string G_SFF_PROMOTION_BILL_ENG_ENABLE = "";
    string G_PACKAGE_CODE_ENABLE = "";
    string G_PACKAGE_TYPE_ENABLE = "";
    string G_PACKAGE_CLASS_ENABLE = "";
    string G_SALE_START_DATE_ENABLE = "";
    string G_SALE_END_DATE_ENABLE = "";
    string G_PRE_INITIATION_CHARGE_ENABLE = "";
    string G_INITIATION_CHARGE_ENABLE = "";
    string G_PRE_RECURRING_CHARGE_ENABLE = "";
    string G_RECURRING_CHARGE_ENABLE = "";
    string G_PACKAGE_NAME_THA_ENABLE = "";
    string G_PACKAGE_NAME_ENG_ENABLE = "";
    string G_DOWNLOAD_SPEED_ENABLE = "";
    string G_UPLOAD_SPEED_ENABLE = "";
    string G_DISCOUNT_TYPE_ENABLE = "";
    string G_DISCOUNT_VALUE_ENABLE = "";
    string G_DISCOUNT_DAY_ENABLE = "";
    string G_VAS_SERVICE_ENABLE = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        L_SFF_PRODUCT_CODE = configscreen.Any(f => f.Name == "L_SFF_PRODUCT_CODE") ? configscreen.First(f => f.Name == "L_SFF_PRODUCT_CODE").LovValue1 : "";
        Q_SFF_PRODUCT_CODE = configscreen.Any(f => f.Name == "Q_SFF_PRODUCT_CODE") ? configscreen.First(f => f.Name == "Q_SFF_PRODUCT_CODE").LovValue1 : "";
        Q_SFF_PRODUCT_CODE_ENABLE = configscreen.Any(f => f.Name == "Q_SFF_PRODUCT_CODE") ? configscreen.First(f => f.Name == "Q_SFF_PRODUCT_CODE").Text : "N";
        L_SFF_PROMO_NAME_THAI = configscreen.Any(f => f.Name == "L_SFF_PROMO_NAME_THAI") ? configscreen.First(f => f.Name == "L_SFF_PROMO_NAME_THAI").LovValue1 : "";
        Q_SFF_PROMO_NAME_THAI = configscreen.Any(f => f.Name == "Q_SFF_PROMO_NAME_THAI") ? configscreen.First(f => f.Name == "Q_SFF_PROMO_NAME_THAI").LovValue1 : "";
        Q_SFF_PROMO_NAME_THAI_ENABLE = configscreen.Any(f => f.Name == "Q_SFF_PROMO_NAME_THAI") ? configscreen.First(f => f.Name == "Q_SFF_PROMO_NAME_THAI").Text : "N";
        L_SFF_PROMO_NAME_ENG = configscreen.Any(f => f.Name == "L_SFF_PROMO_NAME_ENG") ? configscreen.First(f => f.Name == "L_SFF_PROMO_NAME_ENG").LovValue1 : "";
        Q_SFF_PROMO_NAME_ENG = configscreen.Any(f => f.Name == "Q_SFF_PROMO_NAME_ENG") ? configscreen.First(f => f.Name == "Q_SFF_PROMO_NAME_ENG").LovValue1 : "";
        Q_SFF_PROMO_NAME_ENG_ENABLE = configscreen.Any(f => f.Name == "Q_SFF_PROMO_NAME_ENG") ? configscreen.First(f => f.Name == "Q_SFF_PROMO_NAME_ENG").Text : "N";
        B_SEARCH = configscreen.Any(f => f.Name == "B_SEARCH") ? configscreen.First(f => f.Name == "B_SEARCH").LovValue1 : "";
        B_CLEAR = configscreen.Any(f => f.Name == "B_CLEAR") ? configscreen.First(f => f.Name == "B_CLEAR").LovValue1 : "";

        B_NEW = configscreen.Any(f => f.Name == "B_NEW") ? configscreen.First(f => f.Name == "B_NEW").LovValue1 : "";
        B_EDIT = configscreen.Any(f => f.Name == "B_EDIT") ? configscreen.First(f => f.Name == "B_EDIT").LovValue1 : "";

        G_SFF_PROMOTION_CODE = configscreen.Any(f => f.Name == "G_SFF_PROMOTION_CODE") ? configscreen.First(f => f.Name == "G_SFF_PROMOTION_CODE").LovValue1 : "";
        G_SFF_PROMOTION_CODE_ENABLE = configscreen.Any(f => f.Name == "G_SFF_PROMOTION_CODE") ? configscreen.First(f => f.Name == "G_SFF_PROMOTION_CODE").Text : "N";

        G_SFF_PROMOTION_BILL_THA = configscreen.Any(f => f.Name == "G_SFF_PROMOTION_BILL_THA") ? configscreen.First(f => f.Name == "G_SFF_PROMOTION_BILL_THA").LovValue1 : "";
        G_SFF_PROMOTION_BILL_THA_ENABLE = configscreen.Any(f => f.Name == "G_SFF_PROMOTION_BILL_THA") ? configscreen.First(f => f.Name == "G_SFF_PROMOTION_BILL_THA").Text : "N";

        G_SFF_PROMOTION_BILL_ENG = configscreen.Any(f => f.Name == "G_SFF_PROMOTION_BILL_ENG") ? configscreen.First(f => f.Name == "G_SFF_PROMOTION_BILL_ENG").LovValue1 : "";
        G_SFF_PROMOTION_BILL_ENG_ENABLE = configscreen.Any(f => f.Name == "G_SFF_PROMOTION_BILL_ENG") ? configscreen.First(f => f.Name == "G_SFF_PROMOTION_BILL_ENG").Text : "N";

        G_PACKAGE_CODE = configscreen.Any(f => f.Name == "G_PACKAGE_CODE") ? configscreen.First(f => f.Name == "G_PACKAGE_CODE").LovValue1 : "";
        G_PACKAGE_CODE_ENABLE = configscreen.Any(f => f.Name == "G_PACKAGE_CODE") ? configscreen.First(f => f.Name == "G_PACKAGE_CODE").Text : "N";

        G_PACKAGE_TYPE = configscreen.Any(f => f.Name == "G_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "G_PACKAGE_TYPE").LovValue1 : "";
        G_PACKAGE_TYPE_ENABLE = configscreen.Any(f => f.Name == "G_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "G_PACKAGE_TYPE").Text : "N";

        G_PACKAGE_CLASS = configscreen.Any(f => f.Name == "G_PACKAGE_CLASS") ? configscreen.First(f => f.Name == "G_PACKAGE_CLASS").LovValue1 : "";
        G_PACKAGE_CLASS_ENABLE = configscreen.Any(f => f.Name == "G_PACKAGE_CLASS") ? configscreen.First(f => f.Name == "G_PACKAGE_CLASS").Text : "N";

        G_SALE_START_DATE = configscreen.Any(f => f.Name == "G_SALE_START_DATE") ? configscreen.First(f => f.Name == "G_SALE_START_DATE").LovValue1 : "";
        G_SALE_START_DATE_ENABLE = configscreen.Any(f => f.Name == "G_SALE_START_DATE") ? configscreen.First(f => f.Name == "G_SALE_START_DATE").Text : "N";

        G_SALE_END_DATE = configscreen.Any(f => f.Name == "G_SALE_END_DATE") ? configscreen.First(f => f.Name == "G_SALE_END_DATE").LovValue1 : "";
        G_SALE_END_DATE_ENABLE = configscreen.Any(f => f.Name == "G_SALE_END_DATE") ? configscreen.First(f => f.Name == "G_SALE_END_DATE").Text : "N";

        G_PRE_INITIATION_CHARGE = configscreen.Any(f => f.Name == "G_PRE_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "G_PRE_INITIATION_CHARGE").LovValue1 : "";
        G_PRE_INITIATION_CHARGE_ENABLE = configscreen.Any(f => f.Name == "G_PRE_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "G_PRE_INITIATION_CHARGE").Text : "N";

        G_INITIATION_CHARGE = configscreen.Any(f => f.Name == "G_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "G_INITIATION_CHARGE").LovValue1 : "";
        G_INITIATION_CHARGE_ENABLE = configscreen.Any(f => f.Name == "G_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "G_INITIATION_CHARGE").Text : "N";

        G_PRE_RECURRING_CHARGE = configscreen.Any(f => f.Name == "G_PRE_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "G_PRE_RECURRING_CHARGE").LovValue1 : "";
        G_PRE_RECURRING_CHARGE_ENABLE = configscreen.Any(f => f.Name == "G_PRE_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "G_PRE_RECURRING_CHARGE").Text : "N";

        G_RECURRING_CHARGE = configscreen.Any(f => f.Name == "G_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "G_RECURRING_CHARGE").LovValue1 : "";
        G_RECURRING_CHARGE_ENABLE = configscreen.Any(f => f.Name == "G_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "G_RECURRING_CHARGE").Text : "N";

        G_PACKAGE_NAME_THA = configscreen.Any(f => f.Name == "G_PACKAGE_NAME_THA") ? configscreen.First(f => f.Name == "G_PACKAGE_NAME_THA").LovValue1 : "";
        G_PACKAGE_NAME_THA_ENABLE = configscreen.Any(f => f.Name == "G_PACKAGE_NAME_THA") ? configscreen.First(f => f.Name == "G_PACKAGE_NAME_THA").Text : "N";

        G_PACKAGE_NAME_ENG = configscreen.Any(f => f.Name == "G_PACKAGE_NAME_ENG") ? configscreen.First(f => f.Name == "G_PACKAGE_NAME_ENG").LovValue1 : "";
        G_PACKAGE_NAME_ENG_ENABLE = configscreen.Any(f => f.Name == "G_PACKAGE_NAME_ENG") ? configscreen.First(f => f.Name == "G_PACKAGE_NAME_ENG").Text : "N";

        G_DOWNLOAD_SPEED = configscreen.Any(f => f.Name == "G_DOWNLOAD_SPEED") ? configscreen.First(f => f.Name == "G_DOWNLOAD_SPEED").LovValue1 : "";
        G_DOWNLOAD_SPEED_ENABLE = configscreen.Any(f => f.Name == "G_DOWNLOAD_SPEED") ? configscreen.First(f => f.Name == "G_DOWNLOAD_SPEED").Text : "N";

        G_UPLOAD_SPEED = configscreen.Any(f => f.Name == "G_UPLOAD_SPEED") ? configscreen.First(f => f.Name == "G_UPLOAD_SPEED").LovValue1 : "";
        G_UPLOAD_SPEED_ENABLE = configscreen.Any(f => f.Name == "G_UPLOAD_SPEED") ? configscreen.First(f => f.Name == "G_UPLOAD_SPEED").Text : "N";

        G_DISCOUNT_TYPE = configscreen.Any(f => f.Name == "G_DISCOUNT_TYPE") ? configscreen.First(f => f.Name == "G_DISCOUNT_TYPE").LovValue1 : "";
        G_DISCOUNT_TYPE_ENABLE = configscreen.Any(f => f.Name == "G_DISCOUNT_TYPE") ? configscreen.First(f => f.Name == "G_DISCOUNT_TYPE").Text : "N";

        G_DISCOUNT_VALUE = configscreen.Any(f => f.Name == "G_DISCOUNT_VALUE") ? configscreen.First(f => f.Name == "G_DISCOUNT_VALUE").LovValue1 : "";
        G_DISCOUNT_VALUE_ENABLE = configscreen.Any(f => f.Name == "G_DISCOUNT_VALUE") ? configscreen.First(f => f.Name == "G_DISCOUNT_VALUE").Text : "N";

        G_DISCOUNT_DAY = configscreen.Any(f => f.Name == "G_DISCOUNT_DAY") ? configscreen.First(f => f.Name == "G_DISCOUNT_DAY").LovValue1 : "";
        G_DISCOUNT_DAY_ENABLE = configscreen.Any(f => f.Name == "G_DISCOUNT_DAY") ? configscreen.First(f => f.Name == "G_DISCOUNT_DAY").Text : "N";

        G_VAS_SERVICE = configscreen.Any(f => f.Name == "G_VAS_SERVICE") ? configscreen.First(f => f.Name == "G_VAS_SERVICE").LovValue1 : "";
        G_VAS_SERVICE_ENABLE = configscreen.Any(f => f.Name == "G_VAS_SERVICE") ? configscreen.First(f => f.Name == "G_VAS_SERVICE").Text : "N";
             
    }
    
    <div class="panel panel-success">            
        <div class="panel-heading">
           <h3 class="panel-title">
              <span>Search Package</span>
              <a data-toggle="collapse" class="pull-right" href="#SearchPanel" onclick="onPanelToggle(this);" id="SearchPanelHeader"><i class="fa fa-chevron-circle-down fa-lg" id="SearchPanelHeaderArrow"></i></a>
           </h3>
        </div>
        <div id="SearchPanel" class="panel-collapse collapse in">
            <div class="panel-body" style="min-height: 200px;">
                <div id="SearchRow1" class="row">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_SFF_PRODUCT_CODE</label>
                        @if (@Q_SFF_PRODUCT_CODE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                        }
                        @Html.TextBoxFor(t => t.SFFProductCodeSearch, new { maxlength = 50, @class = "dis k-textbox form-control" })
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_SFF_PROMO_NAME_THAI</label>
                        @if (@Q_SFF_PROMO_NAME_THAI_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                        }
                        @Html.TextBoxFor(t => t.SFFProductNameThaiSearch, new { maxlength = 255, @class = "dis k-textbox form-control" })
                    </div>
                </div>
                @*end row1*@
                <div id="SearchRow2" class="row">
                    <div class="col-sm-6 col-md-6">
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_SFF_PROMO_NAME_ENG</label>
                        @if (@Q_SFF_PROMO_NAME_ENG_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                        }
                        @Html.TextBoxFor(t => t.SFFProductNameEngSearch, new { maxlength = 255, @class = "dis k-textbox form-control" })
                    </div>
                </div>
                @*end row2*@
                <div id="SearchRow3" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                    </div>
                    <div class="col-sm-6 col-md-6 i-text-align-right">
                        <a class="btn btn-default" onclick="_Clear();"><i class="fa fa-ban fa-lg"></i>&nbsp;&nbsp;@B_CLEAR</a>
                        <a class="btn btn-info" onclick="_Search();"><i class="fa fa-search fa-lg"></i>&nbsp;&nbsp;@B_SEARCH</a>
                    </div>
                </div>
                @*end row3*@
                <div id="SearchRow4" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12 ">
                        <div id="gridresult" class="row">

                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.NewPackageMaster>()
                        .Name("gridPromotionSFF")
                        .Columns(columns =>
                        {
                            columns.Command(command =>
                            {
                                command.Custom("Edit").Click("editConfigPackage").Text("<i class='fa fa-pencil-square-o fa-lg'></i>&nbsp; " + @B_EDIT);
                            }).Width(100);
                            if (@G_SFF_PROMOTION_CODE_ENABLE == "Y")
                                columns.Bound(p => p.sff_promotion_code).Title(@G_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_SFF_PROMOTION_BILL_THA_ENABLE == "Y")
                                columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(250);
                            if (@G_SFF_PROMOTION_BILL_ENG_ENABLE == "Y")
                                columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Width(250);
                            if (@G_PACKAGE_CODE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.package_code).Title(@G_PACKAGE_CODE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            }
                            else
                            {
                                columns.Bound(p => p.package_code).Title(@G_PACKAGE_CODE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }
                            if (@G_PACKAGE_TYPE_ENABLE == "Y")
                                columns.Bound(p => p.package_type).Title(@G_PACKAGE_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_PACKAGE_CLASS_ENABLE == "Y")
                                columns.Bound(p => p.package_class).Title(@G_PACKAGE_CLASS).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_SALE_START_DATE_ENABLE == "Y")
                                columns.Bound(p => p.sale_start_date).Title(@G_SALE_START_DATE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_SALE_END_DATE_ENABLE == "Y")
                                columns.Bound(p => p.sale_end_date).Title(@G_SALE_END_DATE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_PRE_INITIATION_CHARGE_ENABLE == "Y")
                                columns.Bound(p => p.pre_initiation_charge).Title(@G_PRE_INITIATION_CHARGE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_INITIATION_CHARGE_ENABLE == "Y")
                                columns.Bound(p => p.initiation_charge).Title(@G_INITIATION_CHARGE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_PRE_RECURRING_CHARGE_ENABLE == "Y")
                                columns.Bound(p => p.pre_recurring_charge).Title(@G_PRE_RECURRING_CHARGE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_RECURRING_CHARGE_ENABLE == "Y")
                                columns.Bound(p => p.recurring_charge).Title(@G_RECURRING_CHARGE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_PACKAGE_NAME_THA_ENABLE == "Y")
                                columns.Bound(p => p.package_name_tha).Title(@G_PACKAGE_NAME_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_PACKAGE_NAME_ENG_ENABLE == "Y")
                                columns.Bound(p => p.package_name_eng).Title(@G_PACKAGE_NAME_ENG).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_DOWNLOAD_SPEED_ENABLE == "Y")
                                columns.Bound(p => p.download_speed).Title(@G_DOWNLOAD_SPEED).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_UPLOAD_SPEED_ENABLE == "Y")
                                columns.Bound(p => p.upload_speed).Title(@G_UPLOAD_SPEED).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_DISCOUNT_TYPE_ENABLE == "Y")
                                columns.Bound(p => p.discount_type).Title(@G_DISCOUNT_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_DISCOUNT_VALUE_ENABLE == "Y")
                                columns.Bound(p => p.discount_value).Title(@G_DISCOUNT_VALUE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_DISCOUNT_DAY_ENABLE == "Y")
                                columns.Bound(p => p.discount_day).Title(@G_DISCOUNT_DAY).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                            if (@G_VAS_SERVICE_ENABLE == "Y")
                                columns.Bound(p => p.vas_service).Title(@G_VAS_SERVICE).HtmlAttributes(new { style = "text-align:left;" }).Width(200);

                        })
                        .ToolBar(toolbar => toolbar.Template("" +
                            //disabled='disabled'
        "<div class='pull-right'>" + "<a onclick='addNewConfigPackage()' id='addnew' class='btn btn-default'><i class='fa fa-plus-circle fa-lg'></i>&nbsp;" + @B_NEW + "</a>&nbsp;</div>"

        ))
                            .Pageable(pageable => pageable
                            .PageSizes(false)
                            .Numeric(true)
                            )
                            .Scrollable(scrollable => scrollable.Height("auto"))
                            .Sortable()
                            .AutoBind(false)
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(20)
                                .Sort(sort => sort.Add("SFF_PROMOTION_CODE").Ascending())
                                .Read(read => read.Action("SearchDataSourceRequest", "ConfigurationPackages").Data("bindingValue"))
                                )
                            .Events(e => e.DataBound("onGridDataBound"))
                            )
                        </div>
                    </div>
                </div>
                @*end row4*@

            </div>
        </div> @*end SearchPanel*@
    </div>           
}

@helper NewPackagePane()
{
    string L_SFF_PRODUCT_CODE = "";
    string Q_SFF_PRODUCT_CODE = "";
    string Q_SFF_PRODUCT_CODE_ENABLE = "";
    string L_SFF_PROMO_NAME_THAI = "";
    string Q_SFF_PROMO_NAME_THAI = "";
    string Q_SFF_PROMO_NAME_THAI_ENABLE = "";
    string L_SFF_PROMO_NAME_ENG = "";
    string Q_SFF_PROMO_NAME_ENG = "";
    string Q_SFF_PROMO_NAME_ENG_ENABLE = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        L_SFF_PRODUCT_CODE = configscreen.Any(f => f.Name == "L_SFF_PRODUCT_CODE") ? configscreen.First(f => f.Name == "L_SFF_PRODUCT_CODE").LovValue1 : "";
        Q_SFF_PRODUCT_CODE = configscreen.Any(f => f.Name == "Q_SFF_PRODUCT_CODE") ? configscreen.First(f => f.Name == "Q_SFF_PRODUCT_CODE").LovValue1 : "";
        Q_SFF_PRODUCT_CODE_ENABLE = configscreen.Any(f => f.Name == "Q_SFF_PRODUCT_CODE") ? configscreen.First(f => f.Name == "Q_SFF_PRODUCT_CODE").Text : "N";
        L_SFF_PROMO_NAME_THAI = configscreen.Any(f => f.Name == "L_SFF_PROMO_NAME_THAI") ? configscreen.First(f => f.Name == "L_SFF_PROMO_NAME_THAI").LovValue1 : "";
        Q_SFF_PROMO_NAME_THAI = configscreen.Any(f => f.Name == "Q_SFF_PROMO_NAME_THAI") ? configscreen.First(f => f.Name == "Q_SFF_PROMO_NAME_THAI").LovValue1 : "";
        Q_SFF_PROMO_NAME_THAI_ENABLE = configscreen.Any(f => f.Name == "Q_SFF_PROMO_NAME_THAI") ? configscreen.First(f => f.Name == "Q_SFF_PROMO_NAME_THAI").Text : "N";
        L_SFF_PROMO_NAME_ENG = configscreen.Any(f => f.Name == "L_SFF_PROMO_NAME_ENG") ? configscreen.First(f => f.Name == "L_SFF_PROMO_NAME_ENG").LovValue1 : "";
        Q_SFF_PROMO_NAME_ENG = configscreen.Any(f => f.Name == "Q_SFF_PROMO_NAME_ENG") ? configscreen.First(f => f.Name == "Q_SFF_PROMO_NAME_ENG").LovValue1 : "";
        Q_SFF_PROMO_NAME_ENG_ENABLE = configscreen.Any(f => f.Name == "Q_SFF_PROMO_NAME_ENG") ? configscreen.First(f => f.Name == "Q_SFF_PROMO_NAME_ENG").Text : "N";
    }
    
    <div class="panel panel-success">
        <div class="panel-heading">
            <h3 class="panel-title">
                <span>New Package</span>
                <a data-toggle="collapse" class="pull-right" href="#NewPanel" onclick="onPanelToggle(this);" id="NewPanelHeader"><i class="fa fa-chevron-circle-down fa-lg" id="NewPanelHeaderArrow"></i></a>
            </h3>
        </div>
        <div id="NewPanel" class="panel-collapse collapse in">
            <div class="panel-body" style="min-height: 150px;">
                <div id="NewRow1" class="row  i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_SFF_PRODUCT_CODE</label>
                        @if (@Q_SFF_PRODUCT_CODE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                        }
                        @Html.TextBoxFor(t => t.SFFProductCode, new { maxlength = 50, @class = "k-textbox form-control" })
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_SFF_PROMO_NAME_THAI</label>
                        @if (@Q_SFF_PROMO_NAME_THAI_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                        }
                        @Html.TextBoxFor(t => t.SFFProductNameThai, new { maxlength = 255, @class = "k-textbox form-control" })
                        <div class="i-required" id="requiredfor-SFFProductNameThai"></div>
                    </div>
                </div>
                @*end row1*@
                <div id="NewRow2" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_SFF_PROMO_NAME_ENG</label>
                        @if (@Q_SFF_PROMO_NAME_ENG_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                        }
                        @Html.TextBoxFor(t => t.SFFProductNameEng, new { maxlength = 255, @class = "k-textbox form-control" })
                        <div class="i-required" id="requiredfor-SFFProductNameEng"></div>
                    </div>
                </div>
                @*end row2*@
            </div>
        </div>
        @*end SearchPanel2*@
    </div>           
}

@helper PackageDescPane1()
{
    string L_PACKAGE_TYPE = "";
    string Q_PACKAGE_TYPE = "";
    string Q_PACKAGE_TYPE_ENABLE = "";
    string L_VAS_SERVICE = "";
    string Q_VAS_SERVICE = "";
    string Q_VAS_SERVICE_ENABLE = "";
    string L_PACKAGE_FOR = "";
    string Q_PACKAGE_FOR = "";
    string Q_PACKAGE_FOR_ENABLE = "";
    string L_PACKAGE_CODE = "";
    string Q_PACKAGE_CODE = "";
    string Q_PACKAGE_CODE_ENABLE = "";
    string L_PACKAGE_DISPLAY_WEB = "";
    string Q_PACKAGE_DISPLAY_WEB = "";
    string Q_PACKAGE_DISPLAY_WEB_ENABLE = "";
    string L_PACKAGE_NAME_THAI = "";
    string Q_PACKAGE_NAME_THAI = "";
    string Q_PACKAGE_NAME_THAI_ENABLE = "";
    string L_PACKAGE_NAME_ENG = "";
    string Q_PACKAGE_NAME_ENG = "";
    string Q_PACKAGE_NAME_ENG_ENABLE = "";
    string L_DOWNLOAD_SPEED = "";
    string Q_DOWNLOAD_SPEED = "";
    string Q_DOWNLOAD_SPEED_ENABLE = "";
    string L_UPLOAD_SPEED = "";
    string Q_UPLOAD_SPEED = "";
    string Q_UPLOAD_SPEED_ENABLE = "";
    string L_SALE_START_DATE = "";
    string Q_SALE_START_DATE = "";
    string Q_SALE_START_DATE_ENABLE = "";
    string L_SALE_END_DATE = "";
    string Q_SALE_END_DATE = "";
    string Q_SALE_END_DATE_ENABLE = "";
    string L_PRE_INITIATION_CHARGE = "";
    string Q_PRE_INITIATION_CHARGE = "";
    string Q_PRE_INITIATION_CHARGE_ENABLE = "";
    string L_INITIATION_CHARGE = "";
    string Q_INITIATION_CHARGE = "";
    string Q_INITIATION_CHARGE_ENABLE = "";
    string L_PRE_RECURRING_CHARGE = "";
    string Q_PRE_RECURRING_CHARGE = "";
    string Q_PRE_RECURRING_CHARGE_ENABLE = "";
    string L_RECURRING_CHARGE = "";
    string Q_RECURRING_CHARGE = "";
    string Q_RECURRING_CHARGE_ENABLE = "";
    string L_DISCOUNT_TYPE = "";
    string Q_DISCOUNT_TYPE = "";
    string Q_DISCOUNT_TYPE_ENABLE = "";
    string L_DISCOUNT_VALUE = "";
    string Q_DISCOUNT_VALUE = "";
    string Q_DISCOUNT_VALUE_ENABLE = "";
    string L_DISCOUNT_DAY = "";
    string Q_DISCOUNT_DAY = "";
    string Q_DISCOUNT_DAY_ENABLE = "";
    string L_PRODUCT_TYPE = "";
    string Q_PRODUCT_TYPE = "";
    string Q_PRODUCT_TYPE_ENABLE = "";

    string B_NEW_PACKAGE_GROUP = "";
    string B_NEW_PRODUCT_SUBTYPE3 = "";

    string L_VENDOR_PARTNER = "";
    string Q_VENDOR_PARTNER = "";
    string Q_VENDOR_PARTNER_ENABLE = "";

    string B_NEW_VENDOR_PARTNER = "";

    string B_SAVE_FINISH = "";
    string B_SAVE_CONTINUE_MAPPING = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        L_PACKAGE_TYPE = configscreen.Any(f => f.Name == "L_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "L_PACKAGE_TYPE").LovValue1 : "";
        Q_PACKAGE_TYPE = configscreen.Any(f => f.Name == "Q_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "Q_PACKAGE_TYPE").LovValue1 : "";
        Q_PACKAGE_TYPE_ENABLE = configscreen.Any(f => f.Name == "Q_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "Q_PACKAGE_TYPE").Text : "N";
        L_VAS_SERVICE = configscreen.Any(f => f.Name == "L_VAS_SERVICE") ? configscreen.First(f => f.Name == "L_VAS_SERVICE").LovValue1 : "";
        Q_VAS_SERVICE = configscreen.Any(f => f.Name == "Q_VAS_SERVICE") ? configscreen.First(f => f.Name == "Q_VAS_SERVICE").LovValue1 : "";
        Q_VAS_SERVICE_ENABLE = configscreen.Any(f => f.Name == "Q_VAS_SERVICE") ? configscreen.First(f => f.Name == "Q_VAS_SERVICE").Text : "N";
        L_PACKAGE_FOR = configscreen.Any(f => f.Name == "L_PACKAGE_FOR") ? configscreen.First(f => f.Name == "L_PACKAGE_FOR").LovValue1 : "";
        Q_PACKAGE_FOR = configscreen.Any(f => f.Name == "Q_PACKAGE_FOR") ? configscreen.First(f => f.Name == "Q_PACKAGE_FOR").LovValue1 : "";
        Q_PACKAGE_FOR_ENABLE = configscreen.Any(f => f.Name == "Q_PACKAGE_FOR") ? configscreen.First(f => f.Name == "Q_PACKAGE_FOR").Text : "N";
        L_PACKAGE_CODE = configscreen.Any(f => f.Name == "L_PACKAGE_CODE") ? configscreen.First(f => f.Name == "L_PACKAGE_CODE").LovValue1 : "";
        Q_PACKAGE_CODE = configscreen.Any(f => f.Name == "Q_PACKAGE_CODE") ? configscreen.First(f => f.Name == "Q_PACKAGE_CODE").LovValue1 : "";
        Q_PACKAGE_CODE_ENABLE = configscreen.Any(f => f.Name == "Q_PACKAGE_CODE") ? configscreen.First(f => f.Name == "Q_PACKAGE_CODE").Text : "N";
        L_PACKAGE_DISPLAY_WEB = configscreen.Any(f => f.Name == "L_PACKAGE_DISPLAY_WEB") ? configscreen.First(f => f.Name == "L_PACKAGE_DISPLAY_WEB").LovValue1 : "";
        Q_PACKAGE_DISPLAY_WEB = configscreen.Any(f => f.Name == "Q_PACKAGE_DISPLAY_WEB") ? configscreen.First(f => f.Name == "Q_PACKAGE_DISPLAY_WEB").LovValue1 : "";
        Q_PACKAGE_DISPLAY_WEB_ENABLE = configscreen.Any(f => f.Name == "Q_PACKAGE_DISPLAY_WEB") ? configscreen.First(f => f.Name == "Q_PACKAGE_DISPLAY_WEB").Text : "N";
        L_PACKAGE_NAME_THAI = configscreen.Any(f => f.Name == "L_PACKAGE_NAME_THAI") ? configscreen.First(f => f.Name == "L_PACKAGE_NAME_THAI").LovValue1 : "";
        Q_PACKAGE_NAME_THAI = configscreen.Any(f => f.Name == "Q_PACKAGE_NAME_THAI") ? configscreen.First(f => f.Name == "Q_PACKAGE_NAME_THAI").LovValue1 : "";
        Q_PACKAGE_NAME_THAI_ENABLE = configscreen.Any(f => f.Name == "Q_PACKAGE_NAME_THAI") ? configscreen.First(f => f.Name == "Q_PACKAGE_NAME_THAI").Text : "N";
        L_PACKAGE_NAME_ENG = configscreen.Any(f => f.Name == "L_PACKAGE_NAME_ENG") ? configscreen.First(f => f.Name == "L_PACKAGE_NAME_ENG").LovValue1 : "";
        Q_PACKAGE_NAME_ENG = configscreen.Any(f => f.Name == "Q_PACKAGE_NAME_ENG") ? configscreen.First(f => f.Name == "Q_PACKAGE_NAME_ENG").LovValue1 : "";
        Q_PACKAGE_NAME_ENG_ENABLE = configscreen.Any(f => f.Name == "Q_PACKAGE_NAME_ENG") ? configscreen.First(f => f.Name == "Q_PACKAGE_NAME_ENG").Text : "N";
        L_DOWNLOAD_SPEED = configscreen.Any(f => f.Name == "L_DOWNLOAD_SPEED") ? configscreen.First(f => f.Name == "L_DOWNLOAD_SPEED").LovValue1 : "";
        Q_DOWNLOAD_SPEED = configscreen.Any(f => f.Name == "Q_DOWNLOAD_SPEED") ? configscreen.First(f => f.Name == "Q_DOWNLOAD_SPEED").LovValue1 : "";
        Q_DOWNLOAD_SPEED_ENABLE = configscreen.Any(f => f.Name == "Q_DOWNLOAD_SPEED") ? configscreen.First(f => f.Name == "Q_DOWNLOAD_SPEED").Text : "N";
        L_UPLOAD_SPEED = configscreen.Any(f => f.Name == "L_UPLOAD_SPEED") ? configscreen.First(f => f.Name == "L_UPLOAD_SPEED").LovValue1 : "";
        Q_UPLOAD_SPEED = configscreen.Any(f => f.Name == "Q_UPLOAD_SPEED") ? configscreen.First(f => f.Name == "Q_UPLOAD_SPEED").LovValue1 : "";
        Q_UPLOAD_SPEED_ENABLE = configscreen.Any(f => f.Name == "Q_UPLOAD_SPEED") ? configscreen.First(f => f.Name == "Q_UPLOAD_SPEED").Text : "N";
        L_SALE_START_DATE = configscreen.Any(f => f.Name == "L_SALE_START_DATE") ? configscreen.First(f => f.Name == "L_SALE_START_DATE").LovValue1 : "";
        Q_SALE_START_DATE = configscreen.Any(f => f.Name == "Q_SALE_START_DATE") ? configscreen.First(f => f.Name == "Q_SALE_START_DATE").LovValue1 : "";
        Q_SALE_START_DATE_ENABLE = configscreen.Any(f => f.Name == "Q_SALE_START_DATE") ? configscreen.First(f => f.Name == "Q_SALE_START_DATE").Text : "N";
        L_SALE_END_DATE = configscreen.Any(f => f.Name == "L_SALE_END_DATE") ? configscreen.First(f => f.Name == "L_SALE_END_DATE").LovValue1 : "";
        Q_SALE_END_DATE = configscreen.Any(f => f.Name == "Q_SALE_END_DATE") ? configscreen.First(f => f.Name == "Q_SALE_END_DATE").LovValue1 : "";
        Q_SALE_END_DATE_ENABLE = configscreen.Any(f => f.Name == "Q_SALE_END_DATE") ? configscreen.First(f => f.Name == "Q_SALE_END_DATE").Text : "N";
        L_PRE_INITIATION_CHARGE = configscreen.Any(f => f.Name == "L_PRE_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "L_PRE_INITIATION_CHARGE").LovValue1 : "";
        Q_PRE_INITIATION_CHARGE = configscreen.Any(f => f.Name == "Q_PRE_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "Q_PRE_INITIATION_CHARGE").LovValue1 : "";
        Q_PRE_INITIATION_CHARGE_ENABLE = configscreen.Any(f => f.Name == "Q_PRE_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "Q_PRE_INITIATION_CHARGE").Text : "N";
        L_INITIATION_CHARGE = configscreen.Any(f => f.Name == "L_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "L_INITIATION_CHARGE").LovValue1 : "";
        Q_INITIATION_CHARGE = configscreen.Any(f => f.Name == "Q_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "Q_INITIATION_CHARGE").LovValue1 : "";
        Q_INITIATION_CHARGE_ENABLE = configscreen.Any(f => f.Name == "Q_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "Q_INITIATION_CHARGE").Text : "N";
        L_PRE_RECURRING_CHARGE = configscreen.Any(f => f.Name == "L_PRE_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "L_PRE_RECURRING_CHARGE").LovValue1 : "";
        Q_PRE_RECURRING_CHARGE = configscreen.Any(f => f.Name == "Q_PRE_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "Q_PRE_RECURRING_CHARGE").LovValue1 : "";
        Q_PRE_RECURRING_CHARGE_ENABLE = configscreen.Any(f => f.Name == "Q_PRE_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "Q_PRE_RECURRING_CHARGE").Text : "N";
        L_RECURRING_CHARGE = configscreen.Any(f => f.Name == "L_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "L_RECURRING_CHARGE").LovValue1 : "";
        Q_RECURRING_CHARGE = configscreen.Any(f => f.Name == "Q_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "Q_RECURRING_CHARGE").LovValue1 : "";
        Q_RECURRING_CHARGE_ENABLE = configscreen.Any(f => f.Name == "Q_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "Q_RECURRING_CHARGE").Text : "N";
        L_DISCOUNT_TYPE = configscreen.Any(f => f.Name == "L_DISCOUNT_TYPE") ? configscreen.First(f => f.Name == "L_DISCOUNT_TYPE").LovValue1 : "";
        Q_DISCOUNT_TYPE = configscreen.Any(f => f.Name == "Q_DISCOUNT_TYPE") ? configscreen.First(f => f.Name == "Q_DISCOUNT_TYPE").LovValue1 : "";
        Q_DISCOUNT_TYPE_ENABLE = configscreen.Any(f => f.Name == "Q_DISCOUNT_TYPE") ? configscreen.First(f => f.Name == "Q_DISCOUNT_TYPE").Text : "N";
        L_DISCOUNT_VALUE = configscreen.Any(f => f.Name == "L_DISCOUNT_VALUE") ? configscreen.First(f => f.Name == "L_DISCOUNT_VALUE").LovValue1 : "";
        Q_DISCOUNT_VALUE = configscreen.Any(f => f.Name == "Q_DISCOUNT_VALUE") ? configscreen.First(f => f.Name == "Q_DISCOUNT_VALUE").LovValue1 : "";
        Q_DISCOUNT_VALUE_ENABLE = configscreen.Any(f => f.Name == "Q_DISCOUNT_VALUE") ? configscreen.First(f => f.Name == "Q_DISCOUNT_VALUE").Text : "N";
        L_DISCOUNT_DAY = configscreen.Any(f => f.Name == "L_DISCOUNT_DAY") ? configscreen.First(f => f.Name == "L_DISCOUNT_DAY").LovValue1 : "";
        Q_DISCOUNT_DAY = configscreen.Any(f => f.Name == "Q_DISCOUNT_DAY") ? configscreen.First(f => f.Name == "Q_DISCOUNT_DAY").LovValue1 : "";
        Q_DISCOUNT_DAY_ENABLE = configscreen.Any(f => f.Name == "Q_DISCOUNT_DAY") ? configscreen.First(f => f.Name == "Q_DISCOUNT_DAY").Text : "N";
        L_PRODUCT_TYPE = configscreen.Any(f => f.Name == "L_PRODUCT_TYPE") ? configscreen.First(f => f.Name == "L_PRODUCT_TYPE").LovValue1 : "";
        Q_PRODUCT_TYPE = configscreen.Any(f => f.Name == "Q_PRODUCT_TYPE") ? configscreen.First(f => f.Name == "Q_PRODUCT_TYPE").LovValue1 : "";
        Q_PRODUCT_TYPE_ENABLE = configscreen.Any(f => f.Name == "Q_PRODUCT_TYPE") ? configscreen.First(f => f.Name == "Q_PRODUCT_TYPE").Text : "N";

        B_NEW_PACKAGE_GROUP = configscreen.Any(f => f.Name == "B_NEW_PACKAGE_GROUP") ? configscreen.First(f => f.Name == "B_NEW_PACKAGE_GROUP").LovValue1 : "";
        B_NEW_PRODUCT_SUBTYPE3 = configscreen.Any(f => f.Name == "B_NEW_PRODUCT_SUBTYPE3") ? configscreen.First(f => f.Name == "B_NEW_PRODUCT_SUBTYPE3").LovValue1 : "";

        L_VENDOR_PARTNER = configscreen.Any(f => f.Name == "L_VENDOR_PARTNER") ? configscreen.First(f => f.Name == "L_VENDOR_PARTNER").LovValue1 : "";
        Q_VENDOR_PARTNER = configscreen.Any(f => f.Name == "Q_VENDOR_PARTNER") ? configscreen.First(f => f.Name == "Q_VENDOR_PARTNER").LovValue1 : "";
        Q_VENDOR_PARTNER_ENABLE = configscreen.Any(f => f.Name == "Q_VENDOR_PARTNER") ? configscreen.First(f => f.Name == "Q_VENDOR_PARTNER").Text : "N";

        B_NEW_VENDOR_PARTNER = configscreen.Any(f => f.Name == "B_NEW_VENDOR_PARTNER") ? configscreen.First(f => f.Name == "B_NEW_VENDOR_PARTNER").LovValue1 : "";

        B_SAVE_FINISH = configscreen.Any(f => f.Name == "B_SAVE_FINISH") ? configscreen.First(f => f.Name == "B_SAVE_FINISH").LovValue1 : "";
        B_SAVE_CONTINUE_MAPPING = configscreen.Any(f => f.Name == "B_SAVE_CONTINUE_MAPPING") ? configscreen.First(f => f.Name == "B_SAVE_CONTINUE_MAPPING").LovValue1 : "";
    }
    
    <div class="panel panel-success">            
        <div class="panel-heading">
           <h3 class="panel-title">
              <span>Package Description</span>
              <a data-toggle="collapse" class="pull-right" href="#PackageDescriptionPane" onclick="onPanelToggle(this);" id="PackageDescPaneHeader"><i class="fa fa-chevron-circle-down fa-lg" id="PackageDescPaneHeaderArrow"></i></a>
           </h3>
        </div>
        <div id="PackageDescriptionPane" class="panel-collapse collapse in">
            <div class="panel-body" style="min-height: 235px;">
                <div id="PackageDescriptionRow1" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_PACKAGE_TYPE :</label>
                        @if (@Q_PACKAGE_TYPE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().DropDownListFor(t => t.PACKAGE_TYPE)
                                      .Name("PACKAGE_TYPE")
                                      .DataTextField("LOV_NAME")
                                      .DataValueField("LOV_VAL1")
                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("SelectLovNoIndex0DDL", "MasterData", new { type = "PACKAGE_TYPE" });
                                          });
                                      })
                                       .SelectedIndex(0)

                                   )

                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_VAS_SERVICE :</label>
                        @if (@Q_VAS_SERVICE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().DropDownListFor(t => t.VAS_SERVICE)
                                      .Name("VAS_SERVICE")
                                      .DataTextField("LOV_NAME")
                                      .DataValueField("LOV_VAL1")
                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("SelectLovNoIndex0DDL", "MasterData", new { type = "VAS_SERVICE" });
                                          });
                                      })
                                       .SelectedIndex(0)

                                   )
                    </div>
                </div>
                @*end row1*@
                <div id="PackageDescriptionRow2" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_PACKAGE_FOR :</label>
                        @if (@Q_PACKAGE_FOR_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().DropDownListFor(t => t.PACKAGE_FOR)
                                      .Name("PACKAGE_FOR")
                                      .DataTextField("LOV_NAME")
                                      .DataValueField("LOV_VAL1")
                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("SelectLovNoIndex0DDL", "MasterData", new { type = "PACKAGE_FOR" });
                                          });
                                      })
                                       .SelectedIndex(0)

                                   )
                    </div>
                    <div class="col-sm-6 col-md-6">
                    </div>
                </div>
                @*end row2*@
                <div id="PackageDescriptionRow3" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_PACKAGE_CODE :</label>
                        @if (@Q_PACKAGE_CODE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @Html.TextBoxFor(t => t.PACKAGE_CODE, new { maxlength = 255, @class = "k-textbox form-control", @readonly = true })
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_PACKAGE_DISPLAY_WEB :</label>
                        @if (@Q_PACKAGE_DISPLAY_WEB_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @Html.TextBoxFor(t => t.PACKAGE_DISPLAY_WEB, new { maxlength = 255, @class = "k-textbox form-control" })
                    </div>
                </div>
                @*end row3*@
                <div id="PackageDescriptionRow4" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_PACKAGE_NAME_THAI :</label>
                        @if (@Q_PACKAGE_NAME_THAI_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @Html.TextBoxFor(t => t.PACKAGE_NAME_THAI, new { maxlength = 255, @class = "k-textbox form-control" })
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_PACKAGE_NAME_ENG :</label>
                        @if (@Q_PACKAGE_NAME_ENG_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @Html.TextBoxFor(t => t.PACKAGE_NAME_ENG, new { maxlength = 255, @class = "k-textbox form-control" })
                    </div>
                </div>
                @*end row4*@
                <div id="PackageDescriptionRow5" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_DOWNLOAD_SPEED :</label>
                        @if (@Q_DOWNLOAD_SPEED_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @Html.TextBoxFor(t => t.DOWNLOAD_SPEED, new { maxlength = 255, @class = "k-textbox form-control" })
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_UPLOAD_SPEED :</label>
                        @if (@Q_UPLOAD_SPEED_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @Html.TextBoxFor(t => t.UPLOAD_SPEED, new { maxlength = 255, @class = "k-textbox form-control" })
                    </div>
                </div>
                @*end row5*@
                <div id="PackageDescriptionRow6" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_SALE_START_DATE :</label>
                        @if (@Q_SALE_START_DATE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().DatePicker()
                                .Name("SALE_START_DATE")
                                .Format("dd/MM/yyyy")
                                .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                .Value(@Model.SALE_START_DATE != null ? @Model.SALE_START_DATE.Substring(3, 2) + "/" + @Model.SALE_START_DATE.Substring(0, 2) + "/" + @Model.SALE_START_DATE.Substring(6, 4) : "")
                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                .Events(e => e.Change("SaleStartDateChange"))
                                //.Max(@Model.SALE_END_DATE != null ? @Model.SALE_START_DATE.Substring(3, 2) + "/" + @Model.SALE_START_DATE.Substring(0, 2) + "/" + @Model.SALE_START_DATE.Substring(6, 4) : DateTime.Now.AddYears(50).ToString("MM/dd/yyyy"))
                                )
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_SALE_END_DATE :</label>
                        @if (@Q_SALE_END_DATE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().DatePicker()
                                .Name("SALE_END_DATE")
                                .Format("dd/MM/yyyy")
                                .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                .Value(@Model.SALE_END_DATE != null ? @Model.SALE_END_DATE.Substring(3, 2) + "/" + @Model.SALE_END_DATE.Substring(0, 2) + "/" + @Model.SALE_END_DATE.Substring(6, 4) : "")
                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                .Events(e => e.Change("SaleEndDateChange"))
                                //.Min(@Model.SALE_START_DATE != null ? @Model.SALE_START_DATE.Substring(3, 2) + "/" + @Model.SALE_START_DATE.Substring(0, 2) + "/" + @Model.SALE_START_DATE.Substring(6, 4) : "")
                                )
                    </div>
                </div>
                @*end row6*@
                <div id="PackageDescriptionRow7" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_PRE_INITIATION_CHARGE :</label>
                        @if (@Q_PRE_INITIATION_CHARGE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().NumericTextBoxFor(t => t.PRE_INITIATION_CHARGE)
                                .Format("#")
                                .Min(0)
                                .Max(9999999)
                                .Placeholder("Enter numeric value")
                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                            )
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_INITIATION_CHARGE :</label>
                        @if (@Q_INITIATION_CHARGE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().NumericTextBoxFor(t => t.INITIATION_CHARGE)
                                .Format("#")
                                .Min(0)
                                .Max(9999999)
                                .Placeholder("Enter numeric value")
                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                            )
                    </div>
                </div>
                @*end row7*@
                <div id="PackageDescriptionRow8" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_PRE_RECURRING_CHARGE :</label>
                        @if (@Q_PRE_RECURRING_CHARGE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().NumericTextBoxFor(t => t.PRE_RECURRING_CHARGE)
                                .Format("#")
                                .Min(0)
                                .Max(9999999)
                                .Placeholder("Enter numeric value")
                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                            )
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_RECURRING_CHARGE :</label>
                        @if (@Q_RECURRING_CHARGE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().NumericTextBoxFor(t => t.RECURRING_CHARGE)
                                .Format("#")
                                .Min(0)
                                .Max(9999999)
                                .Placeholder("Enter numeric value")
                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                            )
                    </div>
                </div>
                @*end row8*@
                <div id="PackageDescriptionRow9" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_DISCOUNT_TYPE :</label>
                        @if (@Q_DISCOUNT_TYPE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().DropDownListFor(t => t.DISCOUNT_TYPE)
                                      .Name("DISCOUNT_TYPE")
                                      .DataTextField("LOV_NAME")
                                      .DataValueField("LOV_VAL1")
                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("SelectLov", "MasterData", new { type = "DISCOUNT_TYPE" });
                                          });
                                      })
                                       .SelectedIndex(0)

                                   )
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_DISCOUNT_VALUE :</label>
                        @if (@Q_DISCOUNT_VALUE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().NumericTextBoxFor(t => t.DISCOUNT_VALUE)
                                .Format("#")
                                .Min(0)
                                .Max(9999999)
                                .Placeholder("Enter numeric value")
                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                            )
                    </div>
                </div>
                @*end row9*@
                <div id="PackageDescriptionRow10" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <label>@L_DISCOUNT_DAY :</label>
                        @if (@Q_DISCOUNT_DAY_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        @(Html.Kendo().NumericTextBoxFor(t => t.DISCOUNT_DAY)
                                .Format("#")
                                .Min(0)
                                .Max(9999999)
                                .Placeholder("Enter numeric value")
                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                            )

                    </div>
                </div>
                @*end row10*@
                <div id="PackageDescriptionRow11" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                        <label>@L_PRODUCT_TYPE :</label>
                        @if (@Q_PRODUCT_TYPE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                        }
                        <div style="overflow: auto;">
                            @{Html.RenderPartial("_ProductTypeTable", Model.ListPackageType);}
                        </div>
                        <a onclick='addNewPackageGroup()' id='btnCreateNewPackageGroup' class='btn btn-default'><i class='fa fa-external-link fa-lg'></i>&nbsp;@B_NEW_PACKAGE_GROUP</a>&nbsp;&nbsp;
                        <a onclick='addNewProductSubtype3()' id='btnCreateNewProductSubtype3' class='btn btn-default'><i class='fa fa-external-link fa-lg'></i>&nbsp;@B_NEW_PRODUCT_SUBTYPE3</a>
                    </div>
                </div>
                @*end row11*@
                <div id="PackageDescriptionRow12" class="row i-hidden i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        <label>@L_VENDOR_PARTNER :</label>
                        @if (@Q_VENDOR_PARTNER_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                            }
                        <div style="overflow: auto;">
                            @{Html.RenderPartial("_VendorOrPartnerTable", Model.ListVendorOrPartner);}
                        </div>
                        <a onclick='addNewVendorPartner()' id='btnCreateNewVendorPartner' class='btn btn-default'><i class='fa fa-external-link fa-lg'></i>&nbsp;@B_NEW_VENDOR_PARTNER</a>
                    </div>
                </div>
                @*end row12*@
                <div id="PackageDescriptionRow13" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <div class='pull-right'>
                            <a onclick='savePage1(1)' id='SavePage1' class='btn btn-default'><i class='fa fa-floppy-o fa-lg'></i>&nbsp;@B_SAVE_FINISH</a>&nbsp;&nbsp;
                           <a onclick='savePage1(2)' id='SavePage1ToPage2' class='btn btn-default'><i class='fa fa-floppy-o fa-lg'></i>&nbsp;@B_SAVE_CONTINUE_MAPPING</a>
                        </div>
                    </div>
                </div>
                @*end row13*@

            </div>
        </div> @*end PackageDescriptionPane*@
    </div>        

}

@helper PackageDescPane2()
{
    string G_M_PACKAGE_TYPE = "";
    string G_M_SFF_PROMOTION_CODE = "";
    string G_M_PACKAGE_NAME_THA = "";
    string G_M_SFF_PROMOTION_BILL_THA = "";
    string G_M_SFF_PROMOTION_BILL_ENG = "";
    string G_M_SALE_START_DATE = "";
    string G_M_SALE_END_DATE = "";
    string G_M_EFFECTIVE_DATE = "";
    string G_M_EXPIRE_DATE = "";
    string G_M_MAPPING_CODE = "";
    string G_M_MAPPING_PRODUCT = "";

    string G_M_PACKAGE_TYPE_ENABLE = "";
    string G_M_SFF_PROMOTION_CODE_ENABLE = "";
    string G_M_PACKAGE_NAME_THA_ENABLE = "";
    string G_M_SFF_PROMOTION_BILL_THA_ENABLE = "";
    string G_M_SFF_PROMOTION_BILL_ENG_ENABLE = "";
    string G_M_SALE_START_DATE_ENABLE = "";
    string G_M_SALE_END_DATE_ENABLE = "";
    string G_M_EFFECTIVE_DATE_ENABLE = "";
    string G_M_EXPIRE_DATE_ENABLE = "";
    string G_M_MAPPING_CODE_ENABLE = "";
    string G_M_MAPPING_PRODUCT_ENABLE = "";


    string L_PACKAGE_TYPE = "";
    string Q_PACKAGE_TYPE = "";
    string Q_PACKAGE_TYPE_ENABLE = "";
    string B_SEARCH = "";
    string B_SAVE_FINISH = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        G_M_PACKAGE_TYPE = configscreen.Any(f => f.Name == "G_M_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "G_M_PACKAGE_TYPE").LovValue1 : "";
        G_M_PACKAGE_TYPE_ENABLE = configscreen.Any(f => f.Name == "G_M_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "G_M_PACKAGE_TYPE").Text : "N";

        G_M_SFF_PROMOTION_CODE = configscreen.Any(f => f.Name == "G_M_SFF_PROMOTION_CODE") ? configscreen.First(f => f.Name == "G_M_SFF_PROMOTION_CODE").LovValue1 : "";
        G_M_SFF_PROMOTION_CODE_ENABLE = configscreen.Any(f => f.Name == "G_M_SFF_PROMOTION_CODE") ? configscreen.First(f => f.Name == "G_M_SFF_PROMOTION_CODE").Text : "N";

        G_M_PACKAGE_NAME_THA = configscreen.Any(f => f.Name == "G_M_PACKAGE_NAME_THA") ? configscreen.First(f => f.Name == "G_M_PACKAGE_NAME_THA").LovValue1 : "";
        G_M_PACKAGE_NAME_THA_ENABLE = configscreen.Any(f => f.Name == "G_M_PACKAGE_NAME_THA") ? configscreen.First(f => f.Name == "G_M_PACKAGE_NAME_THA").Text : "N";

        G_M_SFF_PROMOTION_BILL_THA = configscreen.Any(f => f.Name == "G_M_SFF_PROMOTION_BILL_THA") ? configscreen.First(f => f.Name == "G_M_SFF_PROMOTION_BILL_THA").LovValue1 : "";
        G_M_SFF_PROMOTION_BILL_THA_ENABLE = configscreen.Any(f => f.Name == "G_M_SFF_PROMOTION_BILL_THA") ? configscreen.First(f => f.Name == "G_M_SFF_PROMOTION_BILL_THA").Text : "N";

        G_M_SFF_PROMOTION_BILL_ENG = configscreen.Any(f => f.Name == "G_M_SFF_PROMOTION_BILL_ENG") ? configscreen.First(f => f.Name == "G_M_SFF_PROMOTION_BILL_ENG").LovValue1 : "";
        G_M_SFF_PROMOTION_BILL_ENG_ENABLE = configscreen.Any(f => f.Name == "G_M_SFF_PROMOTION_BILL_ENG") ? configscreen.First(f => f.Name == "G_M_SFF_PROMOTION_BILL_ENG").Text : "N";

        G_M_SALE_START_DATE = configscreen.Any(f => f.Name == "G_M_SALE_START_DATE") ? configscreen.First(f => f.Name == "G_M_SALE_START_DATE").LovValue1 : "";
        G_M_SALE_START_DATE_ENABLE = configscreen.Any(f => f.Name == "G_M_SALE_START_DATE") ? configscreen.First(f => f.Name == "G_M_SALE_START_DATE").Text : "N";

        G_M_SALE_END_DATE = configscreen.Any(f => f.Name == "G_M_SALE_END_DATE") ? configscreen.First(f => f.Name == "G_M_SALE_END_DATE").LovValue1 : "";
        G_M_SALE_END_DATE_ENABLE = configscreen.Any(f => f.Name == "G_M_SALE_END_DATE") ? configscreen.First(f => f.Name == "G_M_SALE_END_DATE").Text : "N";

        G_M_EFFECTIVE_DATE = configscreen.Any(f => f.Name == "G_M_EFFECTIVE_DATE") ? configscreen.First(f => f.Name == "G_M_EFFECTIVE_DATE").LovValue1 : "";
        G_M_EFFECTIVE_DATE_ENABLE = configscreen.Any(f => f.Name == "G_M_EFFECTIVE_DATE") ? configscreen.First(f => f.Name == "G_M_EFFECTIVE_DATE").Text : "N";

        G_M_EXPIRE_DATE = configscreen.Any(f => f.Name == "G_M_EXPIRE_DATE") ? configscreen.First(f => f.Name == "G_M_EXPIRE_DATE").LovValue1 : "";
        G_M_EXPIRE_DATE_ENABLE = configscreen.Any(f => f.Name == "G_M_EXPIRE_DATE") ? configscreen.First(f => f.Name == "G_M_EXPIRE_DATE").Text : "N";

        G_M_MAPPING_CODE = configscreen.Any(f => f.Name == "G_M_MAPPING_CODE") ? configscreen.First(f => f.Name == "G_M_MAPPING_CODE").LovValue1 : "";
        G_M_MAPPING_CODE_ENABLE = configscreen.Any(f => f.Name == "G_M_MAPPING_CODE") ? configscreen.First(f => f.Name == "G_M_MAPPING_CODE").Text : "N";

        G_M_MAPPING_PRODUCT = configscreen.Any(f => f.Name == "G_M_MAPPING_PRODUCT") ? configscreen.First(f => f.Name == "G_M_MAPPING_PRODUCT").LovValue1 : "";
        G_M_MAPPING_PRODUCT_ENABLE = configscreen.Any(f => f.Name == "G_M_MAPPING_PRODUCT") ? configscreen.First(f => f.Name == "G_M_MAPPING_PRODUCT").Text : "N";

        L_PACKAGE_TYPE = configscreen.Any(f => f.Name == "L_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "L_PACKAGE_TYPE").LovValue1 : "";
        Q_PACKAGE_TYPE = configscreen.Any(f => f.Name == "Q_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "Q_PACKAGE_TYPE").LovValue1 : "";
        Q_PACKAGE_TYPE_ENABLE = configscreen.Any(f => f.Name == "Q_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "Q_PACKAGE_TYPE").Text : "N";
        
        B_SEARCH = configscreen.Any(f => f.Name == "B_SEARCH") ? configscreen.First(f => f.Name == "B_SEARCH").LovValue1 : "";

        B_SAVE_FINISH = configscreen.Any(f => f.Name == "B_SAVE_FINISH") ? configscreen.First(f => f.Name == "B_SAVE_FINISH").LovValue1 : "";
        
    }
    
    <div class="panel panel-success">            
        <div class="panel-heading">
           <h3 class="panel-title">
              <span>Mapping</span>
              <a data-toggle="collapse" class="pull-right" href="#PackageDescriptionPane2" onclick="onPanelToggle(this);" id="PackageDescPane2Header"><i class="fa fa-chevron-circle-down fa-lg" id="PackageDescPane2HeaderArrow"></i></a>
           </h3>
        </div>
        <div id="PackageDescriptionPane2" class="panel-collapse collapse in">
            <div class="panel-body" style="min-height: 100px;"> 
                <div id="PackageDescription2Row1" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>                            
                    </div>
               </div> @*end row1*@
                @if (@Model.PackageTypeSearchShow == "Y")
                {
                <div id="PackageDescription2Row2" class="row i-gap-top-1">
                    <div class="col-sm-2 col-md-2">
                        <label>@L_PACKAGE_TYPE</label>
                        @if (@Q_PACKAGE_TYPE_ENABLE == "Y")
                        {
                            <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>
                        }                                               
                    </div>
               </div> @*end row2*@
                <div id="PackageDescription2Row3" class="row i-gap-top-1">
                     <div class="col-sm-6 col-md-6">
                            @(Html.Kendo().DropDownList()
                                      .Name("PACKAGE_TYPE_SEARCH")
                                      .DataTextField("LOV_NAME")
                                      .DataValueField("LOV_VAL1")
                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("SelectLovNoIndex0DDL", "MasterData", new { type = "PACKAGE_TYPE", haveall = true });
                                          });
                                      })
                                       .SelectedIndex(0)

                                   )                        
                    </div>
                    <div class="col-sm-6 col-md-6">
                            <a class="btn btn-info" onclick="_SearchPackageTypeForMapping();"><i class="fa fa-search fa-lg"></i>&nbsp;&nbsp;@B_SEARCH</a>                        
                    </div>
                </div> @*end row3*@
                <div id="PackageDescription2Row4" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                        <div id="gridresultpackage" class="row">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.PackageTypeSearch>()
                        .Name("gridPackageTypeSearch")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.package_type_select)
                                .Title("<input type='checkbox' class='PackageTypeSearchSelectAll' />")
                                .ClientTemplate("<input type='checkbox' class='PackageTypeSearchSelect' />")
                                .HtmlAttributes(new { style = "text-align:center;" })
                                .Width(50);

                            if (@G_M_PACKAGE_TYPE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.package_type).Title(@G_M_PACKAGE_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.package_type).Title(@G_M_PACKAGE_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            columns.Bound(p => p.package_code).Title("Package code").HtmlAttributes(new { style = "text-align:left;" }).Hidden();

                            if (@G_M_SFF_PROMOTION_CODE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sff_promotion_code).Title(@G_M_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.sff_promotion_code).Title(@G_M_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                            }

                            if (@G_M_PACKAGE_NAME_THA_ENABLE == "Y")
                            {
                                columns.Bound(p => p.package_name_tha).Title(@G_M_PACKAGE_NAME_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                            }
                            else
                            {
                                columns.Bound(p => p.package_name_tha).Title(@G_M_PACKAGE_NAME_THA).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            if (@G_M_SFF_PROMOTION_BILL_THA_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_M_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(450);
                            }
                            else
                            {
                                columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_M_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            if (@G_M_SFF_PROMOTION_BILL_ENG_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_M_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Width(450);
                            }
                            else
                            {
                                columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_M_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            if (@G_M_SALE_START_DATE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sale_start_date).Title(@G_M_SALE_START_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.sale_start_date).Title(@G_M_SALE_START_DATE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                            }

                            if (@G_M_SALE_END_DATE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sale_end_date).Title(@G_M_SALE_END_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.sale_end_date).Title(@G_M_SALE_END_DATE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                            }

                            if (@G_M_EFFECTIVE_DATE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.effective_date).Title(@G_M_EFFECTIVE_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.effective_date).Title(@G_M_EFFECTIVE_DATE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                            }

                            if (@G_M_EXPIRE_DATE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.expire_date).Title(@G_M_EXPIRE_DATE).HtmlAttributes(new { style = "text-align:centr;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.expire_date).Title(@G_M_EXPIRE_DATE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            if (@G_M_MAPPING_CODE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.mapping_code).Title(@G_M_MAPPING_CODE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.mapping_code).Title(@G_M_MAPPING_CODE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            if (@G_M_MAPPING_PRODUCT_ENABLE == "Y")
                            {
                                columns.Bound(p => p.mapping_product).Title(@G_M_MAPPING_PRODUCT).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.mapping_product).Title(@G_M_MAPPING_PRODUCT).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                        })
                        .Scrollable(scrollable => scrollable.Height("auto"))
                        .Pageable(pageable => pageable
                            .PageSizes(false)
                            .Numeric(true)
                        )
                        .AutoBind(false)
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(20)
                            .Read(read => read.Action("SearchPackageType", "ConfigurationPackages").Data("bindingValuePackagetType"))
                        )


                )
                        </div>
                    </div>
               </div> @*end row4*@
                <div id="PackageDescription2Row5" class="row i-gap-top-1">
                   <div class="col-sm-5 col-md-5">
                   </div>
                    <div class="col-sm-2 col-md-2">
                        <a class="btn btn-info" onclick="_AddPakageMapping()"><i class="fa fa-chevron-down fa-lg"></i></a>
                        &nbsp;&nbsp;
                        <a class="btn btn-info" onclick="_DeletePakageMapping()"><i class="fa fa-chevron-up fa-lg"></i></a>
                    </div>
                   <div class="col-sm-5 col-md-5">
                   </div>
                </div> @*end row5*@
                <div id="PackageDescription2Row6" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                        <div id="gridresultpackagetmp" class="row">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.PackageTypeUse>()
                        .Name("gridPackageTypeSearchTmp")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.package_type_select)
                                .Title("<input type='checkbox' class='PackageTypeSearchTmpSelectAll' />")
                                .ClientTemplate("<input type='checkbox' id='checkbox_#=sff_promotion_code#' class='PackageTypeSearchTmpSelect' />")                            
                                .HtmlAttributes(new { style = "text-align:center;" })
                                .Width(50);
                            if (@G_M_PACKAGE_TYPE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.package_type).Title(@G_M_PACKAGE_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.package_type).Title(@G_M_PACKAGE_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            columns.Bound(p => p.package_code).Title("Package code").HtmlAttributes(new { style = "text-align:left;" }).Hidden();

                            if (@G_M_SFF_PROMOTION_CODE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sff_promotion_code).Title(@G_M_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.sff_promotion_code).Title(@G_M_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                            }

                            if (@G_M_PACKAGE_NAME_THA_ENABLE == "Y")
                            {
                                columns.Bound(p => p.package_name_tha).Title(@G_M_PACKAGE_NAME_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                            }
                            else
                            {
                                columns.Bound(p => p.package_name_tha).Title(@G_M_PACKAGE_NAME_THA).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            if (@G_M_SFF_PROMOTION_BILL_THA_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_M_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(450);
                            }
                            else
                            {
                                columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_M_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            if (@G_M_SFF_PROMOTION_BILL_ENG_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_M_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Width(450);
                            }
                            else
                            {
                                columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_M_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            if (@G_M_SALE_START_DATE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sale_start_date).Title(@G_M_SALE_START_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.sale_start_date).Title(@G_M_SALE_START_DATE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                            }

                            if (@G_M_SALE_END_DATE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.sale_end_date).Title(@G_M_SALE_END_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.sale_end_date).Title(@G_M_SALE_END_DATE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                            }

                            if (@G_M_EFFECTIVE_DATE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.effective_dtm).Title(@G_M_EFFECTIVE_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.effective_dtm).Title(@G_M_EFFECTIVE_DATE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                            }

                            if (@G_M_EXPIRE_DATE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.expire_dtm).Title(@G_M_EXPIRE_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.expire_dtm).Title(@G_M_EXPIRE_DATE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                            }

                            if (@G_M_MAPPING_CODE_ENABLE == "Y")
                            {
                                columns.Bound(p => p.mapping_code).Title(@G_M_MAPPING_CODE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.mapping_code).Title(@G_M_MAPPING_CODE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                            if (@G_M_MAPPING_PRODUCT_ENABLE == "Y")
                            {
                                columns.Bound(p => p.mapping_product).Title(@G_M_MAPPING_PRODUCT).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                            }
                            else
                            {
                                columns.Bound(p => p.mapping_product).Title(@G_M_MAPPING_PRODUCT).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                            }

                        })
                        .Pageable(pageable => pageable
                            .PageSizes(false)
                            .Numeric(true)
                        )
                        .Scrollable(scrollable => scrollable.Height("auto"))
                        .AutoBind(true)
                        .Events(e => e.DataBound("onRowBoundPackageTypeSearch"))
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(20)
                            .Read(read => read.Action("PackageForMappingUse", "ConfigurationPackages").Data("bindingValuePackagetType"))
                        )


                )
                        </div>
                    </div>
                </div> @*end row6*@
                }            
                <div id="PackageDescription2Row7" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        
                    </div>
                   <div class="col-sm-6 col-md-6">
                       <div class='pull-right'>
                           <a onclick='savePage2(1)' id='SavePage2' class='btn btn-default'><i class='fa fa-floppy-o fa-lg'></i>&nbsp;@B_SAVE_FINISH</a>&nbsp;&nbsp;
                           <a onclick='savePage2(2)' id='SavePage2ToPage3' class='btn btn-default'><i class='fa fa-floppy-o fa-lg'></i>&nbsp;Save continue package User group</a>
                       </div>
                   </div>
                </div> @*end row7*@
            </div>
        </div> @*end PackageDescriptionPane*@
    </div>
}

@helper PackageDescPane3()
{
    string L_CATALOG = "";
    string Q_CATALOG = "";
    string Q_CATALOG_ENABLE = "";

    string B_SAVE_FINISH = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        L_CATALOG = configscreen.Any(f => f.Name == "L_CATALOG") ? configscreen.First(f => f.Name == "L_CATALOG").LovValue1 : "";
        Q_CATALOG = configscreen.Any(f => f.Name == "Q_CATALOG") ? configscreen.First(f => f.Name == "Q_CATALOG").LovValue1 : "";
        Q_CATALOG_ENABLE = configscreen.Any(f => f.Name == "Q_CATALOG") ? configscreen.First(f => f.Name == "Q_CATALOG").Text : "N";

        B_SAVE_FINISH = configscreen.Any(f => f.Name == "B_SAVE_FINISH") ? configscreen.First(f => f.Name == "B_SAVE_FINISH").LovValue1 : "";
    }
    
    <div class="panel panel-success">            
        <div class="panel-heading">
           <h3 class="panel-title">
              <span>Mapping</span>
              <a data-toggle="collapse" class="pull-right" href="#PackageDescriptionPane3" onclick="onPanelToggle(this);" id="PackageDescPane3Header"><i class="fa fa-chevron-circle-down fa-lg" id="PackageDescPane3HeaderArrow"></i></a>
           </h3>
        </div>
        <div id="PackageDescriptionPane3" class="panel-collapse collapse in">
            <div class="panel-body" style="min-height: 100px;"> 
                <div id="PackageDescription3Row1" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                            <label>@L_CATALOG </label>
                            @if (@Q_CATALOG_ENABLE == "Y")
                            {
                                <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>  
                            }                          
                    </div>
               </div> @*end row1*@
               @if (Model.ListCatalogAndAuthorizeTable.Count > 0)
               {
                    <div id="PackageDescription3Row2" class="row i-gap-top-1">
                        <div class="col-sm-6 col-md-6">
                            <table class="table table-bordered" id="span-vendorpartner">
                                <thead>
                                    <tr>
                                        <th class="col-sm-1 col-md-1 text-center">@Html.CheckBox("CatalogCheckBoxAll", false, new { @class = "CatalogALL" })</th>
                                        <th class="col-sm-5 col-md-5">Select All</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < Model.ListCatalogAndAuthorizeTable.Count; i++)
                                    {
                                        <tr>
                                            <td class="text-center">
                                                @Html.CheckBox("ListCatalogAndAuthorizeTable[" + i + "].CatalogAndAuthorizeTableSelect", @Model.ListCatalogAndAuthorizeTable[i].CatalogAndAuthorizeTableSelect, new { @class = "CatalogSubCheck" })
                                                @Html.Hidden("ListCatalogAndAuthorizeTable[" + i + "].CatalogAndAuthorizeTableSelectOld", @Model.ListCatalogAndAuthorizeTable[i].CatalogAndAuthorizeTableSelectOld)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(x => x.ListCatalogAndAuthorizeTable[i].CatalogAndAuthorizeTableName, new { @class = "k-textbox form-control" })
                                                @Html.Hidden("ListCatalogAndAuthorizeTable[" + i + "].CatalogAndAuthorizeTableName", @Model.ListCatalogAndAuthorizeTable[i].CatalogAndAuthorizeTableName)
                                                @Html.Hidden("ListCatalogAndAuthorizeTable[" + i + "].CatalogAndAuthorizeTableValue", @Model.ListCatalogAndAuthorizeTable[i].CatalogAndAuthorizeTableValue)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div> @*end row2*@
               }
                <div id="PackageDescription3Row3" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        
                    </div>
                   <div class="col-sm-6 col-md-6">
                       <div class='pull-right'>
                           <a onclick='savePage3(1)' id='SavePage3' class='btn btn-default'><i class='fa fa-floppy-o fa-lg'></i>&nbsp;@B_SAVE_FINISH&nbsp;</a>&nbsp;&nbsp;
                           <a onclick='savePage3(2)' id='SavePage3ToPage4' class='btn btn-default'><i class='fa fa-floppy-o fa-lg'></i>&nbsp;Save and Continue Config Package Location </a>
                       </div>
                   </div>
                </div> @*end row3*@
            </div>
        </div> @*end PackageDescriptionPane*@
    </div>
}

@helper PackageDescPane4()
{
    string L_REGION = "";
    string Q_REGION = "";
    string Q_REGION_ENABLE = "";

    string B_SELECT_PROVINCE = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        L_REGION = configscreen.Any(f => f.Name == "L_REGION") ? configscreen.First(f => f.Name == "L_REGION").LovValue1 : "";
        Q_REGION = configscreen.Any(f => f.Name == "Q_REGION") ? configscreen.First(f => f.Name == "Q_REGION").LovValue1 : "";
        Q_REGION_ENABLE = configscreen.Any(f => f.Name == "Q_REGION") ? configscreen.First(f => f.Name == "Q_REGION").Text : "N";

        B_SELECT_PROVINCE = configscreen.Any(f => f.Name == "B_SELECT_PROVINCE") ? configscreen.First(f => f.Name == "B_SELECT_PROVINCE").LovValue1 : "";

    }
    <div class="panel panel-success">            
        <div class="panel-heading">
           <h3 class="panel-title">
              <span>Region and Provice</span>
              <a data-toggle="collapse" class="pull-right" href="#PackageDescriptionPane4" onclick="onPanelToggle(this);" id="PackageDescPane4Header"><i class="fa fa-chevron-circle-down fa-lg" id="PackageDescPane4HeaderArrow"></i></a>
           </h3>
        </div>
        <div id="PackageDescriptionPane4" class="panel-collapse collapse in">
            <div class="panel-body" style="min-height: 100px;"> 
                <div id="PackageDescription4Row1" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                            <label>@L_REGION </label>
                            @if (@Q_REGION_ENABLE == "Y")
                            {
                                <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>  
                            }                          
                    </div>
               </div> @*end row1*@
                <div id="PackageDescription4Row2" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        @(Html.Kendo().MultiSelect()
                            .Name("ddlRegion")
                            .Placeholder("Select region...")
                            .Value(new SelectList(Model.RegionUse, "RegionTableName", "RegionTableName"))
                            .BindTo(new SelectList(Model.ListRegionTable, "RegionTableName", "RegionTableName"))
                        )
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <a class="btn btn-info" onclick="_SearchProvince();"><i class="fa fa-search fa-lg"></i>&nbsp;&nbsp;@B_SELECT_PROVINCE</a>
                    </div>
                </div> @*end row2*@
                <div id="PackageDescription4Row3" class="row i-gap-top-1">
                    <div class="col-sm-5 col-md-5">
                        <div id="gridresultprovince" class="row">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.ProvinceTable>()
                                .Name("gridProvince")
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.ProvinceSelect)
                                        .Title("<input type='checkbox' class='ProvinceSelectAll' />")
                                        .ClientTemplate("<input type='checkbox' class='ProvinceSelect' />")
                                        .HtmlAttributes(new { style = "text-align:center;" })
                                        .Width(50);
                                    columns.Bound(p => p.ProvinceName).Title("Province").HtmlAttributes(new { style = "text-align:left;" }).Width(250);
                                    columns.Bound(p => p.SubRegion).Title("SubRegion").HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                })
                                .Scrollable(scrollable => scrollable.Height("auto"))
                                .Pageable(pageable => pageable
                                    .PageSizes(false)
                                    .Numeric(true)
                                )
                                .AutoBind(false)
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Read(read => read.Action("SearchProvince", "ConfigurationPackages").Data("bindingValueProvince"))
                                )
                            )

                        </div>
                    </div>
                    <div class="col-sm-2 col-md-2 text-center">
                        <a class="btn btn-info" onclick="_DeleteProvince()"><i class="fa fa-chevron-left fa-lg"></i></a>&nbsp;&nbsp;
                        <a class="btn btn-info" onclick="_AddProvince()"><i class="fa fa-chevron-right fa-lg"></i></a>
                    </div>
                    <div class="col-sm-5 col-md-5">
                        <div id="gridresultprovincetmp" class="row">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.ProvinceTable>()
                                .Name("gridProvinceTmp")
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.ProvinceSelect)
                                        .Title("<input type='checkbox' class='ProvinceTmpSelectAll' />")
                                        .ClientTemplate("<input type='checkbox' class='ProvinceTmpSelect' />")
                                        .HtmlAttributes(new { style = "text-align:center;" })
                                        .Width(50);
                                    columns.Bound(p => p.ProvinceName).Title("Province").HtmlAttributes(new { style = "text-align:left;" });
                                    columns.Bound(p => p.SubRegion).Title("SubRegion").HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                })
                                .Scrollable(scrollable => scrollable.Height("auto"))
                                .Pageable(pageable => pageable
                                    .PageSizes(false)
                                    .Numeric(true)
                                )
                                .AutoBind(true)
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Read(read => read.Action("ProvinceUse", "ConfigurationPackages").Data("bindingValueProvince"))
                                )
                            )

                        </div>
                    </div>
                </div> @*end row3*@
            </div>
        </div> @*end PackageDescriptionPane*@
    </div>
    
}

@helper PackageDescPane5()
{
    
    string L_TECHNOLOGY = "";
    string Q_TECHNOLOGY = "";
    string Q_TECHNOLOGY_ENABLE = "";

    string L_SEARCH_BY_B_V = "";
    string Q_SEARCH_BY_B_V = "";
    string Q_SEARCH_BY_B_V_ENABLE = "";

    string G_BUILDING_VILLAGE_NAME = "";
    string G_BUILDING_NO = "";

    string G_BUILDING_VILLAGE_NAME_ENABLE = "";
    string G_BUILDING_NO_ENABLE = "";

    string B_SEARCH = "";
    string B_SAVE_FINISH = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        L_TECHNOLOGY = configscreen.Any(f => f.Name == "L_TECHNOLOGY") ? configscreen.First(f => f.Name == "L_TECHNOLOGY").LovValue1 : "";
        Q_TECHNOLOGY = configscreen.Any(f => f.Name == "Q_TECHNOLOGY") ? configscreen.First(f => f.Name == "Q_TECHNOLOGY").LovValue1 : "";
        Q_TECHNOLOGY_ENABLE = configscreen.Any(f => f.Name == "Q_TECHNOLOGY") ? configscreen.First(f => f.Name == "Q_TECHNOLOGY").Text : "N";

        L_SEARCH_BY_B_V = configscreen.Any(f => f.Name == "L_SEARCH_BY_B_V") ? configscreen.First(f => f.Name == "L_SEARCH_BY_B_V").LovValue1 : "";
        Q_SEARCH_BY_B_V = configscreen.Any(f => f.Name == "Q_SEARCH_BY_B_V") ? configscreen.First(f => f.Name == "Q_SEARCH_BY_B_V").LovValue1 : "";
        Q_SEARCH_BY_B_V_ENABLE = configscreen.Any(f => f.Name == "Q_SEARCH_BY_B_V") ? configscreen.First(f => f.Name == "Q_SEARCH_BY_B_V").Text : "N";

        G_BUILDING_VILLAGE_NAME = configscreen.Any(f => f.Name == "G_BUILDING_VILLAGE_NAME") ? configscreen.First(f => f.Name == "G_BUILDING_VILLAGE_NAME").LovValue1 : "";
        G_BUILDING_VILLAGE_NAME_ENABLE = configscreen.Any(f => f.Name == "G_BUILDING_VILLAGE_NAME") ? configscreen.First(f => f.Name == "G_BUILDING_VILLAGE_NAME").Text : "N";

        G_BUILDING_NO = configscreen.Any(f => f.Name == "G_BUILDING_NO") ? configscreen.First(f => f.Name == "G_BUILDING_NO").LovValue1 : "";
        G_BUILDING_NO_ENABLE = configscreen.Any(f => f.Name == "G_BUILDING_NO") ? configscreen.First(f => f.Name == "G_BUILDING_NO").Text : "N";

        B_SEARCH = configscreen.Any(f => f.Name == "B_SEARCH") ? configscreen.First(f => f.Name == "B_SEARCH").LovValue1 : "";

        B_SAVE_FINISH = configscreen.Any(f => f.Name == "B_SAVE_FINISH") ? configscreen.First(f => f.Name == "B_SAVE_FINISH").LovValue1 : "";
    }
    
    <div class="panel panel-success">            
        <div class="panel-heading">
           <h3 class="panel-title">
              <span>Location</span>
              <a data-toggle="collapse" class="pull-right" href="#PackageDescriptionPane5" onclick="onPanelToggle(this);" id="PackageDescPane5Header"><i class="fa fa-chevron-circle-down fa-lg" id="PackageDescPane5HeaderArrow"></i></a>
           </h3>
        </div>
        <div id="PackageDescriptionPane5" class="panel-collapse collapse in">
            <div class="panel-body" style="min-height: 100px;"> 
                <div id="PackageDescription5Row1" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                            <label>@L_TECHNOLOGY </label>
                            @if (@Q_TECHNOLOGY_ENABLE == "Y")
                            {
                                <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>  
                            }                          
                    </div>
               </div> @*end row1*@
                <div id="PackageDescription5Row2" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        @(Html.Kendo().MultiSelect()
                            .Name("ddlTechnology")
                            .Placeholder("Select technology...")
                            .BindTo(new SelectList(Model.ListTechnologyTable, "TechnologyName", "TechnologyName"))
                        )
                    </div>
                    <div class="col-sm-6 col-md-6">
                        
                    </div>
                </div> @*end row2*@
                <div id="PackageDescription5Row3" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                            <label>@L_SEARCH_BY_B_V </label>
                            @if (@Q_SEARCH_BY_B_V_ENABLE == "Y")
                            {
                                <a class="btn btn-info" onclick=""><i class="fa fa-question fa-lg"></i></a>  
                            }                          
                    </div>
               </div> @*end row3*@
                <div id="PackageDescription5Row4" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        @Html.TextBoxFor(t => t.BuildingSearch, new { maxlength = 100, @class = "dis k-textbox form-control" })
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <a class="btn btn-info" onclick="_SearchBuilding();"><i class="fa fa-search fa-lg"></i>&nbsp;&nbsp;@B_SEARCH</a>
                    </div>
                </div> @*end row4*@
                <div id="PackageDescription5Row5" class="row i-gap-top-1">
                    <div class="col-sm-5 col-md-5">
                        <div id="gridresultbuilding" class="row">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.BuildingTable>()
                                .Name("gridBuilding")
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.BuildingSelect)
                                        .Title("<input type='checkbox' class='BuildingSelectAll' />")
                                        .ClientTemplate("<input type='checkbox' class='BuildingSelect' />")
                                        .HtmlAttributes(new { style = "text-align:center;" })
                                        .Width(50);
                                    if (@G_BUILDING_VILLAGE_NAME_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.BuildingName).Title(@G_BUILDING_VILLAGE_NAME).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.BuildingName).Title(@G_BUILDING_VILLAGE_NAME).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }
                                    if (@G_BUILDING_NO_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.BuildingNo).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.BuildingNo).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }
                                    columns.Bound(p => p.AddressID).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    columns.Bound(p => p.AddressType).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    columns.Bound(p => p.BuildingNameEng).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    columns.Bound(p => p.BuildingNoEng).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                })
                                .Scrollable(scrollable => scrollable.Height("auto"))
                                .Pageable(pageable => pageable
                                    .PageSizes(false)
                                    .Numeric(true)
                                )
                                .AutoBind(false)
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Read(read => read.Action("SearchBuilding", "ConfigurationPackages").Data("bindingValueBuilding"))
                                )
                            )

                        </div>
                    </div>
                    <div class="col-sm-2 col-md-2 text-center">
                        <a class="btn btn-info" onclick="_DeleteBuilding()"><i class="fa fa-chevron-left fa-lg"></i></a>&nbsp;&nbsp;
                        <a class="btn btn-info" onclick="_AddBuilding()"><i class="fa fa-chevron-right fa-lg"></i></a>
                    </div>
                    <div class="col-sm-5 col-md-5">
                        <div id="gridresultbuildingtmp" class="row" style="overflow:auto;">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.BuildingTable>()
                                .Name("gridBuildingTmp")
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.BuildingSelect)
                                        .Title("<input type='checkbox' class='BuildingTmpSelectAll' />")
                                        .ClientTemplate("<input type='checkbox' class='BuildingTmpSelect' />")
                                        .HtmlAttributes(new { style = "text-align:center;" })
                                        .Width(50);
                                    if (@G_BUILDING_VILLAGE_NAME_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.BuildingName).Title(@G_BUILDING_VILLAGE_NAME).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.BuildingName).Title(@G_BUILDING_VILLAGE_NAME).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }
                                    if (@G_BUILDING_NO_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.BuildingNo).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.BuildingNo).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }
                                    columns.Bound(p => p.AddressID).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    columns.Bound(p => p.AddressType).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    columns.Bound(p => p.BuildingNameEng).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    columns.Bound(p => p.BuildingNoEng).Title(@G_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                })
                                .Scrollable(scrollable => scrollable.Height("auto"))
                                .Pageable(pageable => pageable
                                    .PageSizes(false)
                                    .Numeric(true)
                                )
                                .AutoBind(true)
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Read(read => read.Action("BuildingUse", "ConfigurationPackages").Data("bindingValueBuilding"))
                                )
                            )

                        </div>
                    </div>
                </div> @*end row5*@
                <div id="PackageDescription5Row6" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                        
                    </div>
                   <div class="col-sm-6 col-md-6">
                       <div class='pull-right'>
                           <a onclick='savePage4()' id='SavePage4' class='btn btn-default'><i class='fa fa-floppy-o fa-lg'></i>&nbsp;@B_SAVE_FINISH</a>
                       </div>
                   </div>
                </div> @*end row6*@
            </div>
        </div> @*end PackageDescriptionPane5*@
    </div>
    
}

@helper PackageReportPane()
{
    string G_S_PACKAGE_CODE = "";
    string G_S_PACKAGE_TYPE = "";
    string G_S_PRODUCT_SUBTYPE = "";
    string G_S_PRODUCT_SUBTYPE2 = "";
    string G_S_OWNER_PRODUCT = "";
    string G_S_TECHNOLOGY = "";
    string G_S_PACKAGE_GROUP = "";
    string G_S_SALE_START_DATE = "";
    string G_S_SALE_END_DATE = "";
    string G_S_PRE_INITIATION_CHARGE = "";
    string G_S_INITIATION_CHARGE = "";
    string G_S_PRE_RECURRING_CHARGE = "";
    string G_S_RECURRING_CHARGE = "";
    string G_S_PACKAGE_NAME_THA = "";
    string G_S_PACKAGE_NAME_ENG = "";
    string G_S_SFF_PROMOTION_CODE = "";
    string G_S_SFF_PROMOTION_BILL_THA = "";
    string G_S_SFF_PROMOTION_BILL_ENG = "";
    string G_S_DOWNLOAD_SPEED = "";
    string G_S_UPLOAD_SPEED = "";
    string G_S_DISCOUNT_TYPE = "";
    string G_S_DISCOUNT_VALUE = "";
    string G_S_DISCOUNT_DAY = "";
    string G_S_VAS_SERVICE = "";
    string G_S_MAPPING_CODE = "";
    string G_S_MAPPING_PRODUCT = "";
    string G_S_EFFECTIVE_DTM = "";
    string G_S_EXPIRE_DTM = "";
    string G_S_USER_GROUP = "";
    string G_S_REGION = "";
    string G_S_PROVINCE = "";
    string G_S_BUILDING_NAME = "";
    string G_S_BUILDING_NO = "";

    string G_S_PACKAGE_CODE_ENABLE = "";
    string G_S_PACKAGE_TYPE_ENABLE = "";
    string G_S_PRODUCT_SUBTYPE_ENABLE = "";
    string G_S_PRODUCT_SUBTYPE2_ENABLE = "";
    string G_S_OWNER_PRODUCT_ENABLE = "";
    string G_S_TECHNOLOGY_ENABLE = "";
    string G_S_PACKAGE_GROUP_ENABLE = "";
    string G_S_SALE_START_DATE_ENABLE = "";
    string G_S_SALE_END_DATE_ENABLE = "";
    string G_S_PRE_INITIATION_CHARGE_ENABLE = "";
    string G_S_INITIATION_CHARGE_ENABLE = "";
    string G_S_PRE_RECURRING_CHARGE_ENABLE = "";
    string G_S_RECURRING_CHARGE_ENABLE = "";
    string G_S_PACKAGE_NAME_THA_ENABLE = "";
    string G_S_PACKAGE_NAME_ENG_ENABLE = "";
    string G_S_SFF_PROMOTION_CODE_ENABLE = "";
    string G_S_SFF_PROMOTION_BILL_THA_ENABLE = "";
    string G_S_SFF_PROMOTION_BILL_ENG_ENABLE = "";
    string G_S_DOWNLOAD_SPEED_ENABLE = "";
    string G_S_UPLOAD_SPEED_ENABLE = "";
    string G_S_DISCOUNT_TYPE_ENABLE = "";
    string G_S_DISCOUNT_VALUE_ENABLE = "";
    string G_S_DISCOUNT_DAY_ENABLE = "";
    string G_S_VAS_SERVICE_ENABLE = "";
    string G_S_MAPPING_CODE_ENABLE = "";
    string G_S_MAPPING_PRODUCT_ENABLE = "";
    string G_S_EFFECTIVE_DTM_ENABLE = "";
    string G_S_EXPIRE_DTM_ENABLE = "";
    string G_S_USER_GROUP_ENABLE = "";
    string G_S_REGION_ENABLE = "";
    string G_S_PROVINCE_ENABLE = "";
    string G_S_BUILDING_NAME_ENABLE = "";
    string G_S_BUILDING_NO_ENABLE = "";

    string B_FINISH_CONFIG = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        G_S_PACKAGE_CODE = configscreen.Any(f => f.Name == "G_S_PACKAGE_CODE") ? configscreen.First(f => f.Name == "G_S_PACKAGE_CODE").LovValue1 : "";
        G_S_PACKAGE_CODE_ENABLE = configscreen.Any(f => f.Name == "G_S_PACKAGE_CODE") ? configscreen.First(f => f.Name == "G_S_PACKAGE_CODE").Text : "N";

        G_S_PACKAGE_TYPE = configscreen.Any(f => f.Name == "G_S_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "G_S_PACKAGE_TYPE").LovValue1 : "";
        G_S_PACKAGE_TYPE_ENABLE = configscreen.Any(f => f.Name == "G_S_PACKAGE_TYPE") ? configscreen.First(f => f.Name == "G_S_PACKAGE_TYPE").Text : "N";

        G_S_PRODUCT_SUBTYPE = configscreen.Any(f => f.Name == "G_S_PRODUCT_SUBTYPE") ? configscreen.First(f => f.Name == "G_S_PRODUCT_SUBTYPE").LovValue1 : "";
        G_S_PRODUCT_SUBTYPE_ENABLE = configscreen.Any(f => f.Name == "G_S_PRODUCT_SUBTYPE") ? configscreen.First(f => f.Name == "G_S_PRODUCT_SUBTYPE").Text : "N";

        G_S_PRODUCT_SUBTYPE2 = configscreen.Any(f => f.Name == "G_S_PRODUCT_SUBTYPE2") ? configscreen.First(f => f.Name == "G_S_PRODUCT_SUBTYPE2").LovValue1 : "";
        G_S_PRODUCT_SUBTYPE2_ENABLE = configscreen.Any(f => f.Name == "G_S_PRODUCT_SUBTYPE2") ? configscreen.First(f => f.Name == "G_S_PRODUCT_SUBTYPE2").Text : "N";

        G_S_OWNER_PRODUCT = configscreen.Any(f => f.Name == "G_S_OWNER_PRODUCT") ? configscreen.First(f => f.Name == "G_S_OWNER_PRODUCT").LovValue1 : "";
        G_S_OWNER_PRODUCT_ENABLE = configscreen.Any(f => f.Name == "G_S_OWNER_PRODUCT") ? configscreen.First(f => f.Name == "G_S_OWNER_PRODUCT").Text : "N";

        G_S_TECHNOLOGY = configscreen.Any(f => f.Name == "G_S_TECHNOLOGY") ? configscreen.First(f => f.Name == "G_S_TECHNOLOGY").LovValue1 : "";
        G_S_TECHNOLOGY_ENABLE = configscreen.Any(f => f.Name == "G_S_TECHNOLOGY") ? configscreen.First(f => f.Name == "G_S_TECHNOLOGY").Text : "N";

        G_S_PACKAGE_GROUP = configscreen.Any(f => f.Name == "G_S_PACKAGE_GROUP") ? configscreen.First(f => f.Name == "G_S_PACKAGE_GROUP").LovValue1 : "";
        G_S_PACKAGE_GROUP_ENABLE = configscreen.Any(f => f.Name == "G_S_PACKAGE_GROUP") ? configscreen.First(f => f.Name == "G_S_PACKAGE_GROUP").Text : "N";

        G_S_SALE_START_DATE = configscreen.Any(f => f.Name == "G_S_SALE_START_DATE") ? configscreen.First(f => f.Name == "G_S_SALE_START_DATE").LovValue1 : "";
        G_S_SALE_START_DATE_ENABLE = configscreen.Any(f => f.Name == "G_S_SALE_START_DATE") ? configscreen.First(f => f.Name == "G_S_SALE_START_DATE").Text : "N";

        G_S_SALE_END_DATE = configscreen.Any(f => f.Name == "G_S_SALE_END_DATE") ? configscreen.First(f => f.Name == "G_S_SALE_END_DATE").LovValue1 : "";
        G_S_SALE_END_DATE_ENABLE = configscreen.Any(f => f.Name == "G_S_SALE_END_DATE") ? configscreen.First(f => f.Name == "G_S_SALE_END_DATE").Text : "N";

        G_S_PRE_INITIATION_CHARGE = configscreen.Any(f => f.Name == "G_S_PRE_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "G_S_PRE_INITIATION_CHARGE").LovValue1 : "";
        G_S_PRE_INITIATION_CHARGE_ENABLE = configscreen.Any(f => f.Name == "G_S_PRE_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "G_S_PRE_INITIATION_CHARGE").Text : "N";

        G_S_INITIATION_CHARGE = configscreen.Any(f => f.Name == "G_S_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "G_S_INITIATION_CHARGE").LovValue1 : "";
        G_S_INITIATION_CHARGE_ENABLE = configscreen.Any(f => f.Name == "G_S_INITIATION_CHARGE") ? configscreen.First(f => f.Name == "G_S_INITIATION_CHARGE").Text : "N";

        G_S_PRE_RECURRING_CHARGE = configscreen.Any(f => f.Name == "G_S_PRE_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "G_S_PRE_RECURRING_CHARGE").LovValue1 : "";
        G_S_PRE_RECURRING_CHARGE_ENABLE = configscreen.Any(f => f.Name == "G_S_PRE_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "G_S_PRE_RECURRING_CHARGE").Text : "N";

        G_S_RECURRING_CHARGE = configscreen.Any(f => f.Name == "G_S_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "G_S_RECURRING_CHARGE").LovValue1 : "";
        G_S_RECURRING_CHARGE_ENABLE = configscreen.Any(f => f.Name == "G_S_RECURRING_CHARGE") ? configscreen.First(f => f.Name == "G_S_RECURRING_CHARGE").Text : "N";

        G_S_PACKAGE_NAME_THA = configscreen.Any(f => f.Name == "G_S_PACKAGE_NAME_THA") ? configscreen.First(f => f.Name == "G_S_PACKAGE_NAME_THA").LovValue1 : "";
        G_S_PACKAGE_NAME_THA_ENABLE = configscreen.Any(f => f.Name == "G_S_PACKAGE_NAME_THA") ? configscreen.First(f => f.Name == "G_S_PACKAGE_NAME_THA").Text : "N";

        G_S_PACKAGE_NAME_ENG = configscreen.Any(f => f.Name == "G_S_PACKAGE_NAME_ENG") ? configscreen.First(f => f.Name == "G_S_PACKAGE_NAME_ENG").LovValue1 : "";
        G_S_PACKAGE_NAME_ENG_ENABLE = configscreen.Any(f => f.Name == "G_S_PACKAGE_NAME_ENG") ? configscreen.First(f => f.Name == "G_S_PACKAGE_NAME_ENG").Text : "N";

        G_S_SFF_PROMOTION_CODE = configscreen.Any(f => f.Name == "G_S_SFF_PROMOTION_CODE") ? configscreen.First(f => f.Name == "G_S_SFF_PROMOTION_CODE").LovValue1 : "";
        G_S_SFF_PROMOTION_CODE_ENABLE = configscreen.Any(f => f.Name == "G_S_SFF_PROMOTION_CODE") ? configscreen.First(f => f.Name == "G_S_SFF_PROMOTION_CODE").Text : "N";

        G_S_SFF_PROMOTION_BILL_THA = configscreen.Any(f => f.Name == "G_S_SFF_PROMOTION_BILL_THA") ? configscreen.First(f => f.Name == "G_S_SFF_PROMOTION_BILL_THA").LovValue1 : "";
        G_S_SFF_PROMOTION_BILL_THA_ENABLE = configscreen.Any(f => f.Name == "G_S_SFF_PROMOTION_BILL_THA") ? configscreen.First(f => f.Name == "G_S_SFF_PROMOTION_BILL_THA").Text : "N";

        G_S_SFF_PROMOTION_BILL_ENG = configscreen.Any(f => f.Name == "G_S_SFF_PROMOTION_BILL_ENG") ? configscreen.First(f => f.Name == "G_S_SFF_PROMOTION_BILL_ENG").LovValue1 : "";
        G_S_SFF_PROMOTION_BILL_ENG_ENABLE = configscreen.Any(f => f.Name == "G_S_SFF_PROMOTION_BILL_ENG") ? configscreen.First(f => f.Name == "G_S_SFF_PROMOTION_BILL_ENG").Text : "N";

        G_S_DOWNLOAD_SPEED = configscreen.Any(f => f.Name == "G_S_DOWNLOAD_SPEED") ? configscreen.First(f => f.Name == "G_S_DOWNLOAD_SPEED").LovValue1 : "";
        G_S_DOWNLOAD_SPEED_ENABLE = configscreen.Any(f => f.Name == "G_S_DOWNLOAD_SPEED") ? configscreen.First(f => f.Name == "G_S_DOWNLOAD_SPEED").Text : "N";

        G_S_UPLOAD_SPEED = configscreen.Any(f => f.Name == "G_S_UPLOAD_SPEED") ? configscreen.First(f => f.Name == "G_S_UPLOAD_SPEED").LovValue1 : "";
        G_S_UPLOAD_SPEED_ENABLE = configscreen.Any(f => f.Name == "G_S_UPLOAD_SPEED") ? configscreen.First(f => f.Name == "G_S_UPLOAD_SPEED").Text : "N";

        G_S_DISCOUNT_TYPE = configscreen.Any(f => f.Name == "G_S_DISCOUNT_TYPE") ? configscreen.First(f => f.Name == "G_S_DISCOUNT_TYPE").LovValue1 : "";
        G_S_DISCOUNT_TYPE_ENABLE = configscreen.Any(f => f.Name == "G_S_DISCOUNT_TYPE") ? configscreen.First(f => f.Name == "G_S_DISCOUNT_TYPE").Text : "N";

        G_S_DISCOUNT_VALUE = configscreen.Any(f => f.Name == "G_S_DISCOUNT_VALUE") ? configscreen.First(f => f.Name == "G_S_DISCOUNT_VALUE").LovValue1 : "";
        G_S_DISCOUNT_VALUE_ENABLE = configscreen.Any(f => f.Name == "G_S_DISCOUNT_VALUE") ? configscreen.First(f => f.Name == "G_S_DISCOUNT_VALUE").Text : "N";

        G_S_DISCOUNT_DAY = configscreen.Any(f => f.Name == "G_S_DISCOUNT_DAY") ? configscreen.First(f => f.Name == "G_S_DISCOUNT_DAY").LovValue1 : "";
        G_S_DISCOUNT_DAY_ENABLE = configscreen.Any(f => f.Name == "G_S_DISCOUNT_DAY") ? configscreen.First(f => f.Name == "G_S_DISCOUNT_DAY").Text : "N";

        G_S_VAS_SERVICE = configscreen.Any(f => f.Name == "G_S_VAS_SERVICE") ? configscreen.First(f => f.Name == "G_S_VAS_SERVICE").LovValue1 : "";
        G_S_VAS_SERVICE_ENABLE = configscreen.Any(f => f.Name == "G_S_VAS_SERVICE") ? configscreen.First(f => f.Name == "G_S_VAS_SERVICE").Text : "N";

        G_S_MAPPING_CODE = configscreen.Any(f => f.Name == "G_S_MAPPING_CODE") ? configscreen.First(f => f.Name == "G_S_MAPPING_CODE").LovValue1 : "";
        G_S_MAPPING_CODE_ENABLE = configscreen.Any(f => f.Name == "G_S_MAPPING_CODE") ? configscreen.First(f => f.Name == "G_S_MAPPING_CODE").Text : "N";

        G_S_MAPPING_PRODUCT = configscreen.Any(f => f.Name == "G_S_MAPPING_PRODUCT") ? configscreen.First(f => f.Name == "G_S_MAPPING_PRODUCT").LovValue1 : "";
        G_S_MAPPING_PRODUCT_ENABLE = configscreen.Any(f => f.Name == "G_S_MAPPING_PRODUCT") ? configscreen.First(f => f.Name == "G_S_MAPPING_PRODUCT").Text : "N";

        G_S_EFFECTIVE_DTM = configscreen.Any(f => f.Name == "G_S_EFFECTIVE_DTM") ? configscreen.First(f => f.Name == "G_S_EFFECTIVE_DTM").LovValue1 : "";
        G_S_EFFECTIVE_DTM_ENABLE = configscreen.Any(f => f.Name == "G_S_EFFECTIVE_DTM") ? configscreen.First(f => f.Name == "G_S_EFFECTIVE_DTM").Text : "N";

        G_S_EXPIRE_DTM = configscreen.Any(f => f.Name == "G_S_EXPIRE_DTM") ? configscreen.First(f => f.Name == "G_S_EXPIRE_DTM").LovValue1 : "";
        G_S_EXPIRE_DTM_ENABLE = configscreen.Any(f => f.Name == "G_S_EXPIRE_DTM") ? configscreen.First(f => f.Name == "G_S_EXPIRE_DTM").Text : "N";

        G_S_USER_GROUP = configscreen.Any(f => f.Name == "G_S_USER_GROUP") ? configscreen.First(f => f.Name == "G_S_USER_GROUP").LovValue1 : "";
        G_S_USER_GROUP_ENABLE = configscreen.Any(f => f.Name == "G_S_USER_GROUP") ? configscreen.First(f => f.Name == "G_S_USER_GROUP").Text : "N";

        G_S_REGION = configscreen.Any(f => f.Name == "G_S_REGION") ? configscreen.First(f => f.Name == "G_S_REGION").LovValue1 : "";
        G_S_REGION_ENABLE = configscreen.Any(f => f.Name == "G_S_REGION") ? configscreen.First(f => f.Name == "G_S_REGION").Text : "N";

        G_S_PROVINCE = configscreen.Any(f => f.Name == "G_S_PROVINCE") ? configscreen.First(f => f.Name == "G_S_PROVINCE").LovValue1 : "";
        G_S_PROVINCE_ENABLE = configscreen.Any(f => f.Name == "G_S_PROVINCE") ? configscreen.First(f => f.Name == "G_S_PROVINCE").Text : "N";

        G_S_BUILDING_NAME = configscreen.Any(f => f.Name == "G_S_BUILDING_NAME") ? configscreen.First(f => f.Name == "G_S_BUILDING_NAME").LovValue1 : "";
        G_S_BUILDING_NAME_ENABLE = configscreen.Any(f => f.Name == "G_S_BUILDING_NAME") ? configscreen.First(f => f.Name == "G_S_BUILDING_NAME").Text : "N";

        G_S_BUILDING_NO = configscreen.Any(f => f.Name == "G_S_BUILDING_NO") ? configscreen.First(f => f.Name == "G_S_BUILDING_NO").LovValue1 : "";
        G_S_BUILDING_NO_ENABLE = configscreen.Any(f => f.Name == "G_S_BUILDING_NO") ? configscreen.First(f => f.Name == "G_S_BUILDING_NO").Text : "N";

        B_FINISH_CONFIG = configscreen.Any(f => f.Name == "B_FINISH_CONFIG") ? configscreen.First(f => f.Name == "B_FINISH_CONFIG").LovValue1 : "";
    }
    
    <div class="panel panel-success">            
        <div class="panel-heading">
           <h3 class="panel-title">
              <span>Summary</span>
              <a data-toggle="collapse" class="pull-right" href="#SummaryPanel" onclick="onPanelToggle(this);" id="SummaryPanelHeader"><i class="fa fa-chevron-circle-down fa-lg" id="SummaryPanelHeaderArrow"></i></a>
           </h3>
        </div>
        <div id="SummaryPanel" class="panel-collapse collapse in">
            <div class="panel-body" style="min-height: 200px;">
                <div id="SummaryRow1" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                           @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.SummaryPackageMaster>()
                                .Name("gridSummaryMaster")
                                .Columns(columns =>
                                {
                                    if (@G_S_PACKAGE_CODE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.package_code).Title(@G_S_PACKAGE_CODE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.package_code).Title(@G_S_PACKAGE_CODE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_PACKAGE_TYPE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.package_type).Title(@G_S_PACKAGE_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.package_type).Title(@G_S_PACKAGE_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_PRODUCT_SUBTYPE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.product_subtype).Title(@G_S_PRODUCT_SUBTYPE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.product_subtype).Title(@G_S_PRODUCT_SUBTYPE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_PRODUCT_SUBTYPE2_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.product_subtype2).Title(@G_S_PRODUCT_SUBTYPE2).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.product_subtype2).Title(@G_S_PRODUCT_SUBTYPE2).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_OWNER_PRODUCT_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.owner_product).Title(@G_S_OWNER_PRODUCT).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.owner_product).Title(@G_S_OWNER_PRODUCT).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_TECHNOLOGY_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.technology).Title(@G_S_TECHNOLOGY).HtmlAttributes(new { style = "text-align:left;" }).Width(250);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.technology).Title(@G_S_TECHNOLOGY).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_PACKAGE_GROUP_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.package_group).Title(@G_S_PACKAGE_GROUP).HtmlAttributes(new { style = "text-align:left;" }).Width(250);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.package_group).Title(@G_S_PACKAGE_GROUP).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SALE_START_DATE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sale_start_date).Title(@G_S_SALE_START_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sale_start_date).Title(@G_S_SALE_START_DATE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }

                                    if (@G_S_SALE_END_DATE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sale_end_date).Title(@G_S_SALE_END_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sale_end_date).Title(@G_S_SALE_END_DATE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }

                                    if (@G_S_PRE_INITIATION_CHARGE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.pre_initiation_charge).Title(@G_S_PRE_INITIATION_CHARGE).HtmlAttributes(new { style = "text-align:right;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.pre_initiation_charge).Title(@G_S_PRE_INITIATION_CHARGE).HtmlAttributes(new { style = "text-align:right;" }).Hidden();
                                    }

                                    if (@G_S_INITIATION_CHARGE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.initiation_charge).Title(@G_S_INITIATION_CHARGE).HtmlAttributes(new { style = "text-align:right;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.initiation_charge).Title(@G_S_INITIATION_CHARGE).HtmlAttributes(new { style = "text-align:right;" }).Hidden();
                                    }

                                    if (@G_S_PRE_RECURRING_CHARGE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.pre_recurring_charge).Title(@G_S_PRE_RECURRING_CHARGE).HtmlAttributes(new { style = "text-align:right;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.pre_recurring_charge).Title(@G_S_PRE_RECURRING_CHARGE).HtmlAttributes(new { style = "text-align:right;" }).Hidden();
                                    }

                                    if (@G_S_RECURRING_CHARGE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.recurring_charge).Title(@G_S_RECURRING_CHARGE).HtmlAttributes(new { style = "text-align:right;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.recurring_charge).Title(@G_S_RECURRING_CHARGE).HtmlAttributes(new { style = "text-align:right;" }).Hidden();
                                    }

                                    if (@G_S_PACKAGE_NAME_THA_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.package_name_tha).Title(@G_S_PACKAGE_NAME_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(250);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.package_name_tha).Title(@G_S_PACKAGE_NAME_THA).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_PACKAGE_NAME_ENG_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.package_name_eng).Title(@G_S_PACKAGE_NAME_ENG).HtmlAttributes(new { style = "text-align:left;" }).Width(250);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.package_name_eng).Title(@G_S_PACKAGE_NAME_ENG).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_CODE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_code).Title(@G_S_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_code).Title(@G_S_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_BILL_THA_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_S_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_S_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_BILL_ENG_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_S_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_S_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_DOWNLOAD_SPEED_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.download_speed).Title(@G_S_DOWNLOAD_SPEED).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.download_speed).Title(@G_S_DOWNLOAD_SPEED).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_UPLOAD_SPEED_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.upload_speed).Title(@G_S_UPLOAD_SPEED).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.upload_speed).Title(@G_S_UPLOAD_SPEED).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_DISCOUNT_TYPE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.discount_type).Title(@G_S_DISCOUNT_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.discount_type).Title(@G_S_DISCOUNT_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_DISCOUNT_VALUE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.discount_value).Title(@G_S_DISCOUNT_VALUE).HtmlAttributes(new { style = "text-align:right;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.discount_value).Title(@G_S_DISCOUNT_VALUE).HtmlAttributes(new { style = "text-align:right;" }).Hidden();
                                    }

                                    if (@G_S_DISCOUNT_DAY_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.discount_day).Title(@G_S_DISCOUNT_DAY).HtmlAttributes(new { style = "text-align:right;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.discount_day).Title(@G_S_DISCOUNT_DAY).HtmlAttributes(new { style = "text-align:right;" }).Hidden();
                                    }

                                    if (@G_S_VAS_SERVICE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.vas_service).Title(@G_S_VAS_SERVICE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.vas_service).Title(@G_S_VAS_SERVICE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }
                                })
                                .Scrollable(scrollable => scrollable.Height("auto"))
                                .Pageable(pageable => pageable
                                    .PageSizes(false)
                                    .Numeric(true)
                                )
                                .AutoBind(true)
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Read(read => read.Action("SearchSummaryPackageMaster", "ConfigurationPackages").Data("bindingValueReport"))
                                )
                            )
                    </div>
               </div> @*end row1*@
                <div id="SummaryRow2" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.SummaryPackageMapping>()
                                .Name("gridSummaryMapping")
                                .Columns(columns =>
                                {
                                    if (@G_S_MAPPING_CODE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.mapping_code).Title(@G_S_MAPPING_CODE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.mapping_code).Title(@G_S_MAPPING_CODE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }

                                    if (@G_S_MAPPING_PRODUCT_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.mapping_product).Title(@G_S_MAPPING_PRODUCT).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.mapping_product).Title(@G_S_MAPPING_PRODUCT).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }
                                    if (@G_S_SFF_PROMOTION_CODE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_code).Title(@G_S_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_code).Title(@G_S_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_BILL_THA_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_S_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(550);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_S_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_BILL_ENG_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_S_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Width(550);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_S_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_EFFECTIVE_DTM_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.effective_dtm).Title(@G_S_EFFECTIVE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.effective_dtm).Title(@G_S_EFFECTIVE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }

                                    if (@G_S_EXPIRE_DTM_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.expire_dtm).Title(@G_S_EXPIRE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.expire_dtm).Title(@G_S_EXPIRE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }
                                })
                                .Scrollable(scrollable => scrollable.Height("auto"))
                                .Pageable(pageable => pageable
                                    .PageSizes(false)
                                    .Numeric(true)
                                )
                                .AutoBind(true)
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Read(read => read.Action("SearchSummaryPackageMapping", "ConfigurationPackages").Data("bindingValueReport"))
                                )
                            )
                    </div>
               </div> @*end row2*@
                <div id="SummaryRow3" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.SummaryPackageUser>()
                                .Name("gridSummaryUser")
                                .Columns(columns =>
                                {
                                    if (@G_S_USER_GROUP_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.user_group).Title(@G_S_USER_GROUP).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.user_group).Title(@G_S_USER_GROUP).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_CODE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_code).Title(@G_S_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_code).Title(@G_S_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_BILL_THA_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_S_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_S_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_BILL_ENG_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_S_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_S_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_EFFECTIVE_DTM_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.effective_dtm).Title(@G_S_EFFECTIVE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.effective_dtm).Title(@G_S_EFFECTIVE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }

                                    if (@G_S_EXPIRE_DTM_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.expire_dtm).Title(@G_S_EXPIRE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.expire_dtm).Title(@G_S_EXPIRE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }
                                })
                                .Scrollable(scrollable => scrollable.Height("auto"))
                                .Pageable(pageable => pageable
                                    .PageSizes(false)
                                    .Numeric(true)
                                )
                                .AutoBind(true)
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Read(read => read.Action("SearchSummaryPackageUser", "ConfigurationPackages").Data("bindingValueReport"))
                                )
                            )
                    </div>
               </div> @*end row3*@
                <div id="SummaryRow4" class="row i-gap-top-1">
                    <div class="col-sm-12 col-md-12">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.SummaryPackageLoc>()
                                .Name("gridSummaryLoc")
                                .Columns(columns =>
                                {
                                    if (@G_S_REGION_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.region).Title(@G_S_REGION).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.region).Title(@G_S_REGION).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_PROVINCE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.province).Title(@G_S_PROVINCE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.province).Title(@G_S_PROVINCE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_BUILDING_NAME_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.building_name).Title(@G_S_BUILDING_NAME).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.building_name).Title(@G_S_BUILDING_NAME).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_BUILDING_NO_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.building_no).Title(@G_S_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.building_no).Title(@G_S_BUILDING_NO).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_CODE_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_code).Title(@G_S_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_code).Title(@G_S_SFF_PROMOTION_CODE).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_BILL_THA_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_S_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_tha).Title(@G_S_SFF_PROMOTION_BILL_THA).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_SFF_PROMOTION_BILL_ENG_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_S_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Width(350);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.sff_promotion_bill_eng).Title(@G_S_SFF_PROMOTION_BILL_ENG).HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                    }

                                    if (@G_S_EFFECTIVE_DTM_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.effective_dtm).Title(@G_S_EFFECTIVE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.effective_dtm).Title(@G_S_EFFECTIVE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }

                                    if (@G_S_EXPIRE_DTM_ENABLE == "Y")
                                    {
                                        columns.Bound(p => p.expire_dtm).Title(@G_S_EXPIRE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                    }
                                    else
                                    {
                                        columns.Bound(p => p.expire_dtm).Title(@G_S_EXPIRE_DTM).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    }
                                })
                                .Scrollable(scrollable => scrollable.Height("auto"))
                                .Pageable(pageable => pageable
                                    .PageSizes(false)
                                    .Numeric(true)
                                )
                                .AutoBind(true)
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Read(read => read.Action("SearchSummaryPackageLoc", "ConfigurationPackages").Data("bindingValueReport"))
                                )
                            )
                    </div>
               </div> @*end row4*@
                <div id="SummaryRow5" class="row i-gap-top-1">
                    <div class="col-sm-6 col-md-6">
                    </div>
                    <div class="col-sm-6 col-md-6 i-text-align-right">
                        <a onclick='saveFinish()' id='saveFinish' class='btn btn-default'><i class='fa fa-floppy-o fa-lg'></i>&nbsp;&nbsp;@B_FINISH_CONFIG</a>
                    </div>
                </div> @*end row5*@   
            </div>
        </div> @*end SearchPanel*@
    </div>
    
}

@(Html.Kendo().Window()
    .Name("AddPackageGroup")
    .HtmlAttributes(new { @class = "i-gap-popup" })
    .Title("Create New PackageGroup")
    .Width(350)
    .Draggable()
    .Visible(false)
    .Modal(true)
    .Content(@<text>
<div class="row i-no-over" id="AddPopupPanel1">
    <div class="col-md-12">
        <div class="form-group">
            <label>@L_PRODUCT_TYPE :</label>
            <div class="i-fg-data-entry">
                 @(Html.Kendo().DropDownList()
                        .Name("DllProductType1")
                        .HtmlAttributes(new { style = "width:100%" })
                        .DataTextField("LOV_NAME")
                        .DataValueField("LOV_VAL1")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("SelectLovNoIndex0DDL", "MasterData", new { type = "PRODUCT_TYPE" });
                            });
                        })

                )     
               
            </div>            
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            <label>@L_NEW_PACKAGE_GROUP :</label>
            <div class="i-fg-data-entry">
                @Html.TextBox("NewPackageGroupName", null, new { maxlength = 255, @class = "k-textbox form-control" })
            </div>            
        </div>
    </div>
    <div class="col-md-12">
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="onSaveNewPackageGroup()" id="btnNewPackageGroupSave"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_SAVE</button>&nbsp;
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="ClearNewPackageGroupFrom()" id="btnNewPackageGroupClear"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_CLEAR</button>&nbsp;
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="CloseNewPackageGroupFrom()" id="btnNewPackageGroupClose"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_CLOSE</button>
    </div>
</div>
</text>)
)

@(Html.Kendo().Window()
    .Name("AddProductSubtype3")
    .HtmlAttributes(new { @class = "i-gap-popup" })
    .Title("Create New Product Subtype3")
    .Width(350)
    .Draggable()
    .Visible(false)
    .Modal(true)
    .Content(@<text>
<div class="row i-no-over" id="AddPopupPanel2">
    <div class="col-md-12">
        <div class="form-group">
            <label>@L_PRODUCT_TYPE :</label>
            <div class="i-fg-data-entry">
                 @(Html.Kendo().DropDownList()
                        .Name("DllProductType2")
                        .HtmlAttributes(new { style = "width:100%" })
                        .DataTextField("LOV_NAME")
                        .DataValueField("LOV_VAL1")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("SelectLovNoIndex0DDL", "MasterData", new { type = "PRODUCT_TYPE" });
                            });
                        })
                        .SelectedIndex(3)

                )     
               
            </div>            
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            <label>@L_NEW_PRODUCT_SUBTYPE3 :</label>
            <div class="i-fg-data-entry">
                @Html.TextBox("NewProductSubtype3", null, new { maxlength = 255, @class = "k-textbox form-control" })
            </div>            
        </div>
    </div>
    <div class="col-md-12">
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="onSaveNewProductSubtype3()" id="btnNewProductSubtype3Save"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_SAVE</button>&nbsp;
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="ClearNewProductSubtype3From()" id="btnNewProductSubtype3Clear"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_CLEAR</button>&nbsp;
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="CloseNewProductSubtype3From()" id="btnNewProductSubtype3Close"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_CLOSE</button>
    </div>
</div>
</text>)
)

@(Html.Kendo().Window()
    .Name("AddVendorPartner")
    .HtmlAttributes(new { @class = "i-gap-popup" })
    .Title("Create New Vendor/Partner")
    .Width(350)
    .Draggable()
    .Visible(false)
    .Modal(true)
    .Content(@<text>
<div class="row i-no-over" id="AddPopupPanel3">
    <div class="col-md-12">
        <div class="form-group">
            <label>@L_NEW_VENDOR_PARTNER :</label>
            <div class="i-fg-data-entry">
                @Html.TextBox("NewVendorPartner", null, new { maxlength = 255, @class = "k-textbox form-control" })
            </div>            
        </div>
    </div>
    <div class="col-md-12">
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="onSaveNewVendorPartner()" id="btnNewVendorPartnerSave"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_SAVE</button>
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="ClearNewVendorPartnerFrom()" id="btnNewVendorPartnerClear"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_CLEAR</button>
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="CloseNewVendorPartnerFrom()" id="btnNewVendorPartnerClose"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_CLOSE</button>
    </div>
</div>
</text>)
)

<script>

    $(document).ready(function () {

        if ('@ViewBag.Success' == "SaveSuccess") {
            showFeedback("success", "Save Success", "SaveConfigurationPackage");
        }
        if ('@ViewBag.Error' == "SaveFail") {
            showFeedback("error", "Save Fail", "SaveConfigurationPackage");
        }      

        $.ajaxSetup({
            // Disable caching of AJAX responses
            cache: false
        });

        if ('@Model.StatusPage' == 0)
        {
            ShowSearchPage();
        }
        else if ('@Model.StatusPage' == 1)
        {
            if ('@Model.SaveStatus' == "E") {
                $('#PACKAGE_CODE').prop('readonly', true);
                $("#PACKAGE_TYPE").kendoDropDownList({
                    enable: false
                });
                $("#PACKAGE_TYPE").closest('.k-dropdown').css('background-color', '#B8B8B8');
                $("#PACKAGE_TYPE").closest('.k-dropdown').css('cursor', 'not-allowed');
            }
            ShowSavePage1();
        }
        else if ('@Model.StatusPage' == 2) {
            ShowSavePage2();
        }
        else if ('@Model.StatusPage' == 3) {
            ShowSavePage3();
        }
        else if ('@Model.StatusPage' == 4) {
            ShowSavePage4();
        }
        else if ('@Model.StatusPage' == 5) {
            ShowReprot();
        }

        if ('@Model.VendorOrPartnerShow' == 'True') {
            ShowVendorTable();
        }
        else {
            CloseVendorTable();
        }
    });

    function onGridDataBound() {
        Loading(0);
    }

    function bindingValue() {
        var model = defaultData();
        return {
            dataS: JSON.stringify(model)
        };
    }

    function bindingValuePackagetType() {
        var model = defaultPackageTypeData();
        return {
            dataS: JSON.stringify(model)
        };
    }

    function bindingValueProvince() {
        var model = defaultProvinceData();
        return {
            dataS: JSON.stringify(model)
        };
    }

    function bindingValueBuilding() {
        var model = defaultBuildingData();
        return {
            dataS: JSON.stringify(model)
        };
    }

    function bindingValueReport() {
        var model = defaultReportData();
        return {
            dataS: JSON.stringify(model)
        };
    }

    var AWConfigurationPackageModel = function () {

        SFFProductCodeSearch: "";
        SFFProductNameThaiSearch: "";
        SFFProductNameEngSearch: "";

    }

    var AWSearchPackageTypeModel = function () {

        PACKAGE_CODE: "";
        PackageTypeSearch: "";

    }

    var AWSearchProvinceModel = function () {

        RegionTableName: "";

    }

    var AWSearchBuildingModel = function () {
        Building: "";
        Technology: "";
    }

    var AWSearchReportModel = function () {
        PACKAGE_CODE: "";
    }

    function defaultReportData() {
        var searchModel = new AWSearchReportModel();
        if ('@Model.StatusPage' == 1) {
            searchModel.PACKAGE_CODE = $("#PACKAGE_CODE").val();
        }
        else if ('@Model.StatusPage' == 2) {
            searchModel.PACKAGE_CODE = $("#PACKAGE_CODE_MAPPING").val();
        }
        else if ('@Model.StatusPage' == 3) {
            searchModel.PACKAGE_CODE = $("#PACKAGE_CODE_CATALOG").val();
        }
        else if ('@Model.StatusPage' == 4) {
            searchModel.PACKAGE_CODE = $("#PACKAGE_CODE_LOCATION").val();
        }
        else if ('@Model.StatusPage' == 5) {
            searchModel.PACKAGE_CODE = $("#PACKAGE_CODE_REPORT").val();
        }
        return searchModel;
    }

    function defaultData() {

        var searchModel = new AWConfigurationPackageModel();
        searchModel.SFFProductCodeSearch = $("#SFFProductCodeSearch").val();
        searchModel.SFFProductNameThaiSearch = $("#SFFProductNameThaiSearch").val();
        searchModel.SFFProductNameEngSearch = $("#SFFProductNameEngSearch").val();

        return searchModel;
    }

    function _Search() {
        var model = defaultData();
        if (model.SFFProductCodeSearch == "" && model.SFFProductNameEngSearch == "" && model.SFFProductNameThaiSearch == "") {
            showFeedback("error", "กรุณาระบุอย่างน้อย 1 Cateria");
        }
        else {
            var model = defaultData();
            Loading();
            var grid = $("#gridPromotionSFF").data("kendoGrid");
            grid.dataSource.page(1);
        }
    }

    function defaultPackageTypeData() {
        var searchModel = new AWSearchPackageTypeModel();
        searchModel.PACKAGE_CODE = $("#PACKAGE_CODE").val();
        searchModel.PackageTypeSearch = $("#PACKAGE_TYPE_SEARCH").val();
        return searchModel;
    }

    function _SearchPackageTypeForMapping() {
        Loading();
        var grid = $("#gridPackageTypeSearch").data("kendoGrid");
        var grid2 = $("#gridPackageTypeSearchTmp").data("kendoGrid");
        grid.dataSource.page(1);
        grid2.dataSource.page(1);
        $(".PackageTypeSearchSelectAll").prop("checked", false)
        $(".PackageTypeSearchTmpSelectAll").prop("checked", false)
        Loading(0);
    }

    function onRowBoundPackageTypeSearch(e) {
        var data = this.dataSource.view();

        for (var i = 0; i < data.length; i++) {
            var dataItem = data[i];
            if (dataItem.expire_dtm != null && dataItem.expire_dtm != "") {
                var tr = $("#gridPackageTypeSearchTmp").find("[data-uid='" + dataItem.uid + "']");
                var chk = tr.find('input:checkbox');
                chk.attr('disabled', 'disabled');
            }
        }
    }

    function defaultProvinceData() {
        var searchModel = new AWSearchProvinceModel();
        searchModel.RegionTableName = $("#ddlRegion").data("kendoMultiSelect").value();
        return searchModel;
    }

    function _SearchProvince() {
        Loading();
        var grid = $("#gridProvince").data("kendoGrid");
        var grid2 = $("#gridProvinceTmp").data("kendoGrid");
        grid.dataSource.page(1);
        grid2.dataSource.page(1);
        $(".ProvinceSelectAll").prop("checked", false)
        $(".ProvinceTmpSelectAll").prop("checked", false)
        Loading(0);
    }

    function defaultBuildingData() {
        var searchModel = new AWSearchBuildingModel();
        searchModel.Building = $("#BuildingSearch").val();
        searchModel.Technology = $("#ddlTechnology").data("kendoMultiSelect").value();
        return searchModel;
    }

    function _SearchBuilding()
    {
        Loading();
        var grid = $("#gridBuilding").data("kendoGrid");
        var grid2 = $("#gridBuildingTmp").data("kendoGrid");
        grid.dataSource.page(1);
        grid2.dataSource.page(1);
        $(".BuildingSelectAll").prop("checked", false)
        $(".BuildingTmpSelectAll").prop("checked", false)
        Loading(0);
    }

    function _Clear() {
        $("#SFFProductCodeSearch").val("");
        $("#SFFProductNameThaiSearch").val("");
        $("#SFFProductNameEngSearch").val("");
        $("#gridPromotionSFF").data("kendoGrid").dataSource.data([ ]);
    }

    function _backSearch() {
        Loading();
        var url = '@Url.Action("Index", "ConfigurationPackages")';
        window.location.href = url;
    }

    function _backPage1() {
        Loading();
        var page_no = 1;
        var sff_promotion_code = $("#SFFProductCodeMapping").val();
        var package_code = $("#PACKAGE_CODE_MAPPING").val();
        var url = '@Url.Action("GetConfigurationPackageToViewSelectPage", "ConfigurationPackages")';
        url = url + "?ProductCode=" + sff_promotion_code + "&PackageCode=" + package_code + "&PageNo=" + page_no;
        window.location.href = url;
    }

    function _backPage2() {
        Loading();
        var page_no = 2;
        var sff_promotion_code = $("#SFFProductCodeCatalog").val();
        var package_code = $("#PACKAGE_CODE_CATALOG").val();
        var url = '@Url.Action("GetConfigurationPackageToViewSelectPage", "ConfigurationPackages")';
        url = url + "?ProductCode=" + sff_promotion_code + "&PackageCode=" + package_code + "&PageNo=" + page_no;
        window.location.href = url;
    }

    function _backPage3() {
        Loading();
        var page_no = 3;
        var sff_promotion_code = $("#SFFProductCodeLocation").val();
        var package_code = $("#PACKAGE_CODE_LOCATION").val();
        var url = '@Url.Action("GetConfigurationPackageToViewSelectPage", "ConfigurationPackages")';
        url = url + "?ProductCode=" + sff_promotion_code + "&PackageCode=" + package_code + "&PageNo=" + page_no;
        window.location.href = url;
    }

    function _backPage4() {
        Loading();
        var page_no = 4;
        var sff_promotion_code = $("#SFFProductCodeReport").val();
        var package_code = $("#PACKAGE_CODE_REPORT").val();
        var url = '@Url.Action("GetConfigurationPackageToViewSelectPage", "ConfigurationPackages")';
        url = url + "?ProductCode=" + sff_promotion_code + "&PackageCode=" + package_code + "&PageNo=" + page_no;
        window.location.href = url;
    }

    function addNewConfigPackage() {
        ShowSavePage1();
    }

    function editConfigPackage(e) {
        Loading();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '@Url.Action("GetConfigurationPackageToView", "ConfigurationPackages")';
        url = url + "?ProductCode=" + dataItem.sff_promotion_code + "&PackageCode=" + dataItem.package_code;
        window.location.href = url;
    }

    function addNewPackageGroup() {
        $("#AddPackageGroup").data("kendoWindow").open();
        $("#AddPackageGroup").data("kendoWindow").center();
    }

    function addNewProductSubtype3() {
        $("#AddProductSubtype3").data("kendoWindow").open();
        $("#AddProductSubtype3").data("kendoWindow").center();
    }

    function addNewVendorPartner() {
        $("#AddVendorPartner").data("kendoWindow").open();
        $("#AddVendorPartner").data("kendoWindow").center();
    }

    function _AddPakageMapping() {
        Loading();
        var grid = $("#gridPackageTypeSearch").data("kendoGrid");
        var gridcurrentPage = grid.dataSource.page();
        var grid2 = $("#gridPackageTypeSearchTmp").data("kendoGrid");
        // Get selected rows
        var sel = $("input:checked", grid.tbody).closest("tr");
        // Get data item for each
        var items = [];
        $.each(sel, function (idx, row) {
            var item = grid.dataItem(row);
            items.push(item);
        });
        // Show results
        var DataS = JSON.stringify(items);

        // Remove items

        $.ajax({
            url: '/ConfigurationPackages/AddPakageMappingToTmp',
            data: {
                DataS: DataS
            },
            dataType: "html",
            type: 'POST',
            success: function (response) {
                
            },
            error: function (err) {

            }

        });
        grid.dataSource.page(gridcurrentPage);
        grid2.dataSource.page(1);
        $(".PackageTypeSearchSelectAll").prop("checked", false)
        $(".PackageTypeSearchTmpSelectAll").prop("checked", false)
        Loading(0);

    }

    function _DeletePakageMapping() {
        Loading();
        var grid = $("#gridPackageTypeSearch").data("kendoGrid");
        var gridcurrentPage = grid.dataSource.page();
        var grid2 = $("#gridPackageTypeSearchTmp").data("kendoGrid");
        // Get selected rows
        var sel = $("input:checked", grid2.tbody).closest("tr");
        // Get data item for each
        var items = [];
        $.each(sel, function (idx, row) {
            var item = grid2.dataItem(row);
            items.push(item);
        });
        // Show results
        var DataS = JSON.stringify(items);

        // Remove items

        $.ajax({
            url: '/ConfigurationPackages/DeletePakageMappingToTmp',
            data: {
                DataS: DataS
            },
            dataType: "html",
            type: 'POST',
            success: function (response) {

            },
            error: function (err) {

            }

        });
        grid.dataSource.page(gridcurrentPage);
        grid2.dataSource.page(1);
        $(".PackageTypeSearchSelectAll").prop("checked", false)
        $(".PackageTypeSearchTmpSelectAll").prop("checked", false)
        Loading(0);

    }

    function _AddProvince() {
        Loading();
        var grid = $("#gridProvince").data("kendoGrid");
        var grid2 = $("#gridProvinceTmp").data("kendoGrid");
        // Get selected rows
        var sel = $("input:checked", grid.tbody).closest("tr");
        // Get data item for each
        var items = [];
        $.each(sel, function (idx, row) {
            var item = grid.dataItem(row);
            items.push(item);
        });
        // Show results
        var DataS = JSON.stringify(items);

        // Remove items

        $.ajax({
            url: '/ConfigurationPackages/AddProvinceToTmp',
            data: {
                DataS: DataS
            },
            dataType: "html",
            type: 'POST',
            success: function (response) {

            },
            error: function (err) {

            }

        });
        grid.dataSource.page(1);
        grid2.dataSource.page(1);
        $(".ProvinceSelectAll").prop("checked", false)
        $(".ProvinceTmpSelectAll").prop("checked", false)
        Loading(0);
    }

    function _DeleteProvince() {
        Loading();
        var grid = $("#gridProvince").data("kendoGrid");
        var grid2 = $("#gridProvinceTmp").data("kendoGrid");
        // Get selected rows
        var sel = $("input:checked", grid2.tbody).closest("tr");
        // Get data item for each
        var items = [];
        $.each(sel, function (idx, row) {
            var item = grid2.dataItem(row);
            items.push(item);
        });
        // Show results
        var DataS = JSON.stringify(items);

        // Remove items

        $.ajax({
            url: '/ConfigurationPackages/DeleteProvinceToTmp',
            data: {
                DataS: DataS
            },
            dataType: "html",
            type: 'POST',
            success: function (response) {

            },
            error: function (err) {

            }

        });
        grid.dataSource.page(1);
        grid2.dataSource.page(1);
        $(".ProvinceSelectAll").prop("checked", false)
        $(".ProvinceTmpSelectAll").prop("checked", false)
        Loading(0);
    }

    function _AddBuilding() {
        Loading();
        var grid = $("#gridBuilding").data("kendoGrid");
        var grid2 = $("#gridBuildingTmp").data("kendoGrid");
        // Get selected rows
        var sel = $("input:checked", grid.tbody).closest("tr");
        // Get data item for each
        var items = [];
        $.each(sel, function (idx, row) {
            var item = grid.dataItem(row);
            items.push(item);
        });
        // Show results
        var DataS = JSON.stringify(items);

        // Remove items

        $.ajax({
            url: '/ConfigurationPackages/AddBuildingToTmp',
            data: {
                DataS: DataS
            },
            dataType: "html",
            type: 'POST',
            success: function (response) {

            },
            error: function (err) {

            }

        });
        grid.dataSource.page(1);
        grid2.dataSource.page(1);
        $(".BuildingSelectAll").prop("checked", false)
        $(".BuildingTmpSelectAll").prop("checked", false)
        Loading(0);
    }

    function _DeleteBuilding() {
        Loading();
        var grid = $("#gridBuilding").data("kendoGrid");
        var grid2 = $("#gridBuildingTmp").data("kendoGrid");
        // Get selected rows
        var sel = $("input:checked", grid2.tbody).closest("tr");
        // Get data item for each
        var items = [];
        $.each(sel, function (idx, row) {
            var item = grid2.dataItem(row);
            items.push(item);
        });
        // Show results
        var DataS = JSON.stringify(items);

        // Remove items

        $.ajax({
            url: '/ConfigurationPackages/DeleteBuildingToTmp',
            data: {
                DataS: DataS
            },
            dataType: "html",
            type: 'POST',
            success: function (response) {

            },
            error: function (err) {

            }

        });
        grid.dataSource.page(1);
        grid2.dataSource.page(1);
        $(".BuildingSelectAll").prop("checked", false)
        $(".BuildingTmpSelectAll").prop("checked", false)
        Loading(0);
    }

    function onSaveNewPackageGroup() {
        if ($("#NewPackageGroupName").val() != "") {

            Loading();

            $.ajax({
                url: '/ConfigurationPackages/SavePackageGroup',
                data: {
                    ProductType: $("#DllProductType1").val(), PackageGroup: $("#NewPackageGroupName").val(), PackageCode: $("#PACKAGE_CODE").val(), Mode: $("#SaveStatus").val()
                },
                dataType: "html",
                type: 'POST',
                success: function (response) {
                    CloseNewPackageGroupFrom();
                    if ($("#SaveStatus").val() == "N") {
                        $("#PackageDescriptionRow12").hide();
                    }
                    $('#span-producttype').replaceWith(response);
                    Loading(0);

                },
                error: function (err) {
                    CloseNewPackageGroupFrom();
                    showFeedback("error", err.status);
                    Loading(0);
                }

            });

        }
    }

    function onSaveNewProductSubtype3() {
        if ($("#NewProductSubtype3").val() != "") {

            Loading();

            $.ajax({
                url: '/ConfigurationPackages/SaveProductSubtype3',
                data: {
                    ProductType: $("#DllProductType2").val(), ProductSubtype3: $("#NewProductSubtype3").val(), PackageCode: $("#PACKAGE_CODE").val(), Mode: $("#SaveStatus").val()
                },
                dataType: "html",
                type: 'POST',
                success: function (response) {
                    CloseNewProductSubtype3From();
                    if ($("#SaveStatus").val() == "N") {
                        $("#PackageDescriptionRow12").hide();
                    }
                    $('#span-producttype').replaceWith(response);
                    Loading(0);
                },
                error: function (err) {
                    CloseNewProductSubtype3From();
                    showFeedback("error", err);
                    Loading(0);
                }

            });

        }
    }

    function onSaveNewVendorPartner() {
        if ($("#NewVendorPartner").val() != "") {

            Loading();

            $.ajax({
                url: '/ConfigurationPackages/SaveVendorPartner',
                data: {
                    VendorPartner: $("#NewVendorPartner").val(), PackageCode: $("#PACKAGE_CODE").val(), Mode: $("#SaveStatus").val()
                },
                dataType: "html",
                type: 'POST',
                success: function (response) {
                    CloseNewVendorPartnerFrom();
                    $('#span-vendorpartner').replaceWith(response);
                    Loading(0);
                },
                error: function (err) {
                    CloseNewVendorPartnerFrom();
                    showFeedback("error", err);
                    Loading(0);
                }

            });

        }
    }

    function ClearNewPackageGroupFrom() {

        var dropdownlist = $("#DllProductType1").data("kendoDropDownList");
        dropdownlist.select(0);
        $("#NewPackageGroupName").val('');
    }

    function ClearNewProductSubtype3From() {

        var dropdownlist = $("#DllProductType2").data("kendoDropDownList");
        dropdownlist.select(3);
        $("#NewProductSubtype3").val('');
    }

    function ClearNewVendorPartnerFrom() {

        $("#NewVendorPartner").val('');
    }

    function CloseNewPackageGroupFrom() {
        var dropdownlist = $("#DllProductType1").data("kendoDropDownList");
        dropdownlist.select(0);
        $("#NewPackageGroupName").val('');
        $("#AddPackageGroup").data("kendoWindow").close();
    }

    function CloseNewProductSubtype3From() {
        var dropdownlist = $("#DllProductType2").data("kendoDropDownList");
        dropdownlist.select(3);
        $("#NewProductSubtype3").val('');
        $("#AddProductSubtype3").data("kendoWindow").close();
    }

    function CloseNewVendorPartnerFrom() {
        $("#NewVendorPartner").val('');
        $("#AddVendorPartner").data("kendoWindow").close();
    }

    function savePage1(mode) {

        var chk = ValidationProcessingConfigPackage("frmConfigurationPackagePage1");
        if (chk) {
            if (mode == 1) {
                $("#SaveToPage2").val('N');
            }
            else if (mode == 2) {
                $("#SaveToPage2").val('Y');
            }
            else {
                $("#SaveToPage2").val('N');
            }
            var dropDown = $("#PACKAGE_TYPE").data("kendoDropDownList");
            dropDown.enable(true);
            $.ajaxSetup({
                cache: false
            });
            Loading();
            $('#frmConfigurationPackagePage1').submit();
        }

    }

    function savePage2(mode) {
        if (mode == 1) {
            $("#SaveToPage3").val('N');
        }
        else if (mode == 2) {
            $("#SaveToPage3").val('Y');
        }
        else {
            $("#SaveToPage3").val('N');
        }
        Loading();
        $('#frmConfigurationPackagePage2').submit();

    }

    function savePage3(mode) {
        if (mode == 1) {
            $("#SaveToPage4").val('N');
        }
        else if (mode == 2) {
            $("#SaveToPage4").val('Y');
        }
        else {
            $("#SaveToPage4").val('N');
        }
        Loading();
        $('#frmConfigurationPackagePage3').submit();

    }

    function savePage4() {
        Loading();
        $('#frmConfigurationPackagePage4').submit();
    }

    function saveFinish() {
        Loading();
        $('#frmConfigurationPackageReport').submit();
    }

    function SaleStartDateChange() {

        var startPicker = $("#SALE_START_DATE").data("kendoDatePicker"),
            endPicker = $("#SALE_END_DATE").data("kendoDatePicker"),
            startDate = startPicker.value(),
            endDate = endPicker.value();
        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate() + 1);
            //endPicker.min(startDate);            
        }
        else {
            if (endDate) {
                endPicker.min(endDate);
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate() - 1);
                //startPicker.max(endDate);
                startPicker.value(endDate);
            }
            else {
                startPicker.value("");
            }
        }
    }

    function SaleEndDateChange() {
        var startPicker = $("#SALE_START_DATE").data("kendoDatePicker"),
            endPicker = $("#SALE_END_DATE").data("kendoDatePicker"),
            startDate = startPicker.value(),
            endDate = endPicker.value();
        if (endDate) {
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate() - 1);
            //startPicker.max(endDate);
        }
        else {
            if (startDate) {
                startPicker.max(startDate);
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate() + 1);
                //endPicker.min(startDate);
                endPicker.value(startDate);
            }
            else {
                endPicker.value("");
            }
        }
    }
 
    function PackageGroupOnSelect(e) {
        var dataItem = this.dataItem(e.item.index());
        var index = e.sender._optionID.substring(16, 17);
        var dataItemSelect = dataItem.LOV_VAL1;

        $.ajax({
            url: '/ConfigurationPackages/SelectPackageGroupDesc',
            data: { dataItemSelect: dataItemSelect },
            dataType: "json",
            type: 'POST',
            success: function (response) {

                if (response) {
                    if (response.PackageGroupDescThai == "" || response.PackageGroupDescEng == "") {
                        $("#ListPackageType_" + index + "__PACKAGE_GROUP_DESCRIPTION_THAI").val("");
                        $("#ListPackageType_" + index + "__PACKAGE_GROUP_DESCRIPTION_THAI_OLD").val("");
                        $("#ListPackageType_" + index + "__PACKAGE_GROUP_DESCRIPTION_ENG").val("");
                        $("#ListPackageType_" + index + "__PACKAGE_GROUP_DESCRIPTION_ENG_OLD").val("");
                    }
                    else {
                        $("#ListPackageType_" + index + "__PACKAGE_GROUP_DESCRIPTION_THAI").val(response.PackageGroupDescThai);
                        $("#ListPackageType_" + index + "__PACKAGE_GROUP_DESCRIPTION_THAI_OLD").val(response.PackageGroupDescThai);
                        $("#ListPackageType_" + index + "__PACKAGE_GROUP_DESCRIPTION_ENG").val(response.PackageGroupDescEng);
                        $("#ListPackageType_" + index + "__PACKAGE_GROUP_DESCRIPTION_ENG_OLD").val(response.PackageGroupDescEng);
                    }
                    

                }

            },
            failure: function (msg) {
                alert(msg);
            }
        });
    }

    function CheckFTTB(index) {

        if ($("#ListPackageType_" + index + "__PACKAGE_SELECT").is(':checked')) {
            $("#PackageDescriptionRow12").show();
            $("#VendorOrPartnerShow").val('True');
        }
        else {
            var hidestatus = false;
            $(".CheckBoxActive").each(function () {
                hidestatus = hidestatus || $(this).is(':checked');
            });
            if (!hidestatus) {
                $("#VendorOrPartnerShow").val("False");
                $("#PackageDescriptionRow12").hide();
            }
            else {
                $("#VendorOrPartnerShow").val('True');
            }
        }
    }

    function ShowSearchPage() {
        $("#HeadPage1").show();
        $("#HeadPage2").hide();
        $("#HeadPage3").hide();
        $("#HeadPage4").hide();
        $("#HeadPage5").hide();
        $("#HeadReport").hide();
        $("#SearchPane").show();
        $("#gridresult").show();
        $("#NewPane").hide();
        $("#PackageDescPane").hide();
        $("#PackageDescPane2").hide();
        $("#PackageDescPane3").hide();
        $("#PackageDescPane4").hide();
        $("#PackageDescPane5").hide();
        $("#PackageRptPane").hide();
    }

    function ShowSavePage1() {
        $("#HeadPage1").hide();
        $("#HeadPage2").show();
        $("#HeadPage3").hide();
        $("#HeadPage4").hide();
        $("#HeadPage5").hide();
        $("#HeadReport").hide();
        $("#SearchPane").hide();
        $("#gridresult").hide();
        $("#NewPane").show();
        $("#SFFProductCode").removeAttr('readonly');
        $("#SFFProductNameThai").removeAttr('readonly');
        $("#SFFProductNameEng").removeAttr('readonly');
        $("#PackageDescPane").show();
        $("#PackageDescPane2").hide();
        $("#PackageDescPane3").hide();
        $("#PackageDescPane4").hide();
        $("#PackageDescPane5").hide();
        $("#PackageRptPane").hide();
    }

    function ShowSavePage2() {
        $("#HeadPage1").hide();
        $("#HeadPage2").hide();
        $("#HeadPage3").show();
        $("#HeadPage4").hide();
        $("#HeadPage5").hide();
        $("#HeadReport").hide();
        $("#SearchPane").hide();
        $("#gridresult").hide();
        $("#NewPane").show();
        $('#SFFProductCode').prop('readonly', true);
        $('#SFFProductNameThai').prop('readonly', true);
        $('#SFFProductNameEng').prop('readonly', true);
        $("#PackageDescPane").hide();
        $("#PackageDescPane2").show();
        $("#PackageDescPane3").hide();
        $("#PackageDescPane4").hide();
        $("#PackageDescPane5").hide();
        $("#PackageRptPane").hide();
    }

    function ShowSavePage3() {
        $("#HeadPage1").hide();
        $("#HeadPage2").hide();
        $("#HeadPage3").hide();
        $("#HeadPage4").show();
        $("#HeadPage5").hide();
        $("#HeadReport").hide();
        $("#SearchPane").hide();
        $("#gridresult").hide();
        $("#NewPane").show();
        $('#SFFProductCode').prop('readonly', true);
        $('#SFFProductNameThai').prop('readonly', true);
        $('#SFFProductNameEng').prop('readonly', true);
        $("#PackageDescPane").hide();
        $("#PackageDescPane2").hide();
        $("#PackageDescPane3").show();
        $("#PackageDescPane4").hide();
        $("#PackageDescPane5").hide();
        $("#PackageRptPane").hide();
    }

    function ShowSavePage4() {
        $("#HeadPage1").hide();
        $("#HeadPage2").hide();
        $("#HeadPage3").hide();
        $("#HeadPage4").hide();
        $("#HeadPage5").show();
        $("#HeadReport").hide();
        $("#SearchPane").hide();
        $("#gridresult").hide();
        $("#NewPane").show();
        $('#SFFProductCode').prop('readonly', true);
        $('#SFFProductNameThai').prop('readonly', true);
        $('#SFFProductNameEng').prop('readonly', true);
        $("#PackageDescPane").hide();
        $("#PackageDescPane2").hide();
        $("#PackageDescPane3").hide();
        $("#PackageDescPane4").show();
        $("#PackageDescPane5").show();
        $("#PackageRptPane").hide();
    }

    function ShowReprot() {
        $("#HeadPage1").hide();
        $("#HeadPage2").hide();
        $("#HeadPage3").hide();
        $("#HeadPage4").hide();
        $("#HeadPage5").hide();
        $("#HeadReport").show();
        $("#SearchPane").hide();
        $("#gridresult").hide();
        $("#NewPane").show();
        $('#SFFProductCode').prop('readonly', true);
        $('#SFFProductNameThai').prop('readonly', true);
        $('#SFFProductNameEng').prop('readonly', true);
        $("#PackageDescPane").hide();
        $("#PackageDescPane2").hide();
        $("#PackageDescPane3").hide();
        $("#PackageDescPane4").hide();
        $("#PackageDescPane5").hide();
        $("#PackageRptPane").show();
    }

    function ShowVendorTable() {
        $("#PackageDescriptionRow12").show();
    }

    function CloseVendorTable() {
        $("#PackageDescriptionRow12").hide();
    }

    $(".ALL").change(function () {
        if ($(this).is(":checked")) {
            $(".SubCheck").each(function () {
                if( !$(this).is(':disabled') ) {
                    $(this).prop("checked", true)
                }
            });
        }
        else {
            $(".SubCheck").each(function () {
                if( !$(this).is(':disabled') ) {
                    $(this).prop("checked", false)
                }
            });
        }
    });

    $(".SubCheck").change(function () {
        if ($(this).is(":checked")) {
            var checkAll = true;
            $(".SubCheck").each(function () {
                checkAll = checkAll && $(this).is(":checked");
            });

            if (checkAll) {
                $(".ALL").prop("checked", true)
            }
        }
        else {
            $(".ALL").prop("checked", false)
        }
    });

    $(".CatalogALL").change(function () {
        if ($(this).is(":checked")) {
            $(".CatalogSubCheck").each(function () {
                if (!$(this).is(':disabled')) {
                    $(this).prop("checked", true)
                }
            });
        }
        else {
            $(".CatalogSubCheck").each(function () {
                if (!$(this).is(':disabled')) {
                    $(this).prop("checked", false)
                }
            });
        }
    });

    $(".CatalogSubCheck").change(function () {
        if ($(this).is(":checked")) {
            var checkAll = true;
            $(".CatalogSubCheck").each(function () {
                checkAll = checkAll && $(this).is(":checked");
            });

            if (checkAll) {
                $(".CatalogALL").prop("checked", true)
            }
        }
        else {
            $(".CatalogALL").prop("checked", false)
        }
    });

    $(".RegionALL").change(function () {
        if ($(this).is(":checked")) {
            $(".RegionSubCheck").each(function () {
                $(this).prop("checked", true)
            });
        }
        else {
            $(".RegionSubCheck").each(function () {
                $(this).prop("checked", false)
            });
        }
    });

    $(".RegionSubCheck").change(function () {
        if ($(this).is(":checked")) {
            var checkAll = true;
            $(".RegionSubCheck").each(function () {
                checkAll = checkAll && $(this).is(":checked");
            });

            if (checkAll) {
                $(".RegionALL").prop("checked", true)
            }
        }
        else {
            $(".RegionALL").prop("checked", false)
        }
    });

    $(".ProvinceSelectAll").change(function () {
        if ($(this).is(":checked")) {
            $(".ProvinceSelect").each(function () {
                $(this).prop("checked", true)
            });
        }
        else {
            $(".ProvinceSelect").each(function () {
                $(this).prop("checked", false)
            });
        }
    });

    $(".ProvinceTmpSelectAll").change(function () {
        if ($(this).is(":checked")) {
            $(".ProvinceTmpSelect").each(function () {
                if (!$(this).is(':disabled')) {
                    $(this).prop("checked", true)
                }
            });
        }
        else {
            $(".ProvinceTmpSelect").each(function () {
                if (!$(this).is(':disabled')) {
                    $(this).prop("checked", false)
                }
            });
        }
    });

    $(".PackageTypeSearchSelectAll").change(function () {
        if ($(this).is(":checked")) {
            $(".PackageTypeSearchSelect").each(function () {
                $(this).prop("checked", true)
            });
        }
        else {
            $(".PackageTypeSearchSelect").each(function () {
                $(this).prop("checked", false)
            });
        }
    });

    $(".PackageTypeSearchTmpSelectAll").change(function () {
        if ($(this).is(":checked")) {
            $(".PackageTypeSearchTmpSelect").each(function () {
                if (!$(this).is(':disabled')) {
                    $(this).prop("checked", true)
                }
            });
        }
        else {
            $(".PackageTypeSearchTmpSelect").each(function () {
                if (!$(this).is(':disabled')) {
                    $(this).prop("checked", false)
                }
            });
        }
    });

    $(".BuildingSelectAll").change(function () {
        if ($(this).is(":checked")) {
            $(".BuildingSelect").each(function () {
                $(this).prop("checked", true)
            });
        }
        else {
            $(".BuildingSelect").each(function () {
                $(this).prop("checked", false)
            });
        }
    });

    $(".BuildingTmpSelectAll").change(function () {
        if ($(this).is(":checked")) {
            $(".BuildingTmpSelect").each(function () {
                if (!$(this).is(':disabled')) {
                    $(this).prop("checked", true)
                }
            });
        }
        else {
            $(".BuildingTmpSelect").each(function () {
                if (!$(this).is(':disabled')) {
                    $(this).prop("checked", false)
                }
            });
        }
    });

    function ValidationProcessingConfigPackage(panel) {
        var chk = true;
        var havefocus = false;
        $("#" + panel + " .i-required").each(function (index, e) {
            var field = e.id.split('requiredfor-')[1];
            var value = $("#" + field).val();
            if ($.trim(value) == "") {
                $("#requiredfor-" + field).addClass("label label-danger i-gap-left-md i-required");
                $("#requiredfor-" + field).text("Required");
                if (!havefocus) {
                    $('#' + field).focus();
                    havefocus = true;
                }
                chk = false;
            }
            else {
                $("#requiredfor-" + field).removeClass("label label-danger i-gap-left-md i-required");
                $("#requiredfor-" + field).text("");
            }
        });
        if (chk) {
            $("#" + panel + " .i-validate-length").each(function (index, e) {
                var field = e.id.split('validatefor-')[1];
                var value = $("#" + field).val();
                var length = parseInt(e.className.split('i-length-')[1]);
                var val_length = 0;
                if (value != "") {
                    val_length = value.length;
                }

                if (val_length > length) {
                    $("#" + e.id).html(ValidationIcon() + "This maxlength field is " + length + ".");
                    chk = false;
                }
                else {
                    $("#" + e.id).html("");
                }
            });
        }

        return chk;
    }

</script>