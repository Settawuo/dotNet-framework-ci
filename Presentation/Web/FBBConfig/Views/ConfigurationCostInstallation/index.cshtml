@using WBBEntity.PanelModels.FBBWebConfigModels;
@model WBBEntity.PanelModels.FBBWebConfigModels.ConfigurationCostInstallationView
@{
    ViewBag.Title = "";
    //var ViewTable = Model.CostInstallation;
    string L_PAGE_NAME = "Configuration Cost Installation";

    string L_CRITERIA_PANEL = " Configuration Cost Installation";
    string L_TableName = "TableName";
    string L_RuleID = "RuleID";
    string L_EFFECTIVE_DATE = "Effective Date";
    string L_EXPIRE_DATE = "Expire Date";
    string L_RESULT_PANEL = "Search Result";
    string L_SUBCONTRACT_TYPE = "Subcontract Type";
    string L_ORDER_TYPE = "ORDER TYPE";
    string L_TECHNOLOGY = "TECHNOLOGY";

    string E_RULE_ID = "RULE ID";
    string E_RULE_NAME = "RULE NAME";
    string E_ORDER_TYPE = "ORDER TYPE";

    string E_SUBCONTRACT_TYPE = "SUBCONTRACT TYPE";
    string E_SUBCONTRACT_SUB_TYPE = "SUBCONTRACT SUB TYPE";
    string E_VENDOR_CODE = "VENDOR CODE";
    string E_TECHNOLOGY = "TECHNOLOGY";
    string E_TOTAL_PRICE = "TOTAL PRICE";
    string E_EFFECTIVE_DATE = "EFFECTIVE DATE";
    string E_EXPIRE_DATE = "EXPIRE DATE";
    string E_CREATE_DATE = "CREATE DATE";
    string E_CREATE_BY = "CREATE BY";
    string E_UPDATE_DATE = "UPDATE DATE";
    string E_UPDATE_BY = "UPDATE BY";

    string E_INTERNET_PRICE = "INTERNET PRICE ";
    string E_VOIP_PRICE = "VOIP PRICE";
    string E_PLAYBOX_PRICE = "PLAYBOX PRICE";
    string E_MECH_PRICE = "MESH PRICE";
    string E_ADDRESS_ID = "ADDRESS ID";
    string E_EVENT_TYPE = "EVENT TYPE";

    string E_EVENT_CODE = "EVENT CODE";
    string E_ROOM_FLAG = "ROOM FLAG";
    string E_REUSE_FLAG = "REUSE FLAG";
    string E_DISTANCE_FROM = "DISTANCE FROM";
    string E_DISTANCE_TO = "DISTANCE TO";
    string E_INDOOR_PRICE = "INDOOR PRICE";
    string E_OUTDOOR_PRICE = "OUTDOOR PRICE";
    string E_SAME_DAY = "SAME DAY";
    string E_SUBCONTRACT_LOCATION = "LOCATION CODE";

    string L_POPUP_INSTALL_COST_ADD = "";
    string L_SERVICE = "";
    string L_CUSTOMER = "";
    string L_CUSTOMER_NAME = "";
    string L_CUSTOMER_NAME_EDIT = "";


    string L_INTERNET_RATE = "";
    string L_PLAY_BOX_RATE = "";
    string L_VOIP_RATE = "";
    string L_PLAY_BOX = "";
    string L_PHASE = "";
    string L_REMARK = "";
    string L_LINE_FR = "";
    string L_LINE_TO = "";
    string L_TARGET_FROM = "";
    string L_TARGET_TO = "";
    string L_LINE_FROM_TO = "";
    string L_OUT_DOOR_PRICE = "";
    string L_IN_DOOR_PRICE = "";

    // Button
    string B_SEARCH = "Search";
    string B_CLEAR = "Clear";
    string B_NEW = "New Rate";
    string B_DELETE = "Delete";
    string B_EDIT = "Edit";
    string B_SAVE = "Save";
    string B_CANCEL = "Cancel";
    string B_EXPORT = "Export to Excel";
    string B_EXPORTALL = "Export All";

    //if (ViewBag.configscreen != null)
    //{
    //    var configscreen = (List<LovValueModel>)ViewBag.configscreen;
    //    L_PAGE_NAME = configscreen.Any(f => f.Name == "L_PAGE_NAME") ? configscreen.FirstOrDefault(f => f.Name == "L_PAGE_NAME").LovValue1 : "";
    //    L_POPUP_INSTALL_COST_ADD = configscreen.Any(f => f.Name == "L_POPUP_INSTALL_COST_ADD") ? configscreen.FirstOrDefault(f => f.Name == "L_POPUP_INSTALL_COST_ADD").LovValue1 : "";
    //    L_POPUP_INSTALL_COST_EDIT = configscreen.Any(f => f.Name == "L_POPUP_INSTALL_COST_EDIT") ? configscreen.FirstOrDefault(f => f.Name == "L_POPUP_INSTALL_COST_EDIT").LovValue1 : "";
    //    L_CRITERIA_PANEL = configscreen.Any(f => f.Name == "L_CRITERIA_PANEL") ? configscreen.FirstOrDefault(f => f.Name == "L_CRITERIA_PANEL").LovValue1 : "";
    //    L_SERVICE = configscreen.Any(f => f.Name == "L_SERVICE") ? configscreen.FirstOrDefault(f => f.Name == "L_SERVICE").LovValue1 : "";
    //    L_CUSTOMER = configscreen.Any(f => f.Name == "L_CUSTOMER") ? configscreen.FirstOrDefault(f => f.Name == "L_CUSTOMER").LovValue1 : "";
    //    L_CUSTOMER_NAME = configscreen.Any(f => f.Name == "L_CUSTOMER_NAME") ? configscreen.FirstOrDefault(f => f.Name == "L_CUSTOMER_NAME").LovValue1 : "";
    //    L_CUSTOMER_NAME_EDIT = configscreen.Any(f => f.Name == "L_CUSTOMER_NAME_EDIT") ? configscreen.FirstOrDefault(f => f.Name == "L_CUSTOMER_NAME_EDIT").LovValue1 : "";
    //    L_ORDER_TYPE = configscreen.Any(f => f.Name == "L_ORDER_TYPE") ? configscreen.FirstOrDefault(f => f.Name == "L_ORDER_TYPE").LovValue1 : "";
    //    L_EFFECTIVE_DATE = configscreen.Any(f => f.Name == "L_EFFECTIVE_DATE") ? configscreen.FirstOrDefault(f => f.Name == "L_EFFECTIVE_DATE").LovValue1 : "";
    //    L_EXPIRE_DATE = configscreen.Any(f => f.Name == "L_EXPIRE_DATE") ? configscreen.FirstOrDefault(f => f.Name == "L_EXPIRE_DATE").LovValue1 : "";
    //    L_INTERNET_RATE = configscreen.Any(f => f.Name == "L_INTERNET_RATE") ? configscreen.FirstOrDefault(f => f.Name == "L_INTERNET_RATE").LovValue1 : "";
    //    L_PLAY_BOX_RATE = configscreen.Any(f => f.Name == "L_PLAY_BOX_RATE") ? configscreen.FirstOrDefault(f => f.Name == "L_PLAY_BOX_RATE").LovValue1 : "";
    //    L_VOIP_RATE = configscreen.Any(f => f.Name == "L_VOIP_RATE") ? configscreen.FirstOrDefault(f => f.Name == "L_VOIP_RATE").LovValue1 : "";
    //    L_PLAY_BOX = configscreen.Any(f => f.Name == "L_PLAY_BOX") ? configscreen.FirstOrDefault(f => f.Name == "L_PLAY_BOX").LovValue1 : "";
    //    L_PHASE = configscreen.Any(f => f.Name == "L_PHASE") ? configscreen.FirstOrDefault(f => f.Name == "L_PHASE").LovValue1 : "";
    //    L_REMARK = configscreen.Any(f => f.Name == "L_REMARK") ? configscreen.FirstOrDefault(f => f.Name == "L_REMARK").LovValue1 : "";
    //    L_LINE_FR = configscreen.Any(f => f.Name == "L_LINE_FR") ? configscreen.FirstOrDefault(f => f.Name == "L_LINE_FR").LovValue1 : "";
    //    L_LINE_TO = configscreen.Any(f => f.Name == "L_LINE_TO") ? configscreen.FirstOrDefault(f => f.Name == "L_LINE_TO").LovValue1 : "";
    //    L_TARGET_FROM = configscreen.Any(f => f.Name == "L_TARGET_FROM") ? configscreen.FirstOrDefault(f => f.Name == "L_TARGET_FROM").LovValue1 : "";
    //    L_TARGET_TO = configscreen.Any(f => f.Name == "L_TARGET_TO") ? configscreen.FirstOrDefault(f => f.Name == "L_TARGET_TO").LovValue1 : "";
    //    L_LINE_FROM_TO = configscreen.Any(f => f.Name == "L_LINE_FROM_TO") ? configscreen.FirstOrDefault(f => f.Name == "L_LINE_FROM_TO").LovValue1 : "";
    //    L_OUT_DOOR_PRICE = configscreen.Any(f => f.Name == "L_OUT_DOOR_PRICE") ? configscreen.FirstOrDefault(f => f.Name == "L_OUT_DOOR_PRICE").LovValue1 : "";
    //    L_IN_DOOR_PRICE = configscreen.Any(f => f.Name == "L_IN_DOOR_PRICE") ? configscreen.FirstOrDefault(f => f.Name == "L_IN_DOOR_PRICE").LovValue1 : "";
    //}


}

<style>
    label.required:after {
        color: red;
        content: " *";
    }

    .k-grid .k-grid-header .k-header .k-link {
        height: auto;
    }

    .k-grid .k-grid-header .k-header {
        white-space: normal;
        vertical-align: top;
    }

    .TextUpper {
        text-transform: uppercase !important;
    }

    .modal {
        text-align: center;
        padding: 0 !important;
    }

        .modal:before {
            content: '';
            display: inline-block;
            height: 100%;
            vertical-align: middle;
            margin-right: -4px;
        }

    .modal-dialog {
        display: inline-block;
        text-align: left;
        vertical-align: middle;
    }
</style>

<style>
    .loader {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-40%, -50%);
        animation: effect 1s linear infinite;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        border: 3px solid rgba(255, 255, 255, 0.3);
        border-top-color: #fff;
    }

    @@keyframes effect {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }


    /* position to center */

    .loader {
        position: absolute;
        top: calc(50% - 2.5em);
        left: calc(50% - 2.5em);
    }


    /**
    * disable background
    */

    .loader-mask {
        position: fixed;
        z-index: 9998;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, .5);
        display: table;
        transition: opacity .3s ease;
    }
</style>

<div class="page-header i-header-fit">
    <div class="row">
        <div class="col-sm-12 col-md-12">
            <h3 style="margin-top: 0">@L_PAGE_NAME</h3>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>@L_CRITERIA_PANEL</span>
                    <a data-toggle="collapse" class="pull-right" href="#SearchPanel1" onclick="onPanelToggle(this);" id="SearchPanelHeader1"><i class="fa fa-chevron-circle-down fa-lg" id="SearchPanelHeaderArrow1"></i></a>
                </h3>
            </div>
            <div id="SearchPanel1" class="panel-collapse collapse in">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-sm-12 col-md-4">
                            <label>@L_TableName</label>
                            <div class="i-fg-data-entry">
                                @(Html.Kendo().DropDownList()
                                                                                                                                                            .Name("ddllTableList")
                                                                                                                                                            .DataTextField("DISPLAY_VAL")
                                                                                                                                                            .DataValueField("LOV_VAL1")
                                                                                                                                                            .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                            .DataSource(source =>
                                                                                                                                                            {
                                                                                                                                                                source.Read(read =>
                                                                                                                                                                {
                                                                                                                                                                    read.Action("SelectListTable", "ConfigurationCostInstallation");
                                                                                                                                                                });
                                                                                                                                                            })
                                                                                                                                                                    .Events(e => e.Change("TableListChange"))
                                                                                                                                                             .SelectedIndex(0)
                                )
                            </div>
                            <div id="validate-ddllTableList" class="i-fg-data-entry-validation"></div>
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_RuleID</label>
                            <div class="i-fg-data-entry">
                                @(Html.Kendo().DropDownList()
                                                                                                                                                                .Name("ddlruleid")
                                                                                                                                                                .Filter("contains")
                                                                                                                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                        //.DataTextField("ruleid")
                                        //.DataValueField("ruleid")
                                        //.DataSource(source =>
                                        //{
                                        //    source.Read(read =>
                                        //    {
                                        //        read.Action("GetRuleId", "ConfigurationCostInstallation");

                                        //    });
                                        //})
                                        //.SelectedIndex(0)
                                        //.AutoBind(false)
                                        //.Delay(200)
                                )
                            </div>
                        </div>
                        <div id="List_SUBCONTRACT_TYPE" class="col-sm-12 col-md-4">
                            <label>@L_SUBCONTRACT_TYPE</label>
                            <div class="i-fg-data-entry">
                                @(Html.Kendo().DropDownList()
                                                                                                                                                           .Name("ddlConttype")
                                                                                                                                                           .Filter("contains")
                                                                                                                                                           .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                           .DataTextField("DISPLAY_VAL")
                                                                                                                                                           .DataValueField("LOV_VAL1")
                                                                                                                                                           .DataSource(source =>
                                                                                                                                                          {
                                                                                                                                                              source.Read(read =>
                                                                                                                                                              {
                                                                                                                                                                  read.Action("GetSUBCONTRACTTYPE", "ConfigurationCostInstallation");

                                                                                                                                                              });

                                                                                                                                                          }).SelectedIndex(0)
                                        //           .Events(e => e.Change("FAPOChangeDropDown"))
                                )
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 col-md-4">
                            <label>@L_ORDER_TYPE</label><br />
                            <div class="i-fg-data-entry">
                                @(Html.Kendo().DropDownList()
                                                                                                                                                     .Name("ddlORDERTYPE")
                                                                                                                                                           .Filter("contains")
                                                                                                                                                           .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                           .DataTextField("DISPLAY_VAL")
                                                                                                                                                           .DataValueField("LOV_VAL1")
                                                                                                                                                           .DataSource(source =>
                                                                                                                                                          {
                                                                                                                                                              source.Read(read =>
                                                                                                                                                              {
                                                                                                                                                                  read.Action("SelectListOrderType", "ConfigurationCostInstallation");

                                                                                                                                                              });

                                                                                                                                                          }).SelectedIndex(0)
                                        // .Events(e => e.Change("onChangeORDTYPE"))
                                )
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_TECHNOLOGY</label><br />
                            <div class="i-fg-data-entry">
                                @(Html.Kendo().DropDownList()
                                                                                                                                                             .Name("ddlTECHNOLOGY")
                                                                                                                                                           .Filter("contains")

                                                                                                                                                           .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                           .DataTextField("DISPLAY_VAL")
                                                                                                                                                           .DataValueField("LOV_VAL1")
                                                                                                                                                           .DataSource(source =>
                                                                                                                                                          {
                                                                                                                                                              source.Read(read =>
                                                                                                                                                              {
                                                                                                                                                                  read.Action("SelectListTechnology", "ConfigurationCostInstallation");

                                                                                                                                                              });

                                                                                                                                                          }).SelectedIndex(0)
                                        //           .Events(e => e.Change("FAPOChangeDropDown"))
                                )
                            </div>
                        </div>
                        <div id="List_LOCATION_CODE" class="col-sm-12 col-md-4" style="display:none">
                            <label>Location Code</label>
                            <div class="i-fg-data-entry">
                                @(Html.Kendo().DropDownList()
                                                                                                                                                           .Name("ddlLocationCode")
                                                                                                                                                           .Filter("contains")
                                                                                                                                                           .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                           .OptionLabel("ALL")
                                                                                                                                                           .DataTextField("subcontract_location")
                                                                                                                                                           .DataValueField("subcontract_location")
                                                                                                                                                           .DataSource(source =>
                                                                                                                                                          {
                                                                                                                                                              source.Read(read =>
                                                                                                                                                              {
                                                                                                                                                                  read.Action("GetSUBCONTRACTLOCATION", "ConfigurationCostInstallation");

                                                                                                                                                              });

                                                                                                                                                          }).SelectedIndex(0)
                                        //           .Events(e => e.Change("FAPOChangeDropDown"))
                                )
                            </div>
                        </div>

                        @*<div class="col-sm-12 col-md-4">
                                <label>TEAM ID</label><br />
                                <div class="i-fg-data-entry">
                                    @(Html.Kendo().DropDownList()
                                         .Name("ddlTEAMID")
                                       .Filter("contains")

                                       .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                       .DataTextField("DISPLAY_VAL")
                                       .DataValueField("LOV_VAL1")
                                       .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("SelectListTechnology", "ConfigurationCostInstallation");

                                          });

                                      }).SelectedIndex(0)
                                            //           .Events(e => e.Change("FAPOChangeDropDown"))
                                    )
                                </div>
                            </div>*@
                    </div>
                    <div class="row">

                        <div class="col-sm-12 col-md-4">
                            <label>@L_EFFECTIVE_DATE FROM</label>
                            <div class="i-fg-data-entry">

                                @(Html.Kendo().DatePicker().Name("dtpDateFrom")
                                                                                                                                                            .HtmlAttributes(new { @class = "form-control i-form-control-extend validate" })
                                                                                                                                                                      .Format("dd/MM/yyyy")
                                                                                                                                                                              .Min(new DateTime(1900, 1, 1))
                                                                                                                                                                              .Max(new DateTime(2099, 12, 31))
                                                                                                                                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                                                                                                                                   .Events(e => e.Change("onChangedtpDateFrom"))
                                )
                            </div>
                            <div id="validate-dtpDateFrom" class="i-fg-data-entry-validation"></div>
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>TO</label>
                            <div class="i-fg-data-entry">

                                @(Html.Kendo().DatePicker().Name("dtpDateTo")
                                                                                                                                                            .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                                      .Format("dd/MM/yyyy")
                                                                                                                                                                              .Min(new DateTime(1900, 1, 1))
                                                                                                                                                                              .Max(new DateTime(2099, 12, 31))
                                                                                                                                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                                                                                                                                            .Events(e => e.Change("onChangedtpDateTo"))
                                )
                            </div>
                            <div id="validate-dtpDateTo" class="i-fg-data-entry-validation"></div>
                        </div>
                        <div id="List_COMPANY_NAME" class="col-sm-12 col-md-4" style="display:none">
                            <label>Company Name</label>
                            <div class="i-fg-data-entry">
                                @(Html.Kendo().DropDownList()
                                                                                                                                                           .Name("ddlCompanyName")
                                                                                                                                                           .Filter("contains")
                                                                                                                                                           .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                           .OptionLabel("ALL")
                                                                                                                                                           .DataTextField("COMPANY_NAME")
                                                                                                                                                           .DataValueField("COMPANY_NAME")
                                                                                                                                                           .DataSource(source =>
                                                                                                                                                          {
                                                                                                                                                              source.Read(read =>
                                                                                                                                                              {
                                                                                                                                                                  read.Action("GetCOMPANYNAME", "ConfigurationCostInstallation");

                                                                                                                                                              });

                                                                                                                                                          }).SelectedIndex(0)
                                        //           .Events(e => e.Change("FAPOChangeDropDown"))
                                )
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-sm-12 col-md-4">
                            <label>@L_EXPIRE_DATE FROM</label>
                            <div class="i-fg-data-entry">

                                @(Html.Kendo().DatePicker().Name("dtpEXPDateFrom")
                                                                                                                                                            .HtmlAttributes(new { @class = "form-control i-form-control-extend validate" })
                                                                                                                                                                      .Format("dd/MM/yyyy")
                                                                                                                                                                              .Min(new DateTime(1900, 1, 1))
                                                                                                                                                                              .Max(new DateTime(2099, 12, 31))
                                                                                                                                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                                                                                                                                   .Events(e => e.Change("onChangedtpEXPDateFrom"))
                                )
                            </div>
                            <div id="validate-dtpEXPDateFrom" class="i-fg-data-entry-validation"></div>
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>TO</label>
                            <div class="i-fg-data-entry">

                                @(Html.Kendo().DatePicker().Name("dtpEXPDateTo")
                                                                                                                                                                    .HtmlAttributes(new { @class = "form-control i-form-control-extend validate" })
                                                                                                                                                                      .Format("dd/MM/yyyy")
                                                                                                                                                                              .Min(new DateTime(1900, 1, 1))
                                                                                                                                                                              .Max(new DateTime(2099, 12, 31))
                                                                                                                                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                                                                                                                                            .Events(e => e.Change("onChangedtpEXPDateTo"))
                                )
                            </div>
                            <div id="validate-dtpEXPDateTo" class="i-fg-data-entry-validation"></div>
                        </div>
                        @*<div class="col-sm-12 col-md-4">
                                <label>ExportAll</label>
                                <div class="i-fg-data-entry">


                                </div>

                            </div>*@
                    </div>
                    <div class="row">
                        <br />
                    </div>
                    <div class="row">
                        <div class="col-sm-12 col-md-4"></div>
                        <div class="col-sm-12 col-md-4"></div>
                        <div class="col-sm-12 col-md-4 i-text-align-right">

                            <a class="btn btn-default" onclick="_Clear();"><i class="fa fa-ban fa-lg"></i>&nbsp;&nbsp;@B_CLEAR</a>
                            <a class="btn btn-info" onclick="_Search();"><i class="fa fa-search fa-lg"></i>&nbsp;&nbsp;@B_SEARCH</a>
                            @*<a class="btn btn-info" onclick="_ExportAll();"><i class="fa fa-file-excel-o"></i>&nbsp;&nbsp;Export All</a>*@

                        </div>
                    </div>
                    <div class="row">

                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>@L_RESULT_PANEL</span>
                    <a data-toggle="collapse" class="pull-right" href="#ResultPanel1" onclick="onPanelToggle(this);" id="ResultPanelHeader1"><i class="fa fa-chevron-circle-down fa-lg" id="ResultPanelHeaderArrow1"></i></a>
                </h3>
            </div>
            <div id="ResultPanel1" class="panel-collapse collapse in">
                <div class="panel-body">
                    <div class="row">
                        <div id="SearchTable1">
                            <div class="col-sm-12 col-md-12 ">
                                <div id="gridresult" class="row">
                                    @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.CostInstallationtable1>()
                                                                                                                                                                        .Name("gridCostTable1")
                                                                                                                                                                .Columns(columns =>
                                                                                                                                                                {


                                                                                                                                                                    columns.Bound(p => p.RULEID).Title("RULE ID").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.RULE_NAME).Title("RULE NAME").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.ORDER_TYPE).Title("ORDER TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.SUBCONTRACT_TYPE).Title("SUBCONTRACT TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(180);
                                                                                                                                                                    columns.Bound(p => p.SUBCONTRACT_SUB_TYPE).Title("SUBCONTRACT SUB TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                                                                                                                                                                    columns.Bound(p => p.VENDOR_CODE).Title("VENDOR CODE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.TECHNOLOGY).Title("TECHNOLOGY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.TOTAL_PRICE).Title("TOTAL PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.EFFECTIVE_DATE_TEXT).Title("EFFECTIVE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(180).Format("{0:dd/MM/yyyy}"); ;
                                                                                                                                                                    columns.Bound(p => p.EXPIRE_DATE_TEXT).Title("EXPIRE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(180).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_DATE_TEXT).Title("CREATE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(130).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_BY).Title("CREATE BY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.UPDATED_DATE_TEXT).Title("UPDATED DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(130).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.UPDATED_BY).Title("UPDATED BY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Command(command =>
                                                                                                                                                                    {
                                                                                                                                                                        command.Custom(@B_EDIT).Click("EditInstallCost").Text("<i class='fa fa-pencil-square-o fa-lg'></i>");
                                                                                                                                                                        command.Custom(@B_DELETE).Click("modalConfirmDeleteShow").Text("<i class='fa fa-times-circle fa-lg'></i>");
                                                                                                                                                                    }).Title("ACTION").HtmlAttributes(new { style = "text-align:center;" }).Width(170);
                                                                                                                                                                })

                                                                                                                                                                            .ToolBar(toolbar => toolbar.Template("" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='AddnewData();' id='addnew' class='btn btn-default'><i class='fa fa-plus-circle fa-lg'></i>&nbsp;" + @B_NEW +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                                    "<a onclick='ExportExcel()' id='btnExport'class='btn btn-default' disabled='disabled'><i class='fa fa-reply fa-lg'></i>&nbsp; " + @B_EXPORT +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                                    "<a onclick='_ExportAll()' id='btnExportAllt1'class='btn btn-default'><i class='fa fa-file-excel-o'></i>&nbsp; " + @B_EXPORTALL +
                                                                                                                                                            "</a>&nbsp;</div>"
                                                                                                                                                            ))
                                                                                                                                                                    .Scrollable(scrollable => scrollable.Height("auto"))

                                                                                                                                                                     .Sortable()



                                                                                                                                                                    .Resizable(resize => resize.Columns(true))
                                                                                                                                                                    .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                                                                                                                                    .AutoBind(false)
                                                                                                                                                                    .DataSource(dataSource => dataSource
                                                                                                                                                                        .Ajax()

                                                                                                                                                                        .PageSize(20)
                                                                                                                                                                                      .Read(read => read.Action("getCostInstallationDataTable", "ConfigurationCostInstallation").Data("bindingValue"))
                                                                                                                                                                        )
                                                                                                                                                                    .Events(e => e.DataBound("onGridDataBound"))
                                    )
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="SearchTable2">
                            <div class="col-sm-12 col-md-12 ">
                                <div id="gridresult2">
                                    @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.CostInstallationtable2>()
                                                                                                                                                                        .Name("gridCostTable2")
                                                                                                                                                                .Columns(columns =>
                                                                                                                                                                {


                                                                                                                                                                    columns.Bound(p => p.RULEID).Title("RULE ID").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.RULE_NAME).Title("RULE NAME").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.ORDER_TYPE).Title("ORDER TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.SUBCONTRACT_TYPE).Title("SUBCONTRACT TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(180);
                                                                                                                                                                    columns.Bound(p => p.TECHNOLOGY).Title("TECHNOLOGY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.INTERNET_PRICE).Title("INTERNET PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);
                                                                                                                                                                    columns.Bound(p => p.VOIP_PRICE).Title("VOIP PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);
                                                                                                                                                                    columns.Bound(p => p.PLAYBOX_PRICE).Title("PLAYBOX PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);



                                                                                                                                                                    columns.Bound(p => p.ADDRESS_ID).Title("ADDRESS ID").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.MESH_PRICE).Title("MESH PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.EVENT_TYPE).Title("EVENT TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);

                                                                                                                                                                    columns.Bound(p => p.EFFECTIVE_DATE_TEXT).Title("EFFECTIVE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}"); ;
                                                                                                                                                                    columns.Bound(p => p.EXPIRE_DATE_TEXT).Title("EXPIRE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_DATE_TEXT).Title("CREATE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(130).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_BY).Title("CREATE BY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.UPDATED_DATE_TEXT).Title("UPDATED DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(130).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.UPDATED_BY).Title("UPDATED BY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.SAME_DAY).Title("SAME DAY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);

                                                                                                                                                                    columns.Command(command =>
                                                                                                                                                                    {
                                                                                                                                                                        command.Custom(@B_EDIT).Click("EditInstallCost").Text("<i class='fa fa-pencil-square-o fa-lg'></i>");
                                                                                                                                                                        command.Custom(@B_DELETE).Click("modalConfirmDeleteShow").Text("<i class='fa fa-times-circle fa-lg'></i>");
                                                                                                                                                                    }).Title("ACTION").HtmlAttributes(new { style = "text-align:center;" }).Width(160);

                                                                                                                                                                })
                                                                                                                                                                            .ToolBar(toolbar => toolbar.Template("" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='AddnewData();' id='addnew' class='btn btn-default'><i class='fa fa-plus-circle fa-lg'></i>&nbsp;" + @B_NEW +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='ExportExcel()' id='btnExportt2'class='btn btn-default' disabled='disabled'><i class='fa fa-reply fa-lg'></i>&nbsp; " + @B_EXPORT +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                             "<div class='pull-right'>" +
                                                                                                                                                                    "<a onclick='_ExportAll()' id='btnExportAllt2'class='btn btn-default'><i class='fa fa-file-excel-o'></i>&nbsp; " + @B_EXPORTALL +
                                                                                                                                                            "</a>&nbsp;</div>"
                                                                                                                                                            ))
                                                                                                                                                                    .Scrollable(scrollable => scrollable.Height("auto"))
                                                                                                                                                                    .Sortable()
                                                                                                                                                                    .Resizable(resize => resize.Columns(true))
                                                                                                                                                                    .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                                                                                                                                    .AutoBind(false)
                                                                                                                                                                    .DataSource(dataSource => dataSource
                                                                                                                                                                        .Ajax()
                                                                                                                                                                        .PageSize(20)
                                                                                                                                                                                      .Read(read => read.Action("getCostInstallationDataTable", "ConfigurationCostInstallation").Data("bindingValue"))
                                                                                                                                                                        )
                                                                                                                                                                    .Events(e => e.DataBound("onGridDataBound"))
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="SearchTable3">
                            <div class="col-sm-12 col-md-12 ">
                                <div id="gridresult3">
                                    @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.CostInstallationtable3>()
                                                                                                                                                                        .Name("gridCostTable3")
                                                                                                                                                                .Columns(columns =>
                                                                                                                                                                {


                                                                                                                                                                    columns.Bound(p => p.RULEID).Title("RULE ID").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.RULE_NAME).Title("RULE NAME").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.ORDER_TYPE).Title("ORDER TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.SUBCONTRACT_TYPE).Title("SUBCONTRACT TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(180);
                                                                                                                                                                    columns.Bound(p => p.TECHNOLOGY).Title("TECHNOLOGY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.EVENT_CODE).Title("EVENT CODE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.ROOM_FLAG).Title("ROOM FLAG").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.SAME_DAY).Title("SAME DAY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);


                                                                                                                                                                    columns.Bound(p => p.INTERNET_PRICE).Title("INTERNET PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);
                                                                                                                                                                    columns.Bound(p => p.VOIP_PRICE).Title("VOIP PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);
                                                                                                                                                                    columns.Bound(p => p.PLAYBOX_PRICE).Title("PLAYBOX PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);

                                                                                                                                                                    columns.Bound(p => p.MESH_PRICE).Title("MESH PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);

                                                                                                                                                                    columns.Bound(p => p.EFFECTIVE_DATE_TEXT).Title("EFFECTIVE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}"); ;
                                                                                                                                                                    columns.Bound(p => p.EXPIRE_DATE_TEXT).Title("EXPIRE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_DATE_TEXT).Title("CREATE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(130).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_BY).Title("CREATE BY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.UPDATED_DATE_TEXT).Title("UPDATED DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(130).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.UPDATED_BY).Title("UPDATED BY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Command(command =>
                                                                                                                                                                    {
                                                                                                                                                                        command.Custom(@B_EDIT).Click("EditInstallCost").Text("<i class='fa fa-pencil-square-o fa-lg'></i>");
                                                                                                                                                                        command.Custom(@B_DELETE).Click("modalConfirmDeleteShow").Text("<i class='fa fa-times-circle fa-lg'></i>");
                                                                                                                                                                    }).Title("ACTION").HtmlAttributes(new { style = "text-align:center;" }).Width(160);

                                                                                                                                                                })
                                                                                                                                                                            .ToolBar(toolbar => toolbar.Template("" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='AddnewData();' id='addnew' class='btn btn-default'><i class='fa fa-plus-circle fa-lg'></i>&nbsp;" + @B_NEW +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='ExportExcel()' id='btnExportt3'class='btn btn-default' disabled='disabled'><i class='fa fa-reply fa-lg'></i>&nbsp; " + @B_EXPORT +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                             "<div class='pull-right'>" +
                                                                                                                                                                    "<a onclick='_ExportAll()' id='btnExportAllt3'class='btn btn-default'><i class='fa fa-file-excel-o'></i>&nbsp; " + @B_EXPORTALL +
                                                                                                                                                            "</a>&nbsp;</div>"
                                                                                                                                                            ))
                                                                                                                                                                    .Scrollable(scrollable => scrollable.Height("auto"))
                                                                                                                                                                    .Sortable()
                                                                                                                                                                    .Resizable(resize => resize.Columns(true))
                                                                                                                                                                    .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                                                                                                                                    .AutoBind(false)
                                                                                                                                                                    .DataSource(dataSource => dataSource
                                                                                                                                                                        .Ajax()
                                                                                                                                                                        .PageSize(20)
                                                                                                                                                                                      .Read(read => read.Action("getCostInstallationDataTable", "ConfigurationCostInstallation").Data("bindingValue"))
                                                                                                                                                                        )
                                                                                                                                                                    .Events(e => e.DataBound("onGridDataBound"))
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="SearchTable4">
                            <div class="col-sm-12 col-md-12">
                                <div id="gridresult4">

                                    @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.CostInstallationtable4>()
                                                                                                                                                                        .Name("gridCostTable4")
                                                                                                                                                                .Columns(columns =>
                                                                                                                                                                {


                                                                                                                                                                    columns.Bound(p => p.RULEID).Title("RULE ID").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.RULE_NAME).Title("RULE NAME").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.SUBCONTRACT_TYPE).Title("SUBCONTRACT TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(180);
                                                                                                                                                                    columns.Bound(p => p.SUBCONTRACT_LOCATION).Title("LOCATION CODE").HtmlAttributes(new { style = "text-align:left;" }).Width(180);
                                                                                                                                                                                        //Wait User confirm UAT
                                                                                                                                                                                        //columns.Bound(p => p.COMPANY_NAME).Title("COMPANY NAME").HtmlAttributes(new { style = "text-align:left;" }).Width(300);
                                                                                                                                                                                        columns.Bound(p => p.TECHNOLOGY).Title("TECHNOLOGY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                                        //R21.2 เพิ่ม ORDER_TYPE Table4
                                                                                                                                                                                        columns.Bound(p => p.ORDER_TYPE).Title("ORDER_TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);

                                                                                                                                                                    columns.Bound(p => p.REUSE_FLAG).Title("REUSE FLAG").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.DISTANCE_FROM).Title("DISTANCE FROM").HtmlAttributes(new { style = "text-align:left;" }).Width(160);
                                                                                                                                                                    columns.Bound(p => p.DISTANCE_TO).Title("DISTANCE TO").HtmlAttributes(new { style = "text-align:left;" }).Width(160);
                                                                                                                                                                    columns.Bound(p => p.INDOOR_PRICE).Title("INDOOR PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);
                                                                                                                                                                    columns.Bound(p => p.OUTDOOR_PRICE).Title("OUTDOOR PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);
                                                                                                                                                                    columns.Bound(p => p.TOTAL_PRICE).Title("TOTAL PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(160);

                                                                                                                                                                    columns.Bound(p => p.EFFECTIVE_DATE_TEXT).Title("EFFECTIVE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}"); ;
                                                                                                                                                                    columns.Bound(p => p.EXPIRE_DATE_TEXT).Title("EXPIRE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_DATE_TEXT).Title("CREATE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(130).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_BY).Title("CREATE BY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.UPDATED_DATE_TEXT).Title("UPDATED DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(130).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.UPDATED_BY).Title("UPDATED BY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Command(command =>
                                                                                                                                                                    {
                                                                                                                                                                        command.Custom(@B_EDIT).Click("EditInstallCost").Text("<i class='fa fa-pencil-square-o fa-lg'></i>");
                                                                                                                                                                        command.Custom(@B_DELETE).Click("modalConfirmDeleteShow").Text("<i class='fa fa-times-circle fa-lg'></i>");
                                                                                                                                                                    }).Title("ACTION").HtmlAttributes(new { style = "text-align:center;" }).Width(160);

                                                                                                                                                                })
                                                                                                                                                                            .ToolBar(toolbar => toolbar.Template("" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='AddnewData();' id='addnew' class='btn btn-default'><i class='fa fa-plus-circle fa-lg'></i>&nbsp;" + @B_NEW +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='ExportExcel()' id='btnExportt4'class='btn btn-default' disabled='disabled'><i class='fa fa-reply fa-lg'></i>&nbsp; " + @B_EXPORT +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                             "<div class='pull-right'>" +
                                                                                                                                                                    "<a onclick='_ExportAll()' id='btnExportAllt4'class='btn btn-default'><i class='fa fa-file-excel-o'></i>&nbsp; " + @B_EXPORTALL +
                                                                                                                                                            "</a>&nbsp;</div>"
                                                                                                                                                            ))
                                                                                                                                                                    .Scrollable(scrollable => scrollable.Height("auto"))
                                                                                                                                                                       .Sortable()
                                                                                                                                                                    .Resizable(resize => resize.Columns(true))
                                                                                                                                                                    .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                                                                                                                                    .AutoBind(false)
                                                                                                                                                                    .DataSource(dataSource => dataSource
                                                                                                                                                                        .Ajax()
                                                                                                                                                                        .PageSize(20)
                                                                                                                                                                                      .Read(read => read.Action("getCostInstallationDataTable", "ConfigurationCostInstallation").Data("bindingValue"))
                                                                                                                                                                        )
                                                                                                                                                                    .Events(e => e.DataBound("onGridDataBound"))
                                    )


                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="SearchTable5">
                            <div class="col-sm-12 col-md-12 ">
                                <div id="gridresult5">
                                    @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.CostInstallationtable5>()
                                                                                                                                                                        .Name("gridCostTable5")
                                                                                                                                                                .Columns(columns =>
                                                                                                                                                                {


                                                                                                                                                                    columns.Bound(p => p.RULEID).Title("RULE ID").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.RULE_NAME).Title("RULE NAME").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.ORDER_TYPE).Title("ORDER TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.SUBCONTRACT_TYPE).Title("SUBCONTRACT TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(180);
                                                                                                                                                                    columns.Bound(p => p.SUBCONTRACT_SUB_TYPE).Title("SUBCONTRACT SUB TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                                                                                                                                                                    columns.Bound(p => p.TECHNOLOGY).Title("TECHNOLOGY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.REUSE_FLAG).Title("REUSE FLAG").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                    columns.Bound(p => p.TOTAL_PRICE).Title("TOTAL PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(130);

                                                                                                                                                                    columns.Bound(p => p.EFFECTIVE_DATE_TEXT).Title("EFFECTIVE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}"); ;
                                                                                                                                                                    columns.Bound(p => p.EXPIRE_DATE_TEXT).Title("EXPIRE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_DATE_TEXT).Title("CREATE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_BY).Title("CREATE BY").HtmlAttributes(new { style = "text-align:left;" }).Width(160);
                                                                                                                                                                    columns.Bound(p => p.UPDATED_DATE_TEXT).Title("UPDATED DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(160).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.UPDATED_BY).Title("UPDATED BY").HtmlAttributes(new { style = "text-align:left;" }).Width(130);
                                                                                                                                                                                        //  columns.Bound(p => p.SUBCONTRACT_LOCATION).Title("Subcontract Location").HtmlAttributes(new { style = "text-align:left;" }).Width(130);

                                                                                                                                                                                        columns.Command(command =>
                                                                                                                                                                    {
                                                                                                                                                                        command.Custom(@B_EDIT).Click("EditInstallCost").Text("<i class='fa fa-pencil-square-o fa-lg'></i>");
                                                                                                                                                                        command.Custom(@B_DELETE).Click("modalConfirmDeleteShow").Text("<i class='fa fa-times-circle fa-lg'></i>");
                                                                                                                                                                    }).Title("ACTION").HtmlAttributes(new { style = "text-align:center;" }).Width(160);

                                                                                                                                                                })
                                                                                                                                                                            .ToolBar(toolbar => toolbar.Template("" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='AddnewData();' id='addnew' class='btn btn-default'><i class='fa fa-plus-circle fa-lg'></i>&nbsp;" + @B_NEW +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='ExportExcel()' id='btnExportt5'class='btn btn-default' disabled='disabled'><i class='fa fa-reply fa-lg'></i>&nbsp; " + @B_EXPORT +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                             "<div class='pull-right'>" +
                                                                                                                                                                    "<a onclick='_ExportAll()' id='btnExportAllt5'class='btn btn-default'><i class='fa fa-file-excel-o'></i>&nbsp; " + @B_EXPORTALL +
                                                                                                                                                            "</a>&nbsp;</div>"
                                                                                                                                                            ))
                                                                                                                                                                    .Scrollable(scrollable => scrollable.Height("auto"))
                                                                                                                                                                    .Sortable()
                                                                                                                                                                    .Resizable(resize => resize.Columns(true))
                                                                                                                                                                    .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                                                                                                                                    .AutoBind(false)
                                                                                                                                                                    .DataSource(dataSource => dataSource
                                                                                                                                                                        .Ajax()
                                                                                                                                                                        .PageSize(20)
                                                                                                                                                                                      .Read(read => read.Action("getCostInstallationDataTable", "ConfigurationCostInstallation").Data("bindingValue"))
                                                                                                                                                                        )
                                                                                                                                                                    .Events(e => e.DataBound("onGridDataBound"))
                                    )



                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="SearchTable6">
                            <div class="col-sm-12 col-md-12 ">
                                <div id="gridresult6">
                                    @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.CostInstallationtable6>()
                                                                                                                                                                        .Name("gridCostTable6")
                                                                                                                                                                .Columns(columns =>
                                                                                                                                                                {


                                                                                                                                                                    columns.Bound(p => p.RULEID).Title("RULE ID").HtmlAttributes(new { style = "text-align:left;" }).Width(120);
                                                                                                                                                                    columns.Bound(p => p.RULE_NAME).Title("RULE NAME").HtmlAttributes(new { style = "text-align:left;" }).Width(120);
                                                                                                                                                                    columns.Bound(p => p.ORDER_TYPE).Title("ORDER TYPE").HtmlAttributes(new { style = "text-align:left;" }).Width(120);
                                                                                                                                                                    columns.Bound(p => p.TECHNOLOGY).Title("TECHNOLOGY").HtmlAttributes(new { style = "text-align:left;" }).Width(120);
                                                                                                                                                                    columns.Bound(p => p.TOTAL_PRICE).Title("TOTAL PRICE").HtmlAttributes(new { style = "text-align:left;" }).Width(120);
                                                                                                                                                                    columns.Bound(p => p.EFFECTIVE_DATE_TEXT).Title("EFFECTIVE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(150).Format("{0:dd/MM/yyyy}"); ;
                                                                                                                                                                    columns.Bound(p => p.EXPIRE_DATE_TEXT).Title("EXPIRE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(150).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_DATE_TEXT).Title("CREATE DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(120).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.CREATE_BY).Title("CREATE BY").HtmlAttributes(new { style = "text-align:left;" }).Width(120);
                                                                                                                                                                    columns.Bound(p => p.UPDATED_DATE_TEXT).Title("UPDATED DATE").HtmlAttributes(new { style = "text-align:left;" }).Width(120).Format("{0:dd/MM/yyyy}");
                                                                                                                                                                    columns.Bound(p => p.UPDATED_BY).Title("UPDATED BY").HtmlAttributes(new { style = "text-align:left;" }).Width(120);
                                                                                                                                                                    columns.Command(command =>
                                                                                                                                                                    {
                                                                                                                                                                        command.Custom(@B_EDIT).Click("EditInstallCost").Text("<i class='fa fa-pencil-square-o fa-lg'></i>");
                                                                                                                                                                        command.Custom(@B_DELETE).Click("modalConfirmDeleteShow").Text("<i class='fa fa-times-circle fa-lg'></i>");
                                                                                                                                                                    }).Title("ACTION").HtmlAttributes(new { style = "text-align:center;" }).Width(160);

                                                                                                                                                                })
                                                                                                                                                                            .ToolBar(toolbar => toolbar.Template("" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='AddnewData();' id='addnew' class='btn btn-default'><i class='fa fa-plus-circle fa-lg'></i>&nbsp;" + @B_NEW +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                            "<div class='pull-right'>" +
                                                                                                                                                            "<a onclick='ExportExcel()' id='btnExportt6'class='btn btn-default' disabled='disabled'><i class='fa fa-reply fa-lg'></i>&nbsp; " + @B_EXPORT +
                                                                                                                                                            "</a>&nbsp;</div>" +
                                                                                                                                                             "<div class='pull-right'>" +
                                                                                                                                                                    "<a onclick='_ExportAll()' id='btnExportAllt6'class='btn btn-default'><i class='fa fa-file-excel-o'></i>&nbsp; " + @B_EXPORTALL +
                                                                                                                                                            "</a>&nbsp;</div>"
                                                                                                                                                            ))
                                                                                                                                                                    .Scrollable(scrollable => scrollable.Height("auto"))
                                                                                                                                                                    .Sortable()
                                                                                                                                                                    .Resizable(resize => resize.Columns(true))
                                                                                                                                                                    .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                                                                                                                                    .AutoBind(false)
                                                                                                                                                                    .DataSource(dataSource => dataSource
                                                                                                                                                                        .Ajax()
                                                                                                                                                                        .PageSize(20)
                                                                                                                                                                                      .Read(read => read.Action("getCostInstallationDataTable", "ConfigurationCostInstallation").Data("bindingValue"))
                                                                                                                                                                        )
                                                                                                                                                                    .Events(e => e.DataBound("onGridDataBound"))
                                    )



                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="_tableselect" />
<input type="hidden" id="_ruleselect" />
<input type="hidden" id="_saveType" />
<input type="hidden" id="_efdate" />
<input type="hidden" id="_exdate" />
@(Html.Kendo().Window()
                                                                .Name("ConfigCostInsPopup")
                                                                //.Title(@NAME_TITLE)
                                                                .Width(800)
                                                                .Draggable()
                                                                .Visible(false)
                                                                .Modal(true)
                                                                .Events(e => e.Close("_clearPopupData"))
                                                                .Content(
                                                                @<text>

                                                                    <div class="i-no-over" id="AddPopupPanel">
                                                                        <div class="panel-body">
                                                                            <div class="row">
                                                                                <div id="RULE_ID" class="col-sm-3">
                                                                                    <label>@E_RULE_ID</label><br />

                                                                                    <input type="text" id="_RULDID" disabled="disabled" class="k-textbox form-control" />
                                                                                </div>
                                                                                <div class="col-sm-3">
                                                                                    <label>@E_RULE_NAME</label><br />

                                                                                    <input type="text" id="_RULE_NAME" class="k-textbox form-control" />
                                                                                </div>
                                                                            </div>
                                                                            <br />
                                                                            <div class="row">
                                                                                <div id="e_ORDER_TYPE" class="col-sm-3">
                                                                                    <label>@E_ORDER_TYPE</label><br />

                                                                                    @(Html.Kendo().DropDownList()
                                                                                                                                                                                                                 .Name("_ORDER_TYPE")
                                                                                                                                                                                                                       .Filter("contains")
                                                                                                                                                                                                                       .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                                                                                       .DataTextField("DISPLAY_VAL")
                                                                                                                                                                                                                       .DataValueField("LOV_VAL1")
                                                                                                                                                                                                                       .DataSource(source =>
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                  source.Read(read =>
                                                                          {
                                                                                                                  read.Action("SelectListOrderType", "ConfigurationCostInstallation");

                                                                                                              });

                                                                                                                                                                                                                                              }).SelectedIndex(0)
                                                                                                                                                                                                                     .Events(e => e.Change("onChangeORDTYPE"))
                                                                                    )


                                                                                </div>
                                                                                <div id="e_SUBCONTRACT_TYPE" class="col-sm-3">

                                                                                    <label>@E_SUBCONTRACT_TYPE</label>&nbsp;&nbsp;&nbsp;&nbsp;<a onclick="onAddSUBCONTYPE()" id="btnaddsubtype"><i class="fa fa-plus-square"></i></a>
                                                                                    <br />
                                                                                    @(Html.Kendo().DropDownList()
                                                                                                                                                                                                                      .Name("_SUBCONTYPE")
                                                                                                                                                                                                                      .Filter("contains")
                                                                                                                                                                                                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                                                                                      .DataTextField("DISPLAY_VAL")
                                                                                                                                                                                                                      .DataValueField("LOV_VAL1")

                                                                                                                                                                                                                      .DataSource(source =>
                                                                                                                                                                                                                     {
                                                                                                                                                                                                                                                 source.Read(read =>
                                                                         {
                                                                                                                 read.Action("GetSUBCONTRACTTYPE", "ConfigurationCostInstallation");

                                                                                                             });


                                                                                                                                                                                                                                             }).SelectedIndex(0)
                                                                                            // .Events(e => e.DataBound("onSUBCONTYPEBinding"))
                                                                                            //      Events(e => e.Change("FAPOChangeDropDown"))
                                                                                    )


                                                                                </div>
                                                                                <div id="e_SUBCONTRACT_SUB_TYPE" class="col-sm-3">
                                                                                    <label>@E_SUBCONTRACT_SUB_TYPE</label>&nbsp;&nbsp;&nbsp;&nbsp;<a onclick="onAddSUBCONSUBTYPE()" id="btnaddsubsubtype"><i class="fa fa-plus-square"></i></a>

                                                                                    @*@(Html.Kendo().MultiSelect()
                                                                                                   .Name("_SUBCONSUBTYPE")
                                                                                                          .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                   .Placeholder("SELECT ALL")
                                                                                                  .DataTextField("DISPLAY_VAL")
                                                                                                  .DataValueField("LOV_VAL1")
                                                                                                  .DataSource(source =>
                                                                                                  {
                                                                                                      source.Read(read =>
                                                                                                      {
                                                                                                          read.Action("GetSUBCONTRACTSUBTYPE", "ConfigurationCostInstallation");
                                                                                                      });


                                                                                                  })
                                                                                                      //    .Events(e => e.Change("onChangesubsubType"))


                                                                                        )*@
                                                                                    <br />
                                                                                    @(Html.Kendo().MultiSelect()
                                                                                                                                                                                                                  .Name("_SUBCONSUBTYPE")
                                                                                                                                                                                                                  .Placeholder("SELECT ALL")
                                                                                                                                                                                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                                                                                  .DataTextField("DISPLAY_VAL")
                                                                                                                                                                                                                  .DataValueField("LOV_VAL1")
                                                                                                                                                                                                                  .DataSource(source =>
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                              source.Read(read =>
                                                                      {
                                                                                                              read.Action("GetSUBCONTRACTSUBTYPE", "ConfigurationCostInstallation");
                                                                                                          });
                                                                                                                                                                                                                                          })
                                                                                                                                                                                                                                 .Events(e => e.Change("onChangesubsubType"))
                                                                                    )

                                                                                </div>
                                                                            </div>
                                                                            <br />
                                                                            <div class="row">
                                                                                <div id="e_TECHNOLOGY" class="col-sm-3">
                                                                                    <label>@E_TECHNOLOGY</label><br />
                                                                                    @(Html.Kendo().DropDownList()
                                                                                                                                                                                                                         .Name("_TECHNOLOGY")
                                                                                                                                                                                                                       .Filter("contains")
                                                                                                                                                                                                                       .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                                                                                       .DataTextField("DISPLAY_VAL")
                                                                                                                                                                                                                       .DataValueField("LOV_VAL1")
                                                                                                                                                                                                                       .DataSource(source =>
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                  source.Read(read =>
                                                                          {
                                                                                                                  read.Action("SelectListTechnology", "ConfigurationCostInstallation");

                                                                                                              });

                                                                                                                                                                                                                                              }).SelectedIndex(0)
                                                                                            //           .Events(e => e.Change("FAPOChangeDropDown"))
                                                                                    )
                                                                                </div>

                                                                                <div id="e_EFFECTIVE_DATE" class="col-sm-3">
                                                                                    <label>@E_EFFECTIVE_DATE</label><br />
                                                                                    <div id="validate-_EFFDATE" class="i-fg-data-entry-validation"></div>
                                                                                    @(Html.Kendo().DatePicker().Name("_EFFDATE")
                                                                                                                                                                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend validate" })
                                                                                                                                                                                                        .Format("dd/MM/yyyy")
                                                                                                                                                                                                        .Min(new DateTime(1900, 1, 1))
                                                                                                                                                                                                        .Max(new DateTime(2099, 12, 31))
                                                                                                                                                                                                        .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                                                                                                                                                                        .Events(e => e.Change("onChangeEFFDATE"))
                                                                                    )


                                                                                </div>

                                                                                <div id="e_EXPIRE_DATE" class="col-sm-3">
                                                                                    <label>@E_EXPIRE_DATE</label><br />
                                                                                    @(Html.Kendo().DatePicker().Name("_EXPDATE")
                                                                                                                                                                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend validate" })
                                                                                                                                                                                                        .Format("dd/MM/yyyy")
                                                                                                                                                                                                        .Min(new DateTime(1900, 1, 1))
                                                                                                                                                                                                        .Max(new DateTime(2099, 12, 31))
                                                                                                                                                                                                        .ParseFormats(new List<string> { "dd/MM/yyyy" })

                                                                                            //  .Events(e => e.Change("onChangeEXPDate"))
                                                                                    )
                                                                                </div>
                                                                            </div>
                                                                            <br />
                                                                            <div class="row">

                                                                                <div id="e_TOTAL_PRICE" class="col-sm-3">
                                                                                    <label>@E_TOTAL_PRICE</label><br />
                                                                                    <input type="text" id="_TOTAL_PRICE" class="k-textbox form-control floatnumber" />
                                                                                </div>
                                                                                <div id="e_VENDOR_CODE" class="col-sm-3">
                                                                                    <label>@E_VENDOR_CODE</label><br />

                                                                                    @*@(Html.Kendo().DropDownList()
                                                                                                  .Name("_VENDORCODEs")
                                                                                                  .OptionLabel("SELECT ALL")

                                                                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                  .DataTextField("SUB_CONTRACTOR_CODE")
                                                                                                  .DataValueField("SUB_CONTRACTOR_CODE")

                                                                                                  .Filter("contains")
                                                                                                  .DataSource(source =>
                                                                                                  {
                                                                                                      source.Read(read =>
                                                                                                      {
                                                                                                          read.Action("SelectVendorCode", "ConfigurationCostInstallation");
                                                                                                      }).ServerFiltering(true);
                                                                                                  })
                                                                                        )*@

                                                                                    @(Html.Kendo().AutoComplete()
                                                                                                                                                                                                                                              .Name("_VENDORCODE")
                                                                                                                                                                                                                                       .DataTextField("SUB_CONTRACTOR_CODE")

                                                                                                                                                                                                                              .Filter("contains")
                                                                                                                                                                                                                              //  .MinLength(1)

                                                                                                                                                                                                                              .HtmlAttributes(new { style = "width:100%" })
                                                                                                                                                                                                                              .DataSource(source =>
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                          source.Read(read =>
                                                                      {
                                                                                                              read.Action("SelectVendorCode", "ConfigurationCostInstallation")
.Data("onAdditionalData");
                                                                                                          })
                                                                      .ServerFiltering(true);
                                                                                                                                                                                                                                                      })
                                                                                    )

                                                                                </div>
                                                                                <div id="e_REUSE_FLAG" class="col-sm-3">
                                                                                    <label>@E_REUSE_FLAG</label><br />
                                                                                    @(Html.Kendo().DropDownList()
                                                                                                                                                                                                                               .Name("_REUSE_FLAG")
                                                                                                                                                                                                                               .Filter("contains")
                                                                                                                                                                                                                               .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                                                                                               .DataTextField("DISPLAY_VAL")
                                                                                                                                                                                                                               .DataValueField("LOV_VAL1")
                                                                                                                                                                                                                               .DataSource(source =>
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                          source.Read(read =>
                                                                      {
                                                                                                              read.Action("SelectListREUSEFLAG", "ConfigurationCostInstallation");

                                                                                                          });

                                                                                                                                                                                                                                                      }).SelectedIndex(0)
                                                                                            //           .Events(e => e.Change("FAPOChangeDropDown"))
                                                                                    )
                                                                                </div>
                                                                                <div id="e_SUBCONTRACT_LOCATION" class="tb4_TeamID col-sm-3">
                                                                                    <label>@E_SUBCONTRACT_LOCATION</label><br />
                                                                                    @*<input type="text" id="_SUBCONTRACT_LOCATION" class="k-textbox form-control floatnumber" />*@
                                                                                    <input type="text" id="_SUBCONTRACT_LOCATION" class="k-textbox form-control floatnumber" readonly />
                                                                                </div>
                                                                                <div id="e_SUBCONTRACT_LOCATION" class="tb4_TeamID col-sm-1">
                                                                                    <br />
                                                                                    <a onclick="onAddTeamID()" id="teamid" class="btn btn-primary" href="#" role="button"> <i class="fa fa-search fa-sm"></i> Search</a>
                                                                                </div>
                                                                            </div>
                                                                            <br />
                                                                            <div class="row">
                                                                                <div class="tb4_TeamID col-sm-6" style="width:425px;">
                                                                                    <label>COMPANY NAME</label><br />
                                                                                    <textarea rows="2" id="_COMPANY_NAME" class="k-textbox form-control floatnumber" style="overflow-y: scroll;" readonly></textarea>
                                                                                    @*<input type="text" id="_COMPANY_NAME" class="k-textbox form-control floatnumber" readonly/>*@
                                                                                </div>
                                                                            </div>
                                                                            <div class="row">
                                                                                <div id="e_MECH_PRICE" class="col-sm-3">
                                                                                    <label>@E_MECH_PRICE</label><br />
                                                                                    <input type="text" id="_MECH_PRICE" class="k-textbox form-control floatnumber" />
                                                                                </div>
                                                                                <div id="e_INTERNET_PRICE" class="col-sm-3">
                                                                                    <label>@E_INTERNET_PRICE</label><br />
                                                                                    <input type="text" id="_INTERNET_PRICE" class="k-textbox form-control floatnumber" />
                                                                                </div>

                                                                            </div>

                                                                            <br />
                                                                            <div class="row">
                                                                                <div id="e_SAME_DAY" class="col-sm-3">
                                                                                    <label>@E_SAME_DAY</label><br />
                                                                                    @(Html.Kendo().DropDownList()
                                                                                                                                                                                                    .Name("_SAME_DAY")
                                                                                                                                                                                                    .Filter("contains")
                                                                                                                                                                                                    .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                                                                    .DataTextField("DISPLAY_VAL")
                                                                                                                                                                                                    .DataValueField("LOV_VAL1")
                                                                                                                                                                                                    .DataSource(source =>
                                                                                                                                                                                                    {
                                                                                                                                                                                                                                source.Read(read =>
                                                        {
                                                                                                read.Action("SelectListSAMEDAY", "ConfigurationCostInstallation");

                                                                                            });

                                                                                                                                                                                                                            }).SelectedIndex(0)
                                                                                            //           .Events(e => e.Change("FAPOChangeDropDown"))
                                                                                    )
                                                                                </div>
                                                                                <div id="e_VOIP_PRICE" class="col-sm-3">
                                                                                    <label>@E_VOIP_PRICE</label><br />
                                                                                    <input type="text" id="_VOIP_PRICE" class="k-textbox form-control floatnumber" />
                                                                                </div>
                                                                                <div id="e_PLAYBOX_PRICE" class="col-sm-3">
                                                                                    <label>@E_PLAYBOX_PRICE</label><br />
                                                                                    <input type="text" id="_PLAYBOX_PRICE" class="k-textbox form-control floatnumber" />
                                                                                </div>

                                                                            </div>
                                                                            <br />
                                                                            <div class="row">
                                                                                <div id="e_ADDRESS_ID" class="col-sm-3">
                                                                                    <label>@E_ADDRESS_ID</label><br />
                                                                                    <div id="validate-_ADDRID" class="i-fg-data-entry-validation"></div>
                                                                                    <input type="text" id="_ADDRESS_ID" class="k-textbox form-control" maxlength="8" />
                                                                                </div>
                                                                                <div id="e_EVENT_TYPE" class="col-sm-3">
                                                                                    <label>@E_EVENT_TYPE</label><br />
                                                                                    <input type="text" id="_EVENT_TYPE" class="k-textbox form-control" />
                                                                                </div>
                                                                                <div id="e_ROOM_FLAG" class="col-sm-3">
                                                                                    <label>@E_ROOM_FLAG</label><br />
                                                                                    @(Html.Kendo().DropDownList()
                                                                                                                                                                                                                       .Name("_ROOM_FLAG")
                                                                                                                                                                                                                       .Filter("contains")
                                                                                                                                                                                                                       .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                                                                                       .DataTextField("DISPLAY_VAL")
                                                                                                                                                                                                                       .DataValueField("LOV_VAL1")
                                                                                                                                                                                                                       .DataSource(source =>
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                  source.Read(read =>
                                                                          {
                                                                                                                  read.Action("SelectListROOMFLAG", "ConfigurationCostInstallation");

                                                                                                              });

                                                                                                                                                                                                                                              }).SelectedIndex(0)
                                                                                            //           .Events(e => e.Change("FAPOChangeDropDown"))
                                                                                    )
                                                                                </div>
                                                                                <div id="e_EVENT_CODE" class="col-sm-3">
                                                                                    <label>@E_EVENT_CODE</label><br />
                                                                                    @(Html.Kendo().DropDownList()
                                                                                                                                                                                                                          .Name("_EVENT_CODE")
                                                                                                                                                                                                                       .Filter("contains")
                                                                                                                                                                                                                       .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                                                                                                                                                       .DataTextField("DISPLAY_VAL")
                                                                                                                                                                                                                       .DataValueField("LOV_VAL1")
                                                                                                                                                                                                                       .DataSource(source =>
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                  source.Read(read =>
                                                                          {
                                                                                                                  read.Action("SelectListEVENTCODE", "ConfigurationCostInstallation");

                                                                                                              });

                                                                                                                                                                                                                                              }).SelectedIndex(0)
                                                                                            //           .Events(e => e.Change("FAPOChangeDropDown"))
                                                                                    )
                                                                                </div>
                                                                            </div>
                                                                            <br />
                                                                            <div class="row">
                                                                                <div id="e_DISTANCE_FROM" class="col-sm-3">
                                                                                    <label>@E_DISTANCE_FROM</label><br />
                                                                                    <input type="text" id="_DISTANCE_FROM" class="k-textbox form-control floatnumber" />
                                                                                </div>
                                                                                <div id="e_DISTANCE_TO" class="col-sm-3">
                                                                                    <label>@E_DISTANCE_TO</label><br />
                                                                                    <input type="text" id="_DISTANCE_TO" class="k-textbox form-control floatnumber" />
                                                                                </div>
                                                                            </div>
                                                                            <br />
                                                                            <div class="row">
                                                                                <div id="e_INDOOR_PRICE" class="col-sm-3">
                                                                                    <label>@E_INDOOR_PRICE</label><br />
                                                                                    <input type="text" id="_INDOOR_PRICE" class="k-textbox form-control floatnumber" />
                                                                                </div>
                                                                                <div id="e_OUTDOOR_PRICE" class="col-sm-3">
                                                                                    <label>@E_OUTDOOR_PRICE</label><br />
                                                                                    <input type="text" id="_OUTDOOR_PRICE" class="k-textbox form-control floatnumber" />
                                                                                </div>

                                                                            </div>


                                                                            <br />
                                                                            @*</div>*@
                                                                            <div id="sysinput">
                                                                                <div class="col-sm-2">
                                                                                    <label>@E_CREATE_DATE</label>
                                                                                    <input type="text" id="_CREATE_DATE" disabled="disabled" class="k-textbox form-control" />
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    <label>@E_CREATE_BY</label>
                                                                                    <input type="text" id="_CREATE_BY" disabled="disabled" class="k-textbox form-control" />
                                                                                </div>

                                                                                <div class="col-sm-2">
                                                                                    <label>@E_UPDATE_DATE</label>
                                                                                    <input type="text" id="_UPDATE_DATE" disabled="disabled" class="k-textbox form-control" />
                                                                                </div>
                                                                                <div class="col-sm-2">
                                                                                    <label>@E_UPDATE_BY</label>
                                                                                    <input type="text" id="_UPDATE_BY" disabled="disabled" class="k-textbox form-control" />
                                                                                </div>

                                                                            </div>



                                                                            <div class="row">
                                                                                <div class="col-sm-3 col-md-3"></div>
                                                                                <div class="col-sm-5 col-md-5">
                                                                                    <div class="pull-right">
                                                                                        <a onclick="cancelPopup()" id="btnpop_cancel" class="btn btn-default"><i class="fa fa-power-off fa-lg"></i>&nbsp;@B_CANCEL</a>
                                                                                        <a onclick="ConfirmUpdate()" id="btnpop_save" class="btn btn-success"><i class="fa fa-check-circle fa-lg"></i>&nbsp;@B_SAVE</a>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>



                                                                    </div>
                                                                </text>))
@(Html.Kendo().Window()
                                                                   .Name("SUBCONTYPEPopup")
                                                                  .HtmlAttributes(new { @class = "i-gap-popup" })
                                                                  .Width(500)

                                                                  .Draggable()
                                                                  .Events(e => e.Close("_clearPopupData"))
                                                                  .Visible(false)
                                                                  .Modal(true)
                                                                  .Content(@<text>
                                                                    <div class="row">
                                                                        <div class="col-sm-5">
                                                                            <label id="_dname"></label>


                                                                        </div>
                                                                        <div class="col-sm-4">

                                                                            <input type="text" id="_exsubcontype" class="k-textbox form-control" />
                                                                            <div id="validate-_exsubcontype" class="i-fg-data-entry-validation"></div>
                                                                        </div>

                                                                    </div>
                                                                    <div class="row">
                                                                        <br />
                                                                        <input id="_addtype" type="hidden" />
                                                                    </div>
                                                                    <div class="row">
                                                                        <div class="col-sm-3">

                                                                        </div>
                                                                        <div class="col-sm-6">
                                                                            <div class="pull-right">
                                                                                <a onclick="ClearSubConType()" id="btnpop_cancel" class="btn btn-default"><i class="fa fa-power-off fa-lg"></i>&nbsp;@B_CANCEL</a>
                                                                                <a onclick="AddConfigDataType()" id="btnpop_save" class="btn btn-success"><i class="fa fa-check-circle fa-lg"></i>&nbsp;@B_SAVE</a>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </text>)
)
@(Html.Kendo().Window()
                                                                   .Name("TeamIDPopup")
                                                                  .HtmlAttributes(new { @class = "i-gap-popup" })
                                                                  .Width(1000)
                                                                  .Draggable()
                                                                  .Events(e => e.Close("_clearPopupData"))
                                                                  .Visible(false)
                                                                  .Modal(true)
                                                                  .Content(@<text>

                                                                    <div class="form-inline">
                                                                        <label>ค้นหา</label>&ensp;
                                                                        @*@(Html.Kendo().DropDownList()
                                                                                 .Name("_filter_search")
                                                                                       .Filter("contains")
                                                                                       .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                                       .DataTextField("subcontract_location")
                                                                                       .DataValueField("subcontract_location")
                                                                                       .DataSource(source =>
                                                                                      {
                                                                                          source.Read(read =>
                                                                                          {
                                                                                              read.Action("GetSUBCONTRACTLOCATION", "ConfigurationCostInstallation");

                                                                                          });

                                                                                      }).SelectedIndex(0)
                                                                                     .Events(e => e.Change("onChangeORDTYPE"))
                                                                            )*@
                                                                        @(Html.Kendo().DropDownList()
                                                                                                                                                                                                                         .Name("_filter_search")
                                                                                                                                                                                                                               .Filter("contains")
                                                                                                                                                                                                                               .HtmlAttributes(new { @class = "form-control i-form-control-extend", style = "width:300px" })
                                                                                                                                                                                                                               .BindTo(new List<SelectListItem>() {
                                                                                                                                                                                            new SelectListItem() {
                                                                                                                                                                                                Text = "Region",
                                                                                                                                                                                                Value = "Region"
                                                                                                                                                                                            },
                                                                                                                                                                                            new SelectListItem() {
                                                                                                                                                                                                Text = "Location Code",
                                                                                                                                                                                                Value = "Location Code"
                                                                                                                                                                                            },
                                                                                                                                                                                            new SelectListItem() {
                                                                                                                                                                                                Text = "Company Name",
                                                                                                                                                                                                Value = "Company Name"
                                                                                                                                                                                            },
                                                                                                                                                                                            new SelectListItem() {
                                                                                                                                                                                                Text = "Team Name",
                                                                                                                                                                                                Value = "Team Name"
                                                                                                                                                                                            },
                                                                                                                                                                                            new SelectListItem() {
                                                                                                                                                                                                Text = "Team ID",
                                                                                                                                                                                                Value = "Team ID"
                                                                                                                                                                                            }
                                                                                                                                                                                            //,
                                                                                                                                                                                            //new SelectListItem() {
                                                                                                                                                                                            //    Text = "Subcontract Type",
                                                                                                                                                                                            //    Value = "Subcontract Type"
                                                                                                                                                                                            //},
                                                                                                                                                                                            //new SelectListItem() {
                                                                                                                                                                                            //    Text = "Subcontract Sub Type",
                                                                                                                                                                                            //    Value = "Subcontract Sub Type"
                                                                                                                                                                                            //}
                                                                                                                                                                                                                               })
                                                                                                                                                                                                                               .SelectedIndex(0)
                                                                                                                                                                                                                             .Events(e => e.Change("onChangeORDTYPE"))
                                                                        )
                                                                        <input type="text" id="_searchPopup" class="k-textbox form-control" placeholder="Keyword.." style="width: 250px" />
                                                                        <button class="btn btn-primary" onclick="onClickSearchInPopup();"> <i class="fa fa-search fa-sm"></i> Search</button>


                                                                    </div>
                                                                    <br />
                                                                    <div id="gridteamid"></div>
                                                                    <hr />
                                                                    @*<div>
                                                                            <div class="col-lg-offset-5">
                                                                                <a onclick="ClearTeamID()" id="btnpop_cancel2" class="btn btn-default"><i class="fa fa-power-off fa-sm"></i>&nbsp;@B_CANCEL</a>
                                                                                <a onclick="AddConfigDataType()" id="btnpop_save2" class="btn btn-success"><i class="fa fa-check-circle fa-sm"></i>&nbsp;@B_SAVE</a>
                                                                            </div>
                                                                        </div>*@
                                                                </text>)
)
@(Html.Kendo().Window()
                                                                .Name("MyPopupLoading")
                                                                .HtmlAttributes(new { @class = "i-gap-popup" })
                                                                .Title(false)
                                                                .Modal(true)
                                                                .Visible(false)
                                                                .Content(
                                                                @<text>
                                                                    <div style="margin: 0 80px;"><font size="4">Loading &nbsp;<i class="fa fa-refresh fa-spin"></i></font></div>
                                                                </text>)
)
<div class="modal fade cancel-sm-box" tabindex="-1" id="modal003_perorder" data-id="" role="dialog" aria-labelledby="modal003_perorder_label" style="z-index:14000">
    <div class="modal-dialog modal-sm">
        <div class="modal-content text-center">
            <div class="modal-header" style="padding-bottom: 25px;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><i class="fa fa-times-circle"></i></button>
            </div>
            <p class="clearfix"></p>
            <h4 class="text-center">Confirm Delete Cost Install</h4>
            <button type="button" id="btndel_ok" class="btn btn-xs btn-default" onclick="ConfirmDelete(); try { $.modal.close(); } catch (ex) { }">&nbsp; Ok &nbsp;</button>
            <button type="button" id="btndel_cancel" class="btn btn-xs btn-default" data-dismiss="modal">&nbsp; Cancel &nbsp; </button>
            <p class="clearfix"></p>
        </div>
    </div>
</div>

<script>
    function screenLoader_Global() {
        $('<div class="loader-mask"><div class="loader"></div></div>').appendTo('body');
    }

    function remove_screenLoader_Global() {
        $('.loader-mask').remove();
    }
    if (window.performance) {
        screenLoader_Global();
        console.info("window.performance work's fine on this browser");
    }

    function onAdditionalData() {
        return {
            text: $("#_VENDORCODE").val()
        };
    }

    function ClearSubConType() {
        $("#_exsubcontype").val("");
        $("#validate-" + "_exsubcontype").html("");
        $("#SUBCONTYPEPopup").data("kendoWindow").close();
        $("#_addtype").val("");

    }
    function ClearTeamID() {
        $("#TeamIDPopup").data("kendoWindow").close();
        $("#_addtype").val("");

    }
    function AddConfigDataType() {
        var dataname = $("#_exsubcontype").val();
        var datatype = $("#_addtype").val();
        console.log(dataname);
        if (dataname != "") {


            $.ajax({
                type: "POST",
                url: "/ConfigurationCostInstallation/AddNewConfigData",
                data: {
                    DataName: dataname,
                    DataType: datatype
                },
                dataType: "json",
                async: false,
                success: function (response) {
                    if (response) {
                        $("#_exsubcontype").val("");
                        $("#SUBCONTYPEPopup").data("kendoWindow").close();
                        console.log("success");
                        $("#validate-" + "_exsubcontype").html("");
                        $("#_addtype").val("");
                        if (datatype == "SUBCONTRACT_TYPE") { LoadSUBTYPE(); }
                        else { LoadSUBSUBTYPE(); }


                    }

                },
                failure: function (msg) {
                }
            });


        }
        else {
            $("#validate-" + "_exsubcontype").html(ValidationIcon() + "This field is required.");
        }
    }

    function cancelPopup() {
        $("#RULE_ID").show();
        clearForAdd();
        clearValidateforAdd();
        $("#ConfigCostInsPopup").data("kendoWindow").close();
    }

    function getGridName() {
        var name;
        if ($("#ddllTableList").val() === "T1") {

            name = $("#gridCostTable1").data("kendoGrid");
        }
        else if ($("#ddllTableList").val() === "T2") {
            name = $("#gridCostTable2").data("kendoGrid");
        }
        else if ($("#ddllTableList").val() === "T3") {

            name = $("#gridCostTable3").data("kendoGrid");//
        }
        else if ($("#ddllTableList").val() === "T4") {

            name = $("#gridCostTable4").data("kendoGrid");//
        }
        else if ($("#ddllTableList").val() === "T5") {

            name = $("#gridCostTable5").data("kendoGrid");//
        }
        else if ($("#ddllTableList").val() === "T6") {

            name = $("#gridCostTable6").data("kendoGrid");//
        }

        else { name = $("#gridCostTable1").data("kendoGrid"); }


        return name;
    }
    function CheckKeyUps(id, RexStr) {
        var strKey = $("#" + id).val();
        var strBuilder = "";
        var filter = new RegExp(RexStr);
        for (var i = 0; i < strKey.length; i++) {
            if (filter.test(strKey.substr(i, 1))) {
                strBuilder += strKey.substr(i, 1);
            }
        }
        $("#" + id).val(strBuilder);
    }
    function showField() {
        $("#e_ORDER_TYPE").show();
        $("#e_SUBCONTRACT_TYPE").show();
        $("#e_SUBCONTRACT_SUB_TYPE").show();
        $("#e_VENDOR_CODE").show();
        $("#e_TECHNOLOGY").show();
        $("#e_TOTAL_PRICE").show();
        $("#e_EVENT_CODE").show();
        $("#e_ROOM_FLAG").show();
        $("#e_REUSE_FLAG").show();
        $("#e_DISTANCE_FROM").show();
        $("#e_DISTANCE_TO").show();
        $("#e_INDOOR_PRICE").show();
        $("#e_OUTDOOR_PRICE").show();
        $("#e_INTERNET_PRICE").show();
        $("#e_VOIP_PRICE").show();
        $("#e_PLAYBOX_PRICE").show();
        $("#e_MECH_PRICE").show();
        $("#e_ADDRESS_ID").show();
        $("#e_EVENT_TYPE").show();
        $("#e_SAME_DAY").show();
        $("#e_SUBCONTRACT_LOCATION").show();
        $("#e_EXPIRE_DATE").show();
        $("#e_EFFECTIVE_DATE").show();

    }
    function sethideshowgrid() {
        if ($("#ddllTableList").val() === "T1") {
            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
            $("#gridresult").show();
            $("#gridresult2").hide();
            $("#gridresult3").hide();
            $("#gridresult4").hide();
            $("#gridresult5").hide();
            $("#gridresult6").hide();
        }
        if ($("#ddllTableList").val() === "T2") {
            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
            $("#gridresult").hide();
            $("#gridresult2").show();
            $("#gridresult3").hide();
            $("#gridresult4").hide();
            $("#gridresult5").hide();
            $("#gridresult6").hide();

        }
        if ($("#ddllTableList").val() === "T3") {
            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
            $("#gridresult").hide();
            $("#gridresult2").hide();
            $("#gridresult3").show();
            $("#gridresult4").hide();
            $("#gridresult5").hide();
            $("#gridresult6").hide();

        } if ($("#ddllTableList").val() === "T4") {
            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").show();
            $("#List_COMPANY_NAME").show();
            $("#gridresult").hide();
            $("#gridresult2").hide();
            $("#gridresult3").hide();
            $("#gridresult4").show();
            $("#gridresult5").hide();
            $("#gridresult6").hide();

        } if ($("#ddllTableList").val() === "T5") {
            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
            $("#gridresult").hide();
            $("#gridresult2").hide();
            $("#gridresult3").hide();
            $("#gridresult4").hide();
            $("#gridresult5").show();
            $("#gridresult6").hide();

        } if ($("#ddllTableList").val() === "T6") {
            $("#gridresult").hide();
            $("#gridresult2").hide();
            $("#gridresult3").hide();
            $("#gridresult4").hide();
            $("#gridresult5").hide();
            $("#gridresult6").show();
            $("#List_SUBCONTRACT_TYPE").hide();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
        }


    }

    function setDefaultValue(id) {
        $("#" + id).blur(function () {
            var vald = $("#" + id).val();
            if (vald == null || vald == "") {
                $("#" + id).val("0");
            }
            else {
                $("#" + id).val(vald);
            }

        });

    }


    $(document).ready(function () {


        document.getElementById('sysinput').style.display = 'none';

        $("#_exsubcontype").keyup(function () {
            CheckKeyUps("_exsubcontype", "[A-Za-z]");

        });


        setDefaultValue("_TOTAL_PRICE");
        setDefaultValue("_INDOOR_PRICE");
        setDefaultValue("_OUTDOOR_PRICE");
        setDefaultValue("_INTERNET_PRICE");
        setDefaultValue("_VOIP_PRICE");
        setDefaultValue("_PLAYBOX_PRICE");
        setDefaultValue("_MECH_PRICE");

        $("#_EVENT_TYPE").keyup(function () {
            CheckKeyUps("_EVENT_TYPE", "[0-9A-Za-z]");

        });

        $("#_ADDRESS_ID").keyup(function () {
            CheckKeyUps("_ADDRESS_ID", "[0-9]");

        });

        $("#_VENDORCODE").keyup(function () {
            CheckKeyUps("_VENDORCODE", "[0-9AL]");

        });
        $("#_VENDORCODE").attr('maxlength', 10);

        $("#dtpDateTo").data("kendoDatePicker").enable(false);
        $("#dtpEXPDateTo").data("kendoDatePicker").enable(false);
        //  $("#_EXPDATE").data("kendoDatePicker").enable(false);


        $("#gridresult").show();
        $("#gridresult2").hide();
        $("#gridresult2").hide();
        $("#gridresult3").hide();
        $("#gridresult4").hide();
        $("#gridresult5").hide();
        $("#gridresult6").hide();
        sethideshowgrid();

        $('.floatnumber').keypress(function (event) {
            if (event.which < 46
                || event.which > 59) {
                event.preventDefault();
            } // prevent if not number/dot

            if (event.which == 46
                && $(this).val().indexOf('.') != -1) {
                event.preventDefault();
            } // prevent if already dot
        });

        $("#_saveType").val('');
        $("#_ruleselect").val('');
        $("#_tableselect").val('');

        LoadRuleID();
        var grid = getGridName();

        $(grid.tbody).on("click", "td", function (e) {
            var row = $(this).closest("tr");
            var curRowIdx = $("tr", grid.tbody).index(row);
            var colIdx = $("td", row).index(this);
            var item = grid.dataItem(row);

            $("#_ruleselect").val(item.RULEID);


        });

        setTimeout(function () {
            remove_screenLoader_Global();
        }, 3000);
    });

    function _ExportAll() {

        var model = defaultData()

        window.open("/ConfigurationCostInstallation/_ExportAll?dataS=" + JSON.stringify(model) + "");
    }

    function ExportExcel() {

        var model = defaultData()

        window.open("/ConfigurationCostInstallation/ExportExcel?dataS=" + JSON.stringify(model) + "");
    }
    function modalConfirmDeleteShow(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        //id = dataItem.ID;
        //$("#modal003_perorder").attr("data-id", id);

        //idsToSend = [];
        // idsToSend.push(dataItem);

        $("#modal003_perorder").modal("show");

    }
    function ConfirmDelete() {

        $("#modal003_perorder").modal("hide");

        var DataResult = new addDataModel();
        DataResult.COMMAND = "D";
        DataResult.TABLE = $('#_tableselect').val();
        DataResult.RULD_ID = $('#_ruleselect').val();

        $.ajax({
            type: "POST",
            url: "/ConfigurationCostInstallation/AddNewCostInstallationDataTable",
            data: { dataS: JSON.stringify(DataResult) },
            dataType: "json",
            async: false,
            success: function (response) {
                if (response) {
                    if (response.code != "-1") {
                        var title = "System Information";
                        showMSG("success", response.msg, title);
                        $("#ConfigCostInsPopup").data("kendoWindow").close();
                        // var grid = $("#gridCostTable1").data("kendoGrid");
                        var grid = getGridName();
                        grid.dataSource.page(1);
                    }
                    else {
                        $("#ConfigCostInsPopup").data("kendoWindow").close();
                        var title = "System Information";
                        showMSG("error", response.msg, title);
                    }
                }

            },
            failure: function (msg) {
            }
        });
    }
    function clearForAdd() {
        $("#_saveType").val('');


        $("#_VENDORCODE").val("");
        $("#_RULE_NAME").val("");
        $("#_ORDER_TYPE").data('kendoDropDownList').value("ALL");
        $("#_SUBCONTYPE").data('kendoDropDownList').value("ALL");
        $("#_SUBCONSUBTYPE").data('kendoMultiSelect').value("ALL");

        $("#_TECHNOLOGY").data('kendoDropDownList').value("ALL");


        $("#_EFFDATE").data("kendoDatePicker").value(new Date());

        // $("#_EXPDATE").data("kendoDatePicker").value(new Date());

        $("#_EVENT_CODE").data('kendoDropDownList').value("ALL");
        $("#_ROOM_FLAG").data('kendoDropDownList').value("ALL");
        $("#_REUSE_FLAG").data('kendoDropDownList').value("ALL");
        $("#_VENDORCODE").val("ALL");

        $("#_INTERNET_PRICE").val("0");


        $("#_DISTANCE_FROM").val("0");
        $("#_DISTANCE_TO").val("0");
        $("#_TOTAL_PRICE").val("0");
        $("#_INDOOR_PRICE").val("0");
        $("#_ADDRESS_ID").val("");
        $("#_OUTDOOR_PRICE").val("0");
        $("#_EVENT_TYPE").val("");

        $("#_VOIP_PRICE").val("0");
        $("#_PLAYBOX_PRICE").val("0");
        $("#_MECH_PRICE").val("0");
        $("#_SUBCONTRACT_LOCATION").val("");
        $("#_COMPANY_NAME").val("");
        $("#_SAME_DAY").data('kendoDropDownList').value("ALL");



    }
    function TableListChange() {
        Loading();
        $("#_ruleselect").val("");
        $("#_tableselect").val("");
        $("#ddllTableList").data("kendoDropDownList").dataSource.read();
        $('#ddlConttype').data('kendoDropDownList').value("ALL");
        $('#ddlORDERTYPE').data('kendoDropDownList').value("ALL");
        $('#ddlTECHNOLOGY').data('kendoDropDownList').value("ALL");

        $("#dtpDateFrom").val("");
        $("#dtpDateTo").val("");
        $("#dtpEXPDateFrom").val("");
        $("#dtpEXPDateTo").val("");
        $("#validate-" + "ddllTableList").html("");
        $("#dtpDateTo").data("kendoDatePicker").enable(false);
        $("#dtpEXPDateTo").data("kendoDatePicker").enable(false);

        $("#gridCostTable1").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable2").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable3").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable4").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable5").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable6").data('kendoGrid').dataSource.data([]);
        //_Clear();

        $("#ddlruleid").data('kendoDropDownList').value("ALL");
        var valtb = $("#ddllTableList").val();
        //LoadRuleID();
        if (valtb == "T1") {

            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
            $("#gridresult").show();
            $("#gridresult2").hide();
            $("#gridresult3").hide();
            $("#gridresult4").hide();
            $("#gridresult5").hide();
            $("#gridresult6").hide();

        }

        if (valtb == "T2") {
            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
            $("#gridresult").hide();
            $("#gridresult2").show();
            $("#gridresult3").hide();
            $("#gridresult4").hide();
            $("#gridresult5").hide();
            $("#gridresult6").hide();
        }

        if (valtb == "T3") {
            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
            $("#gridresult").hide();
            $("#gridresult2").hide();
            $("#gridresult3").show();
            $("#gridresult4").hide();
            $("#gridresult5").hide();
            $("#gridresult6").hide();
        }

        if (valtb == "T4") {
            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").show();
            $("#List_COMPANY_NAME").show();
            $("#gridresult").hide();
            $("#gridresult2").hide();
            $("#gridresult3").hide();
            $("#gridresult4").show();
            $("#gridresult5").hide();
            $("#gridresult6").hide();
        }

        if (valtb == "T5") {
            $("#List_SUBCONTRACT_TYPE").show();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
            $("#gridresult").hide();
            $("#gridresult2").hide();
            $("#gridresult3").hide();
            $("#gridresult4").hide();
            $("#gridresult5").show();
            $("#gridresult6").hide();
        }

        if (valtb == "T6") {
            $("#List_SUBCONTRACT_TYPE").hide();
            $("#List_LOCATION_CODE").hide();
            $("#List_COMPANY_NAME").hide();
            $("#gridresult").hide();
            $("#gridresult2").hide();
            $("#gridresult3").hide();
            $("#gridresult4").hide();
            $("#gridresult5").hide();
            $("#gridresult6").show();

        }

        LoadRuleID();
        Loading(0);
        var grid = getGridName();

        $(grid.tbody).on("click", "td", function (e) {
            var row = $(this).closest("tr");
            var curRowIdx = $("tr", grid.tbody).index(row);
            var colIdx = $("td", row).index(this);
            var item = grid.dataItem(row);

            $("#_ruleselect").val(item.RULEID);


        });

    }

    function LoadRuleID() {
        var valtb = $("#ddllTableList").val();
        $.ajax({
            cache: false,
            type: "GET",
            async: false,
            data: { table: valtb },
            url: "/ConfigurationCostInstallation/GetRuleId",
            dataType: "json",
            success: function (data) {
                //Add : virtual valueMapper ที่ data มากกว่า 500 
                //data : 11/02/2564
                if (data.length > 500) {                 
                    //#region data > 500 use virtual
                    try {
                        $("#ddlruleid").data({});
                        $("#ddlruleid").kendoDropDownList({
                            dataTextField: "ruleid",
                            dataValueField: "ruleid",
                            filter: "contains",
                            virtual: {
                                itemHeight: 26,
                                valueMapper: function (options) {
                                    var values = convertValues(options.value);
                                    var indices = [];
                                    if (values && values.length > 0) {
                                        for (var j = 0; j < data.length; j++) {
                                            var rule = data[j];
                                            if (values.indexOf(rule.ruleid) > -1) {
                                                indices.push(j);
                                            }
                                        }
                                    }
                                    options.success(indices);
                                }
                            },
                            height: 520,
                            dataSource: {
                                data: data,
                                schema: {
                                    model: {
                                        fields: {
                                            ruleid: { type: "string" },
                                            rule_name: { type: "string" }
                                        }
                                    }
                                },
                                pageSize: 80
                            }
                            
                        });
                    } catch (ex) {
                        console.log(ex);
                    }

                    //#endregion data > 500 use virtual
                } else {
                    //#region data <= 500 not use virtual

                    try {
                        $("#ddlruleid").data({});
                        $("#ddlruleid").kendoDropDownList({
                            dataTextField: "ruleid",
                            dataValueField: "ruleid",
                            filter: "contains",
                            height: 200,
                            dataSource: {
                                data: data,
                                pageSize: 80
                            }
                        });                        
                    } catch (ex) {
                        console.log(ex);
                    }

                    //#endregion data <= 500 not use virtual

                }

                var widget = $("#ddlruleid").data("kendoDropDownList");

                widget.ul.parent().on("wheel", function (e) {
                    var container = this;

                    if ((container.scrollTop == 0 && e.originalEvent.deltaY < 0) ||
                        (container.scrollTop == container.scrollHeight - container.offsetHeight &&
                            e.originalEvent.deltaY > 0)) {
                        e.preventDefault();
                        e.stopPropagation();
                    }
                });

            }
        });
    }
    function convertValues(value) {
        var data = [];
        value = $.isArray(value) ? value : [value];
        for (var idx = 0; idx < value.length; idx++) {
            data.push(value[idx]);
        }
        return data;
    }

    function AddnewData() {
        $("#RULE_ID").hide();


        $("#_SAME_DAY").data('kendoDropDownList').enable(false);
        $("#_EXPDATE").data("kendoDatePicker").value();
        var minsDate = new Date();
        $("#_EFFDATE").kendoDatePicker({
            min: minsDate,
            //  max: maxDate,
            format: "dd/MM/yyyy",
            parseFormats: ["dd/MM/yyyy"],
            change: function () {
                onChangeEFFDATE();
                var value = this.value();
                console.log(value); //value is the selected date in the datepicker
            }
        });
        $("#_EXPDATE").kendoDatePicker({
            min: minsDate,
            //  max: maxDate,
            format: "dd/MM/yyyy",
            parseFormats: ["dd/MM/yyyy"],
            change: function () {

                var value = this.value();
                console.log(value); //value is the selected date in the datepicker
            }
        });


        showField();
        var valtb = $("#ddllTableList").val();
        clearForAdd();
        $("#_saveType").val('A');
        $("#ConfigCostInsPopup").data("kendoWindow").center().open();

        $("#_tableselect").val(valtb);
        setFieldInput(valtb);
    }
    function setFieldInput(tb) {

        if (tb == "T1") {

            $("#ConfigCostInsPopup").prev().find(".k-window-title").text("Configuration CostInstallation Table1");
            //  $("#e_ORDER_TYPE").hide();
            //  $("#e_SUBCONTRACT_TYPE").hide();
            //  $("#e_SUBCONTRACT_SUB_TYPE").hide();
            // $("#e_VENDOR_CODE").hide();
            // $("#e_TECHNOLOGY").hide();
            //$("#e_TOTAL_PRICE").hide();
            $("#e_EVENT_CODE").hide();
            $("#e_ROOM_FLAG").hide();
            $("#e_REUSE_FLAG").hide();
            $("#e_DISTANCE_FROM").hide();
            $("#e_DISTANCE_TO").hide();
            $("#e_INDOOR_PRICE").hide();
            $("#e_OUTDOOR_PRICE").hide();
            $("#e_INTERNET_PRICE").hide();
            $("#e_VOIP_PRICE").hide();
            $("#e_PLAYBOX_PRICE").hide();
            $("#e_MECH_PRICE").hide();
            $("#e_ADDRESS_ID").hide();
            $("#e_EVENT_TYPE").hide();
            $("#e_SAME_DAY").hide();
            $("#e_SUBCONTRACT_LOCATION").hide();
            $(".tb4_TeamID").hide();
            //
            //

        }
        else if (tb == "T2") {
            $("#ConfigCostInsPopup").prev().find(".k-window-title").text("Configuration CostInstallation Table2");
            //  $("#e_ORDER_TYPE").hide();
            //  $("#e_SUBCONTRACT_TYPE").hide();
            $("#e_SUBCONTRACT_SUB_TYPE").hide();
            $("#e_VENDOR_CODE").hide();
            // $("#e_TECHNOLOGY").hide();
            $("#e_TOTAL_PRICE").hide();
            $("#e_EVENT_CODE").hide();
            $("#e_ROOM_FLAG").hide();
            $("#e_REUSE_FLAG").hide();
            $("#e_DISTANCE_FROM").hide();
            $("#e_DISTANCE_TO").hide();
            $("#e_INDOOR_PRICE").hide();
            $("#e_OUTDOOR_PRICE").hide();
            //$("#e_INTERNET_PRICE").hide();
            // $("#e_VOIP_PRICE").hide();
            //$("#e_PLAYBOX_PRICE").hide();
            // $("#e_MECH_PRICE").hide();
            // $("#e_ADDRESS_ID").hide();
            // $("#e_EVENT_TYPE").hide();
            //  $("#e_SAME_DAY").hide();
            $("#e_SUBCONTRACT_LOCATION").hide();
            $(".tb4_TeamID").hide();


        }
        else if (tb == "T3") {
            $("#ConfigCostInsPopup").prev().find(".k-window-title").text("Configuration CostInstallation Table3");
            //  $("#e_ORDER_TYPE").hide();
            //  $("#e_SUBCONTRACT_TYPE").hide();
            $("#e_SUBCONTRACT_SUB_TYPE").hide();
            $("#e_VENDOR_CODE").hide();
            // $("#e_TECHNOLOGY").hide();
            $("#e_TOTAL_PRICE").hide();
            //  $("#e_EVENT_CODE").hide();
            //$("#e_ROOM_FLAG").hide();
            $("#e_REUSE_FLAG").hide();
            $("#e_DISTANCE_FROM").hide();
            $("#e_DISTANCE_TO").hide();
            $("#e_INDOOR_PRICE").hide();
            $("#e_OUTDOOR_PRICE").hide();
            //$("#e_INTERNET_PRICE").hide();
            // $("#e_VOIP_PRICE").hide();
            //$("#e_PLAYBOX_PRICE").hide();
            // $("#e_MECH_PRICE").hide();
            $("#e_ADDRESS_ID").hide();
            $("#e_EVENT_TYPE").hide();
            $("#e_SUBCONTRACT_LOCATION").hide();
            //  $("#e_SAME_DAY").hide();
            $(".tb4_TeamID").hide();


        }
        else if (tb == "T4") {
            $("#ConfigCostInsPopup").prev().find(".k-window-title").text("Configuration CostInstallation Table4");
            // $("#e_ORDER_TYPE").hide();
            //  $("#e_SUBCONTRACT_TYPE").hide();
            $("#e_SUBCONTRACT_SUB_TYPE").hide();
            $("#e_VENDOR_CODE").hide();
            // $("#e_TECHNOLOGY").hide();
            // $("#e_TOTAL_PRICE").hide();
            $("#e_EVENT_CODE").hide();
            $("#e_ROOM_FLAG").hide();
            // $("#e_REUSE_FLAG").hide();
            // $("#e_DISTANCE_FROM").hide();
            //$("#e_DISTANCE_TO").hide();
            // $("#e_INDOOR_PRICE").hide();
            // $("#e_OUTDOOR_PRICE").hide();
            $("#e_INTERNET_PRICE").hide();
            $("#e_VOIP_PRICE").hide();
            $("#e_PLAYBOX_PRICE").hide();
            $("#e_MECH_PRICE").hide();
            $("#e_ADDRESS_ID").hide();
            $("#e_EVENT_TYPE").hide();
            $("#e_SAME_DAY").hide();
            $("#_INDOOR_PRICE").val("0");
            $("#_OUTDOOR_PRICE").val("0");
            $("#_DISTANCE_FROM").val("0");
            $(".tb4_TeamID").show();

        }
        else if (tb == "T5") {
            $("#ConfigCostInsPopup").prev().find(".k-window-title").text("Configuration CostInstallation Table5");
            //  $("#e_ORDER_TYPE").hide();
            //  $("#e_SUBCONTRACT_TYPE").hide();
            //$("#e_SUBCONTRACT_SUB_TYPE").hide();
            $("#e_VENDOR_CODE").hide();
            // $("#e_TECHNOLOGY").hide();
            // $("#e_TOTAL_PRICE").hide();
            $("#e_EVENT_CODE").hide();
            $("#e_ROOM_FLAG").hide();
            //  $("#e_REUSE_FLAG").hide();
            $("#e_DISTANCE_FROM").hide();
            $("#e_DISTANCE_TO").hide();
            $("#e_INDOOR_PRICE").hide();
            $("#e_OUTDOOR_PRICE").hide();
            $("#e_INTERNET_PRICE").hide();
            $("#e_VOIP_PRICE").hide();
            $("#e_PLAYBOX_PRICE").hide();
            $("#e_MECH_PRICE").hide();
            $("#e_ADDRESS_ID").hide();
            $("#e_EVENT_TYPE").hide();
            $("#e_SAME_DAY").hide();
            $("#e_SUBCONTRACT_LOCATION").hide();
            $(".tb4_TeamID").hide();

        }
        else {
            $("#ConfigCostInsPopup").prev().find(".k-window-title").text("Configuration CostInstallation Table6");
            //  $("#e_ORDER_TYPE").hide();
            $("#e_SUBCONTRACT_TYPE").hide();
            $("#e_SUBCONTRACT_SUB_TYPE").hide();
            $("#e_VENDOR_CODE").hide();
            // $("#e_TECHNOLOGY").hide();
            //  $("#e_TOTAL_PRICE").hide();
            $("#e_EVENT_CODE").hide();
            $("#e_ROOM_FLAG").hide();
            $("#e_REUSE_FLAG").hide();
            $("#e_DISTANCE_FROM").hide();
            $("#e_DISTANCE_TO").hide();
            $("#e_INDOOR_PRICE").hide();
            $("#e_OUTDOOR_PRICE").hide();
            $("#e_INTERNET_PRICE").hide();
            $("#e_VOIP_PRICE").hide();
            $("#e_PLAYBOX_PRICE").hide();
            $("#e_MECH_PRICE").hide();
            $("#e_ADDRESS_ID").hide();
            $("#e_EVENT_TYPE").hide();
            $("#e_SAME_DAY").hide();
            $("#e_SUBCONTRACT_LOCATION").hide();
            $(".tb4_TeamID").hide();


        }

    }

    function ConfirmUpdate() {

        var addmodel = defaultAddData();
        var chkadd = ValidationAddData();
        if (chkadd == true) {
            $.ajax({
                type: "POST",
                url: "/ConfigurationCostInstallation/AddNewCostInstallationDataTable",
                data: {
                    dataS: JSON.stringify(addmodel)
                },
                dataType: "json",
                async: false,
                success: function (response) {
                    if (response) {
                        if (response.code != "-1") {
                            var title = "System Information";
                            showMSG("success", response.msg, title);
                            $("#ConfigCostInsPopup").data("kendoWindow").close();
                            // var grid = $("#gridCostTable1").data("kendoGrid");
                            var grid = getGridName();
                            grid.dataSource.page(1);
                        }
                        else {
                            $("#ConfigCostInsPopup").data("kendoWindow").close();
                            var title = "System Information";
                            showMSG("error", response.msg, title);
                        }
                    }

                },
                failure: function (msg) {
                }
            });
        }
        $("#RULE_ID").show();
    }
    function EditInstallCost() {

        $("#RULE_ID").show();
        $("#_SAME_DAY").data('kendoDropDownList').enable(true);

        //$('#_SAME_DAY').attr("disabled", false);
        //   $("#_EXPDATE").data("kendoDatePicker").enable(true);
        showField();
        $("#_saveType").val('E');
        var selectRULEID = $('#_ruleselect').val();
        var tbselect = $('#_tableselect').val();

        setFieldInput(tbselect);
        $("#ConfigCostInsPopup").data("kendoWindow").center().open();
        // $("#ConfigCostInsPopup").prev().find(".k-window-title").text("Edit CostInstallation");
        // Loading(0);

        // var selectRULEID = $('#_ruleselect').val();
        // var tbselect  = $('#_tableselect').val();

        $.ajax({
            type: "POST",
            url: "/ConfigurationCostInstallation/getEditCostInstallationDataTable",
            data: { TABLE: tbselect, RULEID: selectRULEID },
            dataType: "json",
            async: false,
            success: function (response) {

                if (response) {

                    if (tbselect == 'T1') {

                        $("#_RULDID").val(response._RULDID);
                        $("#_RULE_NAME").val(response._RULE_NAME);
                        $("#_ORDER_TYPE").data('kendoDropDownList').value(response._ORDER_TYPE);


                        $("#_SUBCONTYPE").data("kendoDropDownList").value(response._SUBCONTRACT_TYPE);
                        var str = response._SUBCONTRACT_SUB_TYPE;

                        str = str == '' ? '' : str.split(",");
                        $("#_SUBCONSUBTYPE").data("kendoMultiSelect").value(str);
                        // console.log(response._VENDOR_CODE);
                        $("#_VENDORCODE").val(response._VENDOR_CODE);



                        $("#_TECHNOLOGY").data('kendoDropDownList').value(response._TECHNOLOGY);

                        $("#_TOTAL_PRICE").val(response._TOTAL_PRICE);

                        $("#_EFFDATE").data("kendoDatePicker").value(response._EFFECTIVE_DATE);




                        $("#_EXPDATE").data("kendoDatePicker").value(response._EXPIRE_DATE);




                        $("#_CREATE_DATE").val(response._CREATE_DATE);
                        $("#_CREATE_BY").val(response._CREATE_BY);
                        $("#_UPDATE_DATE").val(response._UPDATE_DATE);
                        $("#_UPDATE_BY").val(response._UPDATE_BY);
                        $("#_UPDATE_BY").focus();
                    }
                    if (tbselect == 'T2') {
                        $("#_RULDID").val(response._RULDID);
                        $("#_RULE_NAME").val(response._RULE_NAME);
                        $("#_ORDER_TYPE").data('kendoDropDownList').value(response._ORDER_TYPE);
                        $("#_SUBCONTYPE").data("kendoDropDownList").value(response._SUBCONTRACT_TYPE);



                        $("#_TECHNOLOGY").data('kendoDropDownList').value(response._TECHNOLOGY);
                        $("#_INTERNET_PRICE").val(response._INTERNET_PRICE);

                        $("#_VOIP_PRICE").val(response._VOIP_PRICE);
                        $("#_PLAYBOX_PRICE").val(response._PLAYBOX_PRICE);
                        $("#_MECH_PRICE").val(response._MECH_PRICE);
                        $("#_ADDRESS_ID").val(response._ADDRESS_ID);
                        $("#_EVENT_TYPE").val(response._EVENT_TYPE);




                        $("#_EFFDATE").data("kendoDatePicker").value(response._EFFECTIVE_DATE);

                        $("#_EXPDATE").data("kendoDatePicker").value(response._EXPIRE_DATE);
                        $("#_CREATE_DATE").val(response._CREATE_DATE);
                        $("#_CREATE_BY").val(response._CREATE_BY);
                        $("#_UPDATE_DATE").val(response._UPDATE_DATE);
                        $("#_UPDATE_BY").val(response._UPDATE_BY);
                        $("#_SAME_DAY").data('kendoDropDownList').value(response._SAME_DAY);

                    }
                    if (tbselect == 'T3') {
                        $("#_RULDID").val(response._RULDID);
                        $("#_RULE_NAME").val(response._RULE_NAME);
                        $("#_ORDER_TYPE").data('kendoDropDownList').value(response._ORDER_TYPE);
                        $("#_SUBCONTYPE").data("kendoDropDownList").value(response._SUBCONTRACT_TYPE);



                        $("#_TECHNOLOGY").data('kendoDropDownList').value(response._TECHNOLOGY);
                        $("#_EVENT_CODE").data('kendoDropDownList').value(response._EVENT_CODE);
                        $("#_ROOM_FLAG").data('kendoDropDownList').value(response._ROOM_FLAG);

                        $("#_INTERNET_PRICE").val(response._INTERNET_PRICE);
                        $("#_VOIP_PRICE").val(response._VOIP_PRICE);
                        $("#_PLAYBOX_PRICE").val(response._PLAYBOX_PRICE);
                        $("#_MECH_PRICE").val(response._MECH_PRICE);



                        $("#_EFFDATE").data("kendoDatePicker").value(response._EFFECTIVE_DATE);

                        $("#_EXPDATE").data("kendoDatePicker").value(response._EXPIRE_DATE);
                        $("#_CREATE_DATE").val(response._CREATE_DATE);
                        $("#_CREATE_BY").val(response._CREATE_BY);
                        $("#_UPDATE_DATE").val(response._UPDATE_DATE);
                        $("#_UPDATE_BY").val(response._UPDATE_BY);
                        $("#_SAME_DAY").data('kendoDropDownList').value(response._SAME_DAY);

                    }
                    if (tbselect == 'T4') {
                        $("#_RULDID").val(response._RULDID);
                        $("#_RULE_NAME").val(response._RULE_NAME);

                        $("#_SUBCONTYPE").data("kendoDropDownList").value(response._SUBCONTRACT_TYPE);

                        $("#_TECHNOLOGY").data('kendoDropDownList').value(response._TECHNOLOGY);
                        //R21.2 เพิ่ม ORDER_TYPE Table4
                        $("#_ORDER_TYPE").data('kendoDropDownList').value(response._ORDER_TYPE);
                        $("#_TOTAL_PRICE").val(response._TOTAL_PRICE);

                        $("#_REUSE_FLAG").data("kendoDropDownList").value(response._REUSE_FLAG);
                        $("#_DISTANCE_FROM").val(response._DISTANCE_FROM);
                        $("#_DISTANCE_TO").val(response._DISTANCE_TO);
                        $("#_INDOOR_PRICE").val(response._INDOOR_PRICE);
                        $("#_OUTDOOR_PRICE").val(response._OUTDOOR_PRICE);



                        $("#_EFFDATE").data("kendoDatePicker").value(response._EFFECTIVE_DATE);
                        $("#_EXPDATE").data("kendoDatePicker").value(response._EXPIRE_DATE);
                        $("#_CREATE_DATE").val(response._CREATE_DATE);
                        $("#_CREATE_BY").val(response._CREATE_BY);
                        $("#_UPDATE_DATE").val(response._UPDATE_DATE);
                        $("#_UPDATE_BY").val(response._UPDATE_BY);
                        $("#_SUBCONTRACT_LOCATION").val(response._SUBCONTRACT_LOCATION);
                        $("#_COMPANY_NAME").val(response._COMPANY_NAME);

                    }
                    if (tbselect == 'T5') {
                        //  console.log(response._TOTAL_PRICE);
                        $("#_RULDID").val(response._RULDID);
                        $("#_RULE_NAME").val(response._RULE_NAME);
                        $("#_ORDER_TYPE").data('kendoDropDownList').value(response._ORDER_TYPE);
                        $("#_SUBCONTYPE").data("kendoDropDownList").value(response._SUBCONTRACT_TYPE);
                        var str = response._SUBCONTRACT_SUB_TYPE;

                        str = str == '' ? '' : str.split(",");
                        $("#_SUBCONSUBTYPE").data("kendoMultiSelect").value(str);
                        $("#_TECHNOLOGY").data('kendoDropDownList').value(response._TECHNOLOGY);
                        $("#_TOTAL_PRICE").val(response._TOTAL_PRICE);

                        $("#_REUSE_FLAG").data("kendoDropDownList").value(response._REUSE_FLAG);



                        $("#_EFFDATE").data("kendoDatePicker").value(response._EFFECTIVE_DATE);
                        $("#_EXPDATE").data("kendoDatePicker").value(response._EXPIRE_DATE);
                        $("#_CREATE_DATE").val(response._CREATE_DATE);
                        $("#_CREATE_BY").val(response._CREATE_BY);
                        $("#_UPDATE_DATE").val(response._UPDATE_DATE);
                        $("#_UPDATE_BY").val(response._UPDATE_BY);
                        $("#_SUBCONTRACT_LOCATION").val(response._SUBCONTRACT_LOCATION);
                        $("#_COMPANY_NAME").val(response._COMPANY_NAME);

                    }
                    if (tbselect == 'T6') {
                        $("#_RULDID").val(response._RULDID);
                        $("#_RULE_NAME").val(response._RULE_NAME);
                        $("#_ORDER_TYPE").data('kendoDropDownList').value(response._ORDER_TYPE);


                        $("#_TECHNOLOGY").data('kendoDropDownList').value(response._TECHNOLOGY);
                        $("#_TOTAL_PRICE").val(response._TOTAL_PRICE);




                        $("#_EFFDATE").data("kendoDatePicker").value(response._EFFECTIVE_DATE);
                        $("#_EXPDATE").data("kendoDatePicker").value(response._EXPIRE_DATE);
                        $("#_CREATE_DATE").val(response._CREATE_DATE);
                        $("#_CREATE_BY").val(response._CREATE_BY);
                        $("#_UPDATE_DATE").val(response._UPDATE_DATE);
                        $("#_UPDATE_BY").val(response._UPDATE_BY);


                    }

                    var minsDate = new Date(response._EFFECTIVE_DATE);
                    var exdate = new Date(response._EXPIRE_DATE)

                    // var minsDate = response._EFFECTIVE_DATE;
                    console.log(minsDate);
                    $("#_EFFDATE").kendoDatePicker({
                        min: minsDate,

                        format: "dd/MM/yyyy",
                        parseFormats: ["dd/MM/yyyy"],
                        change: function () {
                            onChangeEFFDATE();
                        }


                    });

                    $("#_EFFDATE").data("kendoDatePicker").value(minsDate);

                    $("#_EXPDATE").kendoDatePicker({
                        min: minsDate,

                        format: "dd/MM/yyyy",
                        parseFormats: ["dd/MM/yyyy"]



                    });
                    $("#_EXPDATE").data("kendoDatePicker").value(exdate);


                }
            },
            failure: function (msg) {
            }
        });

    }
    function onAddSUBCONTYPE() {
        //if (this.dataSource.view().length == 0) {
        //   $("#_SUBCONTYPE").data('kendoDropDownList').dataSource.read();
        //  $("#_exsubcontype").focus();

        $("#_dname").html("SUBCONTRACT TYPE");
        $("#_addtype").val("SUBCONTRACT_TYPE");
        $("#SUBCONTYPEPopup").data("kendoWindow").center().open();
        $("#SUBCONTYPEPopup").prev().find(".k-window-title").text("ADD NEW SUBCONTRACT TYPE");


        // }
    }

    function onAddTeamID() {
        $("#gridteamid").data('kendoGrid').dataSource.data([]);
        $('#_filter_search').data('kendoDropDownList').value("Region");
        $("#_searchPopup").val("");
        $("#TeamIDPopup").data("kendoWindow").center().open();
        $("#TeamIDPopup").prev().find(".k-window-title").text("Add Location Code/Company Name");


        // }
    }

    function LoadSUBTYPE() {

        $.ajax({
            cache: false,
            type: "GET",
            async: false,

            url: "/ConfigurationCostInstallation/GetSUBCONTRACTTYPE",
            dataType: "json",
            success: function (data) {
                try {
                    temp_data_dropdown = data;
                    $("#_SUBCONTYPE").kendoDropDownList({
                        dataTextField: "DISPLAY_VAL",
                        dataValueField: "LOV_VAL1",
                        dataSource: data,

                        filter: "contains",
                        virtual: {
                            itemHeight: 26,
                            valueMapper: function (options) {
                                options.success([options.value || 0]); //return the value <-> item index mapping;
                            }
                        }
                    });
                    //Loading(0);
                } catch (ex) {
                    // Loading(0);
                }
            }
        });


    }
    function onAddSUBCONSUBTYPE() {
        //  if (this.dataSource.view().length == 0) {
        $("#_dname").html("SUBCONTRACT SUB TYPE");
        //   $("#_SUBCONTYPE").data('kendoDropDownList').dataSource.read();
        $("#_addtype").val("SUBCONTRACT_SUB_TYPE");
        $("#_exsubcontype").focus();
        $("#SUBCONTYPEPopup").data("kendoWindow").center().open();
        $("#SUBCONTYPEPopup").prev().find(".k-window-title").text("ADD NEW SUBCONTRACT SUB TYPE");
        //  }
    }
    function LoadSUBSUBTYPE() {


        //   var multiselect = $("#_SUBCONSUBTYPE").data("kendoMultiSelect");

        // multiselect.refresh();
        $("#_SUBCONSUBTYPE").data('kendoMultiSelect').dataSource.read();
        $.ajax({
            cache: false,
            type: "GET",
            async: false,

            url: "/ConfigurationCostInstallation/GetSUBCONTRACTSUBTYPE",
            dataType: "json",
            success: function (data) {

            }
        });


    }
    function onChangesubsubType() {
        var str = $("#_SUBCONSUBTYPE").data("kendoMultiSelect").value();
        if (str.indexOf("ALL") == 0) {
            str.splice(str.indexOf("ALL"), 1);
            $("#_SUBCONSUBTYPE").data('kendoMultiSelect').value(str);
        } else if (str.indexOf("ALL") > 0) {
            $("#_SUBCONSUBTYPE").data('kendoMultiSelect').value([]);
            $("#_SUBCONSUBTYPE").data('kendoMultiSelect').value(['ALL']);
        }
        else if (str.length == 0 || str == null || str == '') {
            $("#_SUBCONSUBTYPE").data('kendoMultiSelect').value(['ALL']);
        }
    }


    function onChangedtpDateFrom() {
        var pickDate = this.value();
        var datepicker = $("#dtpDateTo").data("kendoDatePicker");
        if (pickDate) {
            datepicker.enable(true);
            var minDate = new Date(pickDate);
            //  var maxDate = new Date(pickDate.setMonth(pickDate.getMonth() + 5));
            //  maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth() + 1, maxDate.getDate() - 1);
            $("#dtpDateTo").kendoDatePicker({
                min: minDate,
                //  max: maxDate,
                format: "dd/MM/yyyy",
                parseFormats: ["dd/MM/yyyy"]
            });

        }
        //else {
        //    datepicker.enable(false);
        //}
        datepicker.value(new Date());
        $("#dtpDateTo").val("");
    }
    function onChangedtpDateTo() {

    }

    function onChangedtpEXPDateFrom() {
        var pickDate = this.value();
        var datepicker = $("#dtpEXPDateTo").data("kendoDatePicker");
        if (pickDate) {
            datepicker.enable(true);
            var minDate = new Date(pickDate);
            //  var maxDate = new Date(pickDate.setMonth(pickDate.getMonth() + 5));
            //  maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth() + 1, maxDate.getDate() - 1);
            $("#dtpEXPDateTo").kendoDatePicker({
                min: minDate,
                //  max: maxDate,
                format: "dd/MM/yyyy",
                parseFormats: ["dd/MM/yyyy"]
            });

        }
        //else {
        //    datepicker.enable(false);
        //}
        datepicker.value(new Date());
        $("#dtpEXPDateTo").val("");
    }



    function onChangeEFFDATE() {



        var pickDate = $("#_EFFDATE").data("kendoDatePicker").value();
        var datepicker = $("#_EXPDATE").data("kendoDatePicker");
        if (pickDate) {
            //datepicker.value(pickDate);
            datepicker.enable(true);
            var minDate = new Date(pickDate);
            if (datepicker.value()) {
                datepicker.value(pickDate);
            }
            else {
                datepicker.value();
            }
            $("#_EXPDATE").kendoDatePicker({
                min: pickDate,

                format: "dd/MM/yyyy",
                parseFormats: ["dd/MM/yyyy"]
            });

        }


    }
    function onChangeEXPDate() {
        //var pickDate = this.value();
        //var datepicker = $("#dtpEXPDateTo").data("kendoDatePicker");
        //if (pickDate) {
        //    datepicker.enable(true);
        //    var minDate = new Date(pickDate);
        //    //  var maxDate = new Date(pickDate.setMonth(pickDate.getMonth() + 5));
        //    //  maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth() + 1, maxDate.getDate() - 1);
        //    $("#dtpEXPDateTo").kendoDatePicker({
        //        min: minDate,
        //        //  max: maxDate,
        //        format: "dd/MM/yyyy",
        //        parseFormats: ["dd/MM/yyyy"]
        //    });

        //}
        //else {
        //    datepicker.enable(false);
        //}
        //   datepicker.value(new Date());
        //  $("#dtpEXPDateTo").val("");
    }

    function onChangedtpEXPDateTo() {

    }
    function _clearPopupData() { }
    var addDataModel = function () {
        COMMAND: "";
        TABLE: "";
        RULD_ID: "";
        RULE_NAME: "";
        ORDER_TYPE: "";
        SUBCONTRACT_TYPE: "";
        SUBCONTRACT_SUB_TYPE: "";
        VENDOR_CODE: "";
        TECHNOLOGY: "";
        TOTAL_PRICE: "";
        EVENT_CODE: "";
        ROOM_FLAG: "";
        REUSE_FLAG: "";
        DISTANCE_FROM: "";
        DISTANCE_TO: "";
        INDOOR_PRICE: "";
        OUTDOOR_PRICE: "";
        TOTAL_PRICE: "";
        INTERNET_PRICE: "";
        VOIP_PRICE: "";
        PLAYBOX_PRICE: "";
        MECH_PRICE: "";
        ADDRESS_ID: "";
        EVENT_TYPE: "";
        EFFECTIVE_DATE: "";
        EXPIRE_DATE: "";
        SAME_DAY: "";
        SUBCONTRACT_LOCATION: "";
        COMPANY_NAME: "";
    }
    function defaultAddData() {

        var DataResult = new addDataModel();
        DataResult.COMMAND = $('#_saveType').val();
        DataResult.TABLE = $('#_tableselect').val();
        DataResult.RULD_ID = $('#_RULDID').val();
        DataResult.RULE_NAME = $("#_RULE_NAME").val();
        DataResult.ORDER_TYPE = $("#_ORDER_TYPE").val();
        DataResult.SUBCONTRACT_TYPE = $("#_SUBCONTYPE").val();
        DataResult.SUBCONTRACT_SUB_TYPE = $("#_SUBCONSUBTYPE").val();
        if ($("#_VENDORCODE").val() == "" || $("#_VENDORCODE").val() == null) {
            DataResult.VENDOR_CODE = "ALL";
        }
        else {
            DataResult.VENDOR_CODE = $("#_VENDORCODE").val();
        }

        DataResult.TECHNOLOGY = $("#_TECHNOLOGY").val();
        DataResult.TOTAL_PRICE = $("#_TOTAL_PRICE").val();
        DataResult.EVENT_CODE = $("#_EVENT_CODE").val();
        DataResult.ROOM_FLAG = $("#_ROOM_FLAG").val();
        DataResult.REUSE_FLAG = $("#_REUSE_FLAG").val();
        DataResult.DISTANCE_FROM = $("#_DISTANCE_FROM").val();
        DataResult.DISTANCE_TO = $("#_DISTANCE_TO").val();
        DataResult.INDOOR_PRICE = $("#_INDOOR_PRICE").val();
        DataResult.OUTDOOR_PRICE = $("#_OUTDOOR_PRICE").val();

        DataResult.INTERNET_PRICE = $("#_INTERNET_PRICE").val();
        DataResult.VOIP_PRICE = $("#_VOIP_PRICE").val();
        DataResult.PLAYBOX_PRICE = $("#_PLAYBOX_PRICE").val();
        DataResult.MECH_PRICE = $("#_MECH_PRICE").val();
        DataResult.ADDRESS_ID = $("#_ADDRESS_ID").val();
        DataResult.EVENT_TYPE = $("#_EVENT_TYPE").val();
        DataResult.EFFECTIVE_DATE = $("#_EFFDATE").val();
        DataResult.EXPIRE_DATE = $("#_EXPDATE").val();
        DataResult.SAME_DAY = $("#_SAME_DAY").val();
        DataResult.SUBCONTRACT_LOCATION = $("#_SUBCONTRACT_LOCATION").val();
        DataResult.COMPANY_NAME = $("#_COMPANY_NAME").val();
        return DataResult;
    }
    var SearchModel = function () {
        TB_NAME: "";
        SUBCONTTYPE: "";
        RULE_ID: "";
        DATE_FROM: "";
        DATE_TO: "";
        ORD_TYPE: "";
        TECH_TYPE: "";
        EXPDATE_FROM: "";
        EXPDATE_TO: "";
        PAGE_INDEX: 1;
        PAGE_SIZE: 20;
        SUBCONTRACT_LOCATION: "";
        COMPANY_NAME: "";
    }

    function defaultData() {
        var searchResult = new SearchModel();
        searchResult.TB_NAME = $("#ddllTableList").val(); //ORDER_NO
        searchResult.SUBCONTTYPE = $("#ddlConttype").val(); //ACCESS_NO
        searchResult.RULE_ID = $("#ddlruleid").val(); //ddlProductName
        searchResult.ORD_TYPE = $("#ddlORDERTYPE").val();
        searchResult.TECH_TYPE = $("#ddlTECHNOLOGY").val();
        searchResult.DATE_FROM = $("#dtpDateFrom").val();
        searchResult.DATE_TO = $("#dtpDateTo").val();
        searchResult.SUBCONTRACT_LOCATION = $("#ddlLocationCode").val();
        searchResult.COMPANY_NAME = $("#ddlCompanyName").val();

        searchResult.EXPDATE_FROM = $("#dtpEXPDateFrom").val();
        searchResult.EXPDATE_TO = $("#dtpEXPDateTo").val();

        var grid = getGridName();

        searchResult.PAGE_INDEX = grid.dataSource.page();
        searchResult.PAGE_SIZE = grid.dataSource.pageSize();
        //  searchResult.PAGE_INDEX =  1;
        // searchResult.PAGE_SIZE = 20;

        return searchResult;
    }
    function onGridDataBound() {

        Loading(0);

        if (this.dataSource.view().length == 0) {
            if ($("#ddllTableList").val() == "T1") {
                $('#btnExport').attr("disabled", true);
            }
            if ($("#ddllTableList").val() == "T2") {
                $('#btnExportt2').attr("disabled", true);
            }
            if ($("#ddllTableList").val() == "T3") {
                $('#btnExportt3').attr("disabled", true);
            }
            if ($("#ddllTableList").val() == "T4") {
                $('#btnExportt4').attr("disabled", true);
            }
            if ($("#ddllTableList").val() == "T5") {
                $('#btnExportt5').attr("disabled", true);
            }
            if ($("#ddllTableList").val() == "T6") {
                $('#btnExportt6').attr("disabled", true);
            }

        }
        else {
            $('.k-grid-content').height("auto");
            $('.k-grid-content').css("min-height", "50px");
            $('.k-grid-content').css("max-height", "300px");
            if ($("#ddllTableList").val() == "T1") {
                $('#btnExport').attr("disabled", false);
            }
            if ($("#ddllTableList").val() == "T2") {
                $('#btnExportt2').attr("disabled", false);
            }
            if ($("#ddllTableList").val() == "T3") {
                $('#btnExportt3').attr("disabled", false);
            }
            if ($("#ddllTableList").val() == "T4") {
                $('#btnExportt4').attr("disabled", false);
            }
            if ($("#ddllTableList").val() == "T5") {
                $('#btnExportt5').attr("disabled", false);
            }
            if ($("#ddllTableList").val() == "T6") {
                $('#btnExportt6').attr("disabled", false);
            }
        }
        if ($("#ddllTableList").val() == "T1") {
            $('#btnExport').attr("disabled", !(this.dataSource.view().length != 0));
        }
        if ($("#ddllTableList").val() == "T2") {
            $('#btnExportt2').attr("disabled", !(this.dataSource.view().length != 0));
        }
        if ($("#ddllTableList").val() == "T3") {
            $('#btnExportt3').attr("disabled", !(this.dataSource.view().length != 0));
        }
        if ($("#ddllTableList").val() == "T4") {
            $('#btnExportt4').attr("disabled", !(this.dataSource.view().length != 0));
        }
        if ($("#ddllTableList").val() == "T5") {
            $('#btnExportt5').attr("disabled", !(this.dataSource.view().length != 0));
        }
        if ($("#ddllTableList").val() == "T6") {
            $('#btnExportt6').attr("disabled", !(this.dataSource.view().length != 0));
        }


        //Style_Grid();
    }

    function _Search() {
        $("#_RULE_ID").show();
        var chk = ValidationSearchData();
        if (chk == true) {

            $("#_ruleselect").val("");
            var model = defaultData();
            $('#_tableselect').val(model.TB_NAME);
            console.log("Table:" + model.TB_NAME);
            console.log("RULEID:" + model.RULE_ID);
            console.log("SUBCONTRACTTYPE:" + model.SUBCONTTYPE);
            console.log("EFFECTIVEDATE:" + model.DATE_FROM);
            console.log("EXPIREDATE:" + model.DATE_TO);
            temp_model = model;
            Loading();
            var grid = getGridName();
            grid.dataSource.page(1);
        }

    }
    var model;
    function bindingValue() {
        Loading();
        model = defaultData();
        return {
            dataS: JSON.stringify(model)
        };
    }
    function onChangeORDTYPE() {
        var ordtype = $("#_ORDER_TYPE").val();
        if (ordtype == null || ordtype == "ALL") {

            $("#_SAME_DAY").data('kendoDropDownList').enable(false);

        }
        else {

            $("#_SAME_DAY").data('kendoDropDownList').enable(true);

        }
    }
    function _Clear() {

        $("#_ruleselect").val("");
        $("#_tableselect").val("");
        $("#ddllTableList").data("kendoDropDownList").dataSource.read();
        //   $("#ddllTableList").data("kendoDropDownList").select(0);
        //  $('#ddllTableList').data('kendoDropDownList').value("");
        // $("#ddlConttype").data("kendoDropDownList").dataSource.read();
        // $("#ddlConttype").data("kendoDropDownList").select(0);
        $('#ddlConttype').data('kendoDropDownList').value("ALL");
        $('#ddlLocationCode').data('kendoDropDownList').value("ALL");
        $('#ddlCompanyName').data('kendoDropDownList').value("ALL");
        //$("#ddlruleid").data("kendoDropDownList").dataSource.read();
        $("#ddlruleid").data("kendoDropDownList").value("ALL");
        //$('#ddlruleid').data('kendoDropDownList').value("ALL");
        // console.log("clear");
        $('#ddlORDERTYPE').data('kendoDropDownList').value("ALL");
        $('#ddlTECHNOLOGY').data('kendoDropDownList').value("ALL");

        $("#dtpDateFrom").data("kendoDatePicker").value(null);
        $("#dtpDateTo").data("kendoDatePicker").value(null);
        $("#dtpEXPDateFrom").data("kendoDatePicker").value(null);
        $("#dtpEXPDateTo").data("kendoDatePicker").value(null);
        $("#validate-" + "ddllTableList").html("");
        $("#dtpDateTo").data("kendoDatePicker").enable(false);
        $("#dtpEXPDateTo").data("kendoDatePicker").enable(false);

        $("#List_COMPANY_NAME").hide();
        $("#List_LOCATION_CODE").hide();
        document.getElementById("List_SUBCONTRACT_TYPE").style.display = "";
        //   $("#dtpDateTo").data("kendoDatePicker").enable(false);
        $("#validate-" + "dtpDateFrom").html("");
        $("#validate-" + "dtpDateTo").html("");
        $("#validate-" + "dtpEXPDateFrom").html("");
        $("#validate-" + "dtpEXPDateTo").html("");
        $("#validate-" + "_EFFDATE").html("");

        $('#ddllTableList').data('kendoDropDownList').value("T1");
        $("#gridCostTable1").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable2").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable3").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable4").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable5").data('kendoGrid').dataSource.data([]);
        $("#gridCostTable6").data('kendoGrid').dataSource.data([]);

        $("#gridresult").show();
        $("#gridresult2").hide();
        $("#gridresult3").hide();
        $("#gridresult4").hide();
        $("#gridresult5").hide();
        $("#gridresult6").hide();
        LoadRuleID();

    }
    function showMSG(type, msg, title) {

        $("#headerMessageFeedback").removeClass();
        $("#headerMessageFeedback").addClass("modal-header");
        if (type === "primary") { $("#headerMessageFeedback").addClass("btn-primary"); }
        else if (type === "success") { $("#headerMessageFeedback").addClass("btn-success"); }
        else if (type === "info") { $("#headerMessageFeedback").addClass("btn-info"); }
        else if (type === "warning") { $("#headerMessageFeedback").addClass("btn-warning"); }
        else if (type === "error") { $("#headerMessageFeedback").addClass("btn-danger"); }
        else { $("#headerMessageFeedback").addClass("btn-default"); }

        if (title !== undefined) $("#MessageFeedbackPopUpLabel").text(title); else $("#MessageFeedbackPopUpLabel").text("Notification");

        $("#lbMessageFeedback").html(msg);

        $("#MessageFeedbackPopUp").modal('show');

    }
    function clearValidatefor() {
        $("#validate-" + "ddllTableList").html("");
        $("#validate-" + "dtpDateFrom").html("");
        $("#validate-" + "dtpDateTo").html("");
        $("#validate-" + "dtpEXPDateFrom").html("");
        $("#validate-" + "dtpEXPDateTo").html("");
    }
    function clearValidateforAdd() {
        $("#validate-" + "_EFFDATE").html("");
        $("#validate-" + "_ADDRID").html("");
    }
    function ValidationSearchData() {
        var chk = ValidationProcessing("dateselect");

        if (chk) //check blank value
        {
            //var chk = false;
            clearValidatefor();


            if ($.trim($("#dtpDateFrom").val()) != '') {
                if ($.trim($("#dtpDateTo").val()) == '' || $.trim($("#dtpDateTo").val()) == null) {
                    $("#validate-" + "dtpDateTo").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    chk = true;
                }

            }
            if ($.trim($("#dtpEXPDateFrom").val()) != '') {

                if ($.trim($("#dtpEXPDateTo").val()) == '' || $.trim($("#dtpEXPDateTo").val()) == null) {
                    $("#validate-" + "dtpEXPDateTo").html(ValidationIcon() + "This field is required.");
                    chk = false;

                }
                else {
                    chk = true;

                }

            }
        }
        return chk;
    }


    function ValidationAddData() {
        var chk = ValidationProcessing("dateselect");

        if (chk) //check blank value
        {
            //var chk = false;
            clearValidateforAdd();
            var tb = $("#ddllTableList").val();
            if (tb == "T2") {
                if ($.trim($("#_EFFDATE").val()) == '' || $.trim($("#_EFFDATE").val()) == null) {

                    $("#validate-" + "_EFFDATE").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    chk = true;
                }
                if ($.trim($("#_ADDRESS_ID").val()) == "" || $.trim($("#_ADDRESS_ID").val()) == null) {
                    $("#validate-" + "_ADDRID").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    chk = true;
                }

            }
            else {
                if ($.trim($("#_EFFDATE").val()) == '' || $.trim($("#_EFFDATE").val()) == null) {

                    $("#validate-" + "_EFFDATE").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    chk = true;
                }
            }


        }
        return chk;
    }
</script>

<script src="https://demos.telerik.com/kendo-ui/content/shared/js/products.js"></script>
<script>

    function onClickSearchInPopup() {
        var data;
        var DataResult = new addDataModel();
        DataResult.SUBCONTRACT_LOCATION = $('#_filter_search').val();
        DataResult.COMPANY_NAME = $('#_searchPopup').val();
        $.ajax({
            type: "POST",
            url: "/ConfigurationCostInstallation/GetDataPopup",
            data: { dataS: JSON.stringify(DataResult) },
            dataType: "json",
            async: false,
            success: function (response) {
                data = response;
            },
            failure: function (msg) {
            }
        });
        $("#gridteamid").empty();
        $("#gridteamid").kendoGrid({
            dataSource: {
                data: products,
                schema: {
                    model: {
                        fields: {
                            REGION: {
                                type: "string"
                            },
                            SUBCONTRACT_LOCATION: {
                                type: "string"
                            },
                            SUB_CONTRACTOR_NAME_TH: {
                                type: "string"
                            },
                            TEAM_NAME: {
                                type: "string"
                            },
                            ORG_ID: {
                                type: "string"
                            },
                            //SUBCONTRACT_TYPE: {
                            //    type: "string"
                            //},
                            //SUBCONTRACT_SUB_TYPE: {
                            //    type: "string"
                            //},
                            Discontinued: {
                                type: "boolean"
                            },
                            QuantityPerUnit: {
                                type: "string"
                            }
                        }
                    },
                    parse: function (response) {
                        var products = [];
                        for (var i = 0; i < data.length; i++) {
                            var product = {
                                REGION: data[i].REGION,
                                SUBCONTRACT_LOCATION: data[i].SUBCONTRACT_LOCATION,
                                SUB_CONTRACTOR_NAME_TH: data[i].SUB_CONTRACTOR_NAME_TH,
                                TEAM_NAME: data[i].TEAM_NAME,
                                ORG_ID: data[i].ORG_ID,
                                SUBCONTRACT_TYPE: data[i].SUBCONTRACT_TYPE,
                                SUBCONTRACT_SUB_TYPE: data[i].SUBCONTRACT_SUB_TYPE
                            };
                            products.push(product);
                        }
                        return products;
                    }
                },
                pageSize: 15
            },
            height: 400,
            scrollable: true,
            sortable: true,
            filterable: true,
            pageable: {
                input: true,
                numeric: false
            },
            columns: [{
                field: "REGION",
                template: "<div onclick='cellClick(this)'><a>#if(Discontinued){# #: REGION # #}else{# #: REGION # #}#</a></div>",
                title: "<b>REGION</b>",
                width: "100px"
            },
            {
                field: "SUBCONTRACT_LOCATION",
                title: "LOCATION CODE",
                format: "{0:c}",
                width: "100px"
            },
            {
                field: "SUB_CONTRACTOR_NAME_TH",
                title: "COMPANY NAME",
                width: "100px"
            },
            {
                field: "TEAM_NAME",
                title: "TEAM NAME",
                width: "100px"
            },
            {
                field: "ORG_ID",
                title: "TEAM ID",
                width: "100px"
            }
                ,
            //{
            //    field: "SUBCONTRACT_TYPE",
            //    title: "SUBCONTRACT TYPE",
            //    width: "100px"
            //},
            //{
            //    field: "SUBCONTRACT_SUB_TYPE",
            //    title: "SUBCONTRACT SUB TYPE",
            //    width: "100px"
            //},
            {
                field: "Discontinued",
                hidden: true
            },
            {
                field: "QuantityPerUnit",
                hidden: true
            }
            ]
        });
    }

    $(document).ready(function () {
        $("#gridteamid").kendoGrid({
            dataSource: {
                data: products,
                schema: {
                    model: {
                        fields: {
                            ProductName: {
                                type: "string"
                            },
                            UnitPrice: {
                                type: "number"
                            },
                            UnitsInStock: {
                                type: "number"
                            },
                            Discontinued: {
                                type: "boolean"
                            },
                            QuantityPerUnit: {
                                type: "string"
                            }
                        }
                    },
                    parse: function (response) {
                        var products = [];

                        return products;
                    }
                },
                pageSize: 15
            },
            height: 400,
            scrollable: true,
            sortable: true,
            filterable: true,
            pageable: {
                input: true,
                numeric: false
            },
            columns: [{
                field: "ProductName",
                template: "<div onclick='cellClick(this)'></div>",
                title: "<b>REGION</b>",
                width: "100px"
            },
            {
                field: "UnitPrice",
                title: "LOCATION CODE",
                format: "{0:c}",
                width: "100px"
            },
            {
                field: "UnitsInStock",
                title: "COMPANY NAME",
                width: "100px"
            },
            {
                field: "UnitsInStock",
                title: "TEAM NAME",
                width: "100px"
            },
            {
                field: "UnitsInStock",
                title: "TEAM ID",
                width: "100px"
            },
            //{
            //    field: "UnitsInStock",
            //    title: "SUBCONTRACT TYPE",
            //    width: "100px"
            //},
            //{
            //    field: "UnitsInStock",
            //    title: "SUBCONTRACT SUB TYPE",
            //    width: "100px"
            //},
            {
                field: "Discontinued",
                hidden: true
            },
            {
                field: "QuantityPerUnit",
                hidden: true
            }
            ]
        });
    });

    //We use the discontinued variable to Toggle between properties in cell
    function cellClick(e) {
        var grid = $("#gridteamid").data("kendoGrid");
        var dataItem = grid.dataItem($(e).closest("tr"));
        console.log(dataItem);
        if (dataItem.Discontinued) {
            dataItem.set("Discontinued", false);
            $("#TeamIDPopup").data("kendoWindow").close();
            $("#_SUBCONTRACT_LOCATION").val(dataItem.SUBCONTRACT_LOCATION);
            $("#_COMPANY_NAME").val(dataItem.SUB_CONTRACTOR_NAME_TH);
        } else {
            dataItem.set("Discontinued", true);
            $("#TeamIDPopup").data("kendoWindow").close();
            $("#_SUBCONTRACT_LOCATION").val(dataItem.SUBCONTRACT_LOCATION);
            $("#_COMPANY_NAME").val(dataItem.SUB_CONTRACTOR_NAME_TH);
        }
    }

</script>
