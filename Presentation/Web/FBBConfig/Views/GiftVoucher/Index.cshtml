@using WBBEntity.PanelModels;
@{
    string L_PAGE_VOUCHER = "";
    string L_PAGE_VOUCHER_DETAIL = "";
    string L_PANEL_VOUCHER_PROJECT = "";
    string L_VOUCHER_PROJECT_GROUP = "";
    string L_VOUCHER_PROJECT_DES = "";
    string B_CREATE_VOUCHER_PRO = "";
    string L_PANEL_VOUCHER_PIN = "";
    string L_PIN_TYPE = "";
    string L_NUM_POSITION = "";
    string L_FIXED_VALUE = "";
    string L_FIXED_VALUE_POSITION = "";
    string L_EXCEP_ALPHABET = "";
    string L_PIN_AMOUNT = "";
    string L_START_DATE = "";
    string L_EXPIRED_DATE = "";
    string B_CANCEL = "";
    string B_GENERATE = "";
    string B_EXPORT_EXCEL = "";
    string L_PIN_CODE = "";
    string L_POPUP_VOU_PRO_CFG = "";
    string B_SAVE = "";

    string Input_Num_Position = "";
    string Length_Num_Position = "";
    string Input_Fixed_Value = "";
    string Length_Fixed_Value = "";
    string Input_Vou_Pro_Dec = "";
    string Length_Vou_Pro_Dec = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        L_PAGE_VOUCHER = configscreen.Any(f => f.Name == "L_PAGE_VOUCHER") ? configscreen.First(f => f.Name == "L_PAGE_VOUCHER").LovValue1 : "";
        L_PAGE_VOUCHER_DETAIL = configscreen.Any(f => f.Name == "L_PAGE_VOUCHER_DETAIL") ? configscreen.First(f => f.Name == "L_PAGE_VOUCHER_DETAIL").LovValue1 : "";
        L_PANEL_VOUCHER_PROJECT = configscreen.Any(f => f.Name == "L_PANEL_VOUCHER_PROJECT") ? configscreen.First(f => f.Name == "L_PANEL_VOUCHER_PROJECT").LovValue1 : "";
        L_VOUCHER_PROJECT_GROUP = configscreen.Any(f => f.Name == "L_VOUCHER_PROJECT_GROUP") ? configscreen.First(f => f.Name == "L_VOUCHER_PROJECT_GROUP").LovValue1 : "";
        L_VOUCHER_PROJECT_DES = configscreen.Any(f => f.Name == "L_VOUCHER_PROJECT_DES") ? configscreen.First(f => f.Name == "L_VOUCHER_PROJECT_DES").LovValue1 : "";
        B_CREATE_VOUCHER_PRO = configscreen.Any(f => f.Name == "B_CREATE_VOUCHER_PRO") ? configscreen.First(f => f.Name == "B_CREATE_VOUCHER_PRO").LovValue1 : "";
        L_PANEL_VOUCHER_PIN = configscreen.Any(f => f.Name == "L_PANEL_VOUCHER_PIN") ? configscreen.First(f => f.Name == "L_PANEL_VOUCHER_PIN").LovValue1 : "";
        L_PIN_TYPE = configscreen.Any(f => f.Name == "L_PIN_TYPE") ? configscreen.First(f => f.Name == "L_PIN_TYPE").LovValue1 : "";
        L_NUM_POSITION = configscreen.Any(f => f.Name == "L_NUM_POSITION") ? configscreen.First(f => f.Name == "L_NUM_POSITION").LovValue1 : "";
        L_FIXED_VALUE = configscreen.Any(f => f.Name == "L_FIXED_VALUE") ? configscreen.First(f => f.Name == "L_FIXED_VALUE").LovValue1 : "";
        L_FIXED_VALUE_POSITION = configscreen.Any(f => f.Name == "L_FIXED_VALUE_POSITION") ? configscreen.First(f => f.Name == "L_FIXED_VALUE_POSITION").LovValue1 : "";
        L_EXCEP_ALPHABET = configscreen.Any(f => f.Name == "L_EXCEP_ALPHABET") ? configscreen.First(f => f.Name == "L_EXCEP_ALPHABET").LovValue1 : "";
        L_EXCEP_ALPHABET = configscreen.Any(f => f.Name == "L_EXCEP_ALPHABET") ? configscreen.First(f => f.Name == "L_EXCEP_ALPHABET").LovValue1 : "";
        L_PIN_AMOUNT = configscreen.Any(f => f.Name == "L_PIN_AMOUNT") ? configscreen.First(f => f.Name == "L_PIN_AMOUNT").LovValue1 : "";
        L_START_DATE = configscreen.Any(f => f.Name == "L_START_DATE") ? configscreen.First(f => f.Name == "L_START_DATE").LovValue1 : "";
        L_EXPIRED_DATE = configscreen.Any(f => f.Name == "L_EXPIRED_DATE") ? configscreen.First(f => f.Name == "L_EXPIRED_DATE").LovValue1 : "";
        B_CANCEL = configscreen.Any(f => f.Name == "B_CANCEL") ? configscreen.First(f => f.Name == "B_CANCEL").LovValue1 : "";
        B_GENERATE = configscreen.Any(f => f.Name == "B_GENERATE") ? configscreen.First(f => f.Name == "B_GENERATE").LovValue1 : "";
        B_EXPORT_EXCEL = configscreen.Any(f => f.Name == "B_EXPORT_EXCEL") ? configscreen.First(f => f.Name == "B_EXPORT_EXCEL").LovValue1 : "";
        L_PIN_CODE = configscreen.Any(f => f.Name == "L_PIN_CODE") ? configscreen.First(f => f.Name == "L_PIN_CODE").LovValue1 : "";
        L_POPUP_VOU_PRO_CFG = configscreen.Any(f => f.Name == "L_POPUP_VOU_PRO_CFG") ? configscreen.First(f => f.Name == "L_POPUP_VOU_PRO_CFG").LovValue1 : "";
        B_SAVE = configscreen.Any(f => f.Name == "B_SAVE") ? configscreen.First(f => f.Name == "B_SAVE").LovValue1 : "";
    }

    if (ViewBag.FbbConstant != null)
    {
        var validateconstant = (List<FbbConstantModel>)ViewBag.FbbConstant;

        Input_Num_Position = validateconstant.Any(f => f.Field == "Input_Num_Position") ? validateconstant.First(f => f.Field == "Input_Num_Position").Validation : "";
        Length_Num_Position = validateconstant.Any(f => f.Field == "Length_Num_Position") ? validateconstant.First(f => f.Field == "Length_Num_Position").Validation : "";
        Input_Fixed_Value = validateconstant.Any(f => f.Field == "Input_Fixed_Value") ? validateconstant.First(f => f.Field == "Input_Fixed_Value").Validation : "";
        Length_Fixed_Value = validateconstant.Any(f => f.Field == "Length_Fixed_Value") ? validateconstant.First(f => f.Field == "Length_Fixed_Value").Validation : "";
        Input_Vou_Pro_Dec = validateconstant.Any(f => f.Field == "Input_Vou_Pro_Dec") ? validateconstant.First(f => f.Field == "Input_Vou_Pro_Dec").Validation : "";
        Length_Vou_Pro_Dec = validateconstant.Any(f => f.Field == "Length_Vou_Pro_Dec") ? validateconstant.First(f => f.Field == "Length_Vou_Pro_Dec").Validation : "";
    }
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>GiftVoucher</title>
</head>
<body>
    <div>
        <div class="panel panel-success">
            <div class="panel-heading">
                <i style="font-size: large;">&nbsp;@L_PAGE_VOUCHER_DETAIL</i>
                <a data-toggle="collapse" class="pull-right" href="#CoverageInformation" onclick="onPanelToggle(this);" id="APconfigPanelHolder">
                    <i class="fa fa-chevron-down" id="ArrowIconApconfigCoverage"></i>
                </a>
            </div>
            <div id="CoverageInformation" class="panel-collapse collapse in i-gap-top-1 i-gap-right-1 i-gap-left-1 i-gap-bottom-1">
                <div class="col-sm-8 col-md-8">
                    <label>@L_PANEL_VOUCHER_PROJECT</label>
                </div>
                <div class="col-sm-4 col-md-4 i-text-align-right">
                    <a class="btn btn-default" onclick="CreateNewVoucherProjectPopup();"><i class="fa fa-share-square-o fa-lg"></i>&nbsp;&nbsp;@B_CREATE_VOUCHER_PRO</a>
                </div>

                <div class="row">
                    <div class="col-sm-12 col-md-12">
                        <div class=" panel panel-default">
                            <div class="panel-body">
                                <div class="col-sm-6 col-md-3">
                                    <label>@L_VOUCHER_PROJECT_GROUP <span class="label label-danger i-gap-left-md i-required" id="requiredfor-ddlProjectGroup">Required</span></label>

                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DropDownList()
                                      .Name("ddlProjectGroup")
                                      .DataTextField("Text")
                                      .DataValueField("Value")
                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                      .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("VoucherProjectGroupDropDownList", "GiftVoucher");
                                            });
                                        })
                                       .SelectedIndex(0)
                                       .Events(e => e
                                            .Change("ddlProjectGroup_change")
                                       )
                                    )
                                    </div>

                                    <div class="i-fg-data-entry-validation" id="validatefor-ddlProjectGroup"></div>
                                </div>
                                <div class="col-sm-6 col-md-3">
                                    <label>@L_VOUCHER_PROJECT_DES <span class="label label-danger i-gap-left-md i-required" id="requiredfor-ddlProjectDesc">Required</span></label>

                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DropDownList()
                                      .Name("ddlProjectDesc")
                                      .DataTextField("Text")
                                      .DataValueField("Value")
                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                      .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("VoucherDescriptionDropDownList", "GiftVoucher");
                                            });
                                        })
                                       .SelectedIndex(0)
                                       .Events(e => e
                                            .Change("ddlProjectGroupDesc_change")
                                            .DataBound("ddlProjectGroupDesc_databound")
                                       )
                                    )
                                    </div>

                                    <div class="i-fg-data-entry-validation" id="validatefor-ddlProjectDesc"></div>
                                </div>
                                <div class="col-sm-6 col-md-3">
                                    <label>Voucher Project Code </label>
                                    <div class="i-fg-data-entry">
                                        <input class="k-textbox form-control" id="txtVoucherProjectCode" name="txtVoucherProjectCode" value="" type="text" readonly>
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-txtVoucherProjectCode"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 col-md-12">
                    <label>@L_PANEL_VOUCHER_PIN</label>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-md-12">
                        <div class=" panel panel-default">
                            <div id="panelbodyCoverageIformation" class="panel-body">
                                <div class="col-sm-6 col-md-3">
                                    <label>@L_PIN_TYPE <span class="label label-danger i-gap-left-md i-required" id="requiredfor-ddlPinType">Required</span></label>

                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DropDownList()
                                      .Name("ddlPinType")
                                      .DataTextField("Text")
                                      .DataValueField("Value")
                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                      .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("PINTypeDropDownList", "GiftVoucher");
                                            });
                                        })
                                       .SelectedIndex(0)

                                    )
                                    </div>

                                    <div class="i-fg-data-entry-validation" id="validatefor-ddlPinType"></div>
                                </div>
                                <div class="col-sm-6 col-md-3">
                                    <label>@L_NUM_POSITION <span class="label label-danger i-gap-left-md i-required" id="requiredfor-txtDigitNumber">Required</span></label>

                                    <div class="i-fg-data-entry">
                                        @*<input class="k-textbox form-control" id="txtDigitNumber" name="txtDigitNumber" value="12" type="number" min="1" onchange="CreateFixedCharBox()" max="40">*@
                                        @*@Html.TextBox("txtDigitNumber", "12", new { maxlength = Length_Num_Position, @class = "k-textbox form-control", @type = "number", @min = "1", @max = "40", @onchange = "CreateFixedCharBox()", @onclick = "this.setSelectionRange(0, this.value.length)" })*@
                                        @(Html.Kendo().NumericTextBox()
                                            .Format("#")
                                            .Name("txtDigitNumber")
                                            .Min(1)
                                            .Max(40)
                                            .Value(12)
                                            .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                            .Events(e => e
                                                .Change("CreateFixedCharBox")
                                                .Spin("CreateFixedCharBox")
                                            )
                                        )
                                    </div>

                                    <div class="i-fg-data-entry-validation" id="validatefor-txtDigitNumber"></div>
                                </div>
                                <div class="col-sm-6 col-md-3">
                                    <label>@L_PIN_AMOUNT  <span class="label label-danger i-gap-left-md i-required" id="requiredfor-txtPINAmount">Required</span></label>

                                    <div class="i-fg-data-entry">
                                        @*<input class="k-textbox form-control" id="txtPINAmount" name="txtPINAmount" value="1" type="number" min="1">*@
                                        @*@Html.TextBox("txtPINAmount", "1", new { maxlength = Length_Num_Position, @class = "k-textbox form-control", @type = "number", @min = "1", @max = "5000", @onclick = "this.setSelectionRange(0, this.value.length)" })*@
                                        @(Html.Kendo().NumericTextBox()
                                            .Format("#")
                                            .Name("txtPINAmount")
                                            .Min(1)
                                            .Max(10000)
                                            .Value(1)
                                            .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                        )
                                    </div>

                                    <div class="i-fg-data-entry-validation" id="validatefor-txtPINAmount"></div>
                                </div>
                                <div class="col-sm-6 col-md-3">
                                    <label>@L_EXCEP_ALPHABET</label>

                                    @*<input class="k-textbox form-control" id="txtExceptedChar" name="txtExceptedChar" value="" type="text">*@
                                    @Html.TextBox("txtExceptedChar", "", new { maxlength = Length_Fixed_Value, @class = "k-textbox form-control", @type = "text" })

                                    <div class="i-fg-data-entry-validation" id="validatefor-txtExceptedChar"></div>
                                </div>
                                <div class="col-sm-6 col-md-12">
                                    <label>@L_FIXED_VALUE</label>
                                    <div id="FixedCharPane">
                                        @*<input class="k-textbox form-control" id="txtFixedVal" name="txtFixedVal" value="" type="text">*@
                                    </div>
                                    @*<div class="i-fg-data-entry-validation" id="validatefor-"></div>*@
                                </div>
                                @*<div class="col-sm-6 col-md-3">
                                        <label>Fixed Position </label>

                                        <input class="k-textbox form-control" id="txtFixedPosition" name="txtFixedPosition" value="" type="number" min="1">

                                        <div class="i-fg-data-entry-validation"></div>
                                    </div>*@
                                <div class="col-sm-6 col-md-3">
                                    <label>@L_START_DATE</label>

                                    @(Html.Kendo().DatePicker()
                                        .Name("dtpStartDate")
                                        .Min(DateTime.Today)
                                        .Format("dd/MM/yyyy")
                                        .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                        .Events(e => e.Change("OndtpStartDateChange"))
                                        .HtmlAttributes(new { @class = "form-control i-form-control-extend", @placeholder = "dd/mm/yyyy" })
                                    )

                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpStartDate"></div>
                                </div>
                                <div class="col-sm-6 col-md-3">
                                    <label>@L_EXPIRED_DATE</label>

                                    @(Html.Kendo().DatePicker()
                                        .Name("dtpExpiredDate")
                                        .Min(DateTime.Today)
                                        .Format("dd/MM/yyyy")
                                        .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                        .HtmlAttributes(new { @class = "form-control i-form-control-extend", @placeholder = "dd/mm/yyyy" })
                                    )

                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpExpiredDate"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-md-12 i-text-align-right">
                        <a class="btn btn-default" onclick="_Clear();"><i class="fa fa-ban fa-lg"></i>&nbsp;&nbsp;@B_CANCEL</a>
                        <a class="btn btn-success" onclick="GeneratePINs();"><i class="fa fa-check-circle-o fa-lg"></i>&nbsp;&nbsp;@B_GENERATE</a>
                    </div>
                </div>
            </div>
        </div>

        <div id="gridresult" class="row">
            <div class="col-sm-12 col-md-12 ">
                @(Html.Kendo().Grid<WBBEntity.Models.FBB_VOUCHER_PIN>()
                        .Name("gridVoucherList")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.VOUCHER_PIN).Title(L_PIN_CODE).HtmlAttributes(new { style = "text-align:left;" });
                            columns.Bound(p => p.START_DATE).Title(L_START_DATE).HtmlAttributes(new { style = "text-align:left;" }).Format("{0:dd/MM/yyyy}");
                            columns.Bound(p => p.EXPIRE_DATE).Title(L_EXPIRED_DATE).HtmlAttributes(new { style = "text-align:left;" }).Format("{0:dd/MM/yyyy}");
                        })
                                .ToolBar(toolbar => toolbar.Template("<div class='pull-right'><a onclick='_ExportToExcel()' id='btnExport'  class='btn btn-default'><i class='fa fa-reply fa-lg'></i>&nbsp; " + B_EXPORT_EXCEL + "</a></div>"))
                        .Pageable(pageable => pageable
                            .PageSizes(true)
                            .Numeric(true)
                        )
                        .Sortable()
                        .AutoBind(false)
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(10)
                            .Read(read => read.Action("ShowGiftVoucherPINs", "GiftVoucher").Data("bindingValue"))
                        )
                )
            </div>
        </div>
    </div>

    <div hidden>
        <input type="number" id="txtLot" name="txtLot" />
    </div>
    @(Html.Kendo().Window()
    .Name("CreateVoucherProjectPopup")
    .HtmlAttributes(new { @class = "i-gap-popup" })
    .Title(L_POPUP_VOU_PRO_CFG)
    .Width(400)
    .Draggable()
    .Visible(false)
    .Modal(true)
   .Content(@<text>
    <div class="row i-no-over" id="AddPopupPanel">
        <div class="col-md-12">
            <div class="form-group">
                <label>@L_VOUCHER_PROJECT_GROUP <span class="label label-danger i-gap-left-md i-required" id="requiredfor-ddlCreateProjectGroup">Required</span></label>
                <div class="i-fg-data-entry">
                    @(Html.Kendo().DropDownList()
                            .Name("ddlCreateProjectGroup")
                            .HtmlAttributes(new { style = "width:100%" })
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("VoucherProjectGroupDropDownList", "GiftVoucher");
                                });
                            })
                        )

                </div>
                <div class="i-fg-data-entry-validation" id="validatefor-ddlCreateProjectGroup"></div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group">
                <label>@L_VOUCHER_PROJECT_DES <span class="label label-danger i-gap-left-md i-required" id="requiredfor-txtCreateProjectDesc">Required</span></label>
                <div class="i-fg-data-entry">
                    @*<input type="text" id="txtCreateProjectDesc" class="dis k-textbox form-control" maxlength="50" />*@
                    @Html.TextBox("txtCreateProjectDesc", "", new { maxlength = Length_Vou_Pro_Dec, @class = "k-textbox form-control", @type = "text" })
                </div>
                <div class="i-fg-data-entry-validation" id="validatefor-txtCreateProjectDesc"></div>
            </div>
        </div>


        <div class="col-md-12">
            <div class="col-md-11">
                <button class="btn btn-success i-gap-top-1 pull-right" onclick="CreateNewVoucherProject()" id="btnSave"><i class="fa fa-check-circle fa-lg"></i>&nbsp; @B_SAVE</button>
                <button class="btn btn-default i-gap-top-1 pull-right" onclick="CancelPopup()" id="btncancepop"><i class="fa fa-ban fa-lg"></i>&nbsp; @B_CANCEL</button>
            </div>
        </div>

    </div>
    </text>)
    )
    @(Html.Kendo().Window()
    .Name("MyPopupLoading")
    .HtmlAttributes(new { @class = "i-gap-popup" })
    .Title(false)
    .Modal(true)
    .Visible(false)
    .Content(@<text>
    <div style="margin: 0 80px;"><font size="4">Loading &nbsp;<i class="fa fa-refresh fa-spin"></i></font></div>
    </text>)
    )
</body>
</html>

<script>
    var r;

    $(document).ready(function () {
        //$("#txtDigitNumber").kendoNumericTextBox();
        //$("#txtFixedPosition").kendoNumericTextBox();
        //$("#txtPINAmount").kendoNumericTextBox();
        CreateFixedCharBox();
    });

    function OndtpStartDateChange(e) {
        var selectedDate = new Date($("#dtpStartDate").data("kendoDatePicker").value());
        $("#dtpExpiredDate").data("kendoDatePicker").value("");
        $("#dtpExpiredDate").kendoDatePicker({
            min: new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate() + 1),
            format: "dd/MM/yyyy",
        });
    }

    function _ExportToExcel() {
        var model = new defaultData();
        window.open("/GiftVoucher/ExportData?dataS=" + JSON.stringify(model) + "");
        //window.open("/GiftVoucher/ExportData?dataS=" + JSON.stringify($("#gridVoucherList").data("kendoGrid").dataSource) + "");
    }

    function bindingValue() {
        var model = defaultData();
        return {
            dataS: JSON.stringify(model)
        };
    }

    function defaultData() {

        var paramModel = new GiftVoucherParamModel();

        paramModel.voucher_master_id = $("#ddlProjectDesc").data("kendoDropDownList").value();
        paramModel.lot = $("#txtLot").val();

        return paramModel;
    }

    var GiftVoucherParamModel = function () {

        pin_type: "";
        pin_length: "";
        exceptedChar: "";
        fixedChar: "";
        fixedPosition: "";

        start_date: "";
        expired_date: "";

        AmountPINs: "";

        voucher_master_id: "";
        lot: "";
    }

    function bindingDropDown() {
        var model = defaultDropDownData();
        return {
            dataS: JSON.stringify(model)
        };
    }

    //function _Gen() {
    //    if (!isNumeric($("#txtDigitNumber").val())) return;
    //    if (!isNumeric($("#txtPINAmount").val())) return;
    //    if ($("#txtFixedVal").val() != "" || $("#txtFixedPosition").val() != "") {
    //        if ($("#txtFixedVal").val() == "") return;
    //        if ($("#txtFixedPosition").val() == "") return;
    //        if (!isNumeric($("#txtFixedPosition").val())) return;
    //        //if (parseInt($("#txtFixedPosition").val()) > parseInt($("#txtDigitNumber").val()) - 1) return;
    //    }

    //    var model = defaultData();
    //    Loading();
    //    var grid = $("#gridVoucherList").data("kendoGrid");
    //    grid.dataSource.page(1);
    //    Loading(0);
    //}

    function isNumeric(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    function _Clear() {
        RemoveValidation(validateModel);

        $("#gridVoucherList").data('kendoGrid').dataSource.data([]);
        $("#ddlProjectGroup").data("kendoDropDownList").select(0);
        $("#ddlProjectGroup").data("kendoDropDownList").trigger("change");
        $("#ddlPinType").data("kendoDropDownList").select(0);
        //$("#txtDigitNumber").val("12");
        $("#txtDigitNumber").kendoNumericTextBox({
            value: 12,
            format: "#",
        });
        CreateFixedCharBox();
        $("#txtExceptedChar").val("");
        //$("#txtFixedVal").val("");

        var CurrDate = new Date();
        $("#dtpStartDate").data("kendoDatePicker").value("");
        $("#dtpStartDate").kendoDatePicker({
            min: new Date(CurrDate.getFullYear(), CurrDate.getMonth(), CurrDate.getDate()),
            format: "dd/MM/yyyy",
        });
        $("#dtpExpiredDate").data("kendoDatePicker").value("");
        $("#dtpExpiredDate").kendoDatePicker({
            min: new Date(CurrDate.getFullYear(), CurrDate.getMonth(), CurrDate.getDate()),
            format: "dd/MM/yyyy",
        });

        //$("#txtPINAmount").val("1");
        $("#txtPINAmount").kendoNumericTextBox({
            value: 1,
            format: "#"
        });
    }

    function CreateFixedCharBox() {
        var nBox = parseInt($("#txtDigitNumber").val());
        //var nBox = parseInt($("#txtDigitNumber").data("kendoNumericTextBox").value());
        var htmlcode = "";
        for (i = 0; i < nBox; i++) {
            if (i == nBox - 1) {
                htmlcode = htmlcode.concat("<div style='float: left; width: 45px;'><input class='k-textbox form-control' type='text' maxlength='1' style='width: 98%; text-align: center' id='txtfixedchar" + i + "' name='txtfixedchar" + i + "' onkeypress='SetCursorToNextFixedBox(this, event)' onselect='this.setSelectionRange(0, this.value.length)' readonly></div>");
            }
            else {
                htmlcode = htmlcode.concat("<div style='float: left; width: 45px;'><input class='k-textbox form-control' type='text' maxlength='1' style='width: 98%; text-align: center' id='txtfixedchar" + i + "' name='txtfixedchar" + i + "' onkeypress='SetCursorToNextFixedBox(this, event)' onselect='this.setSelectionRange(0, this.value.length)'></div><div class='i-fg-data-entry-validation' id='validatefor-txtfixedchar" + i + "'></div>");
            }
        }
        $('#FixedCharPane').html(htmlcode);
        $('#FixedCharPane').find('input').inputmask('Regex', {
            regex: "@Input_Fixed_Value",
        });
    }
    function SetCursorToNextFixedBox(element, event) {
        //alert(event.keyCode);
        //debugger;
        var curr = parseInt(element.id.substr(12));
        var _Digitnumber = parseInt($("#txtDigitNumber").val());
        //var _Digitnumber = parseInt($("#numerictextbox").data("kendoNumericTextBox").value());
        if (event.keyCode == 8 || event.keyCode == 37) {

            if (curr - 1 >= 0)
                curr--;
        }
        else if (event.keyCode == 38) {
            if (curr + 1 < _Digitnumber - 1)
                curr++;
        }
        else {
            if (curr + 1 < _Digitnumber - 1)
                curr++;
        }
        //$("#txtfixedchar" + curr).focus();
        $("#txtfixedchar" + curr).select();
    }
    function CheckPINKeyUps(element, event) {
        var strKey = $(element).val();
        var strBuilder = "";
        var filter = new RegExp("@Input_Fixed_Value");
        for (var i = 0; i < strKey.length; i++) {
            if (filter.test(strKey.substr(i, 1))) {
                strBuilder += strKey.substr(i, 1);
            }
        }
        $(element).val(strBuilder);
    }
    function GeneratePINs() {
        var pin_length = $("#txtDigitNumber").val();
        //var pin_length = $("#txtDigitNumber").data("kendoNumericTextBox").value();
        var chk = ValidationProcessingRequired("CoverageInformation");

        if (!isNumeric(pin_length)) {
            $("#txtDigitNumber").val("");
            $("#txtDigitNumber").select();
        }
        if (chk) {
            Loading();
            r = setTimeout(ajaxGenPINs, 500);
        }
        else {
        }
    }
    function ajaxGenPINs() {
        var pin_type = $("#ddlPinType").data("kendoDropDownList").value()
        var pin_length = $("#txtDigitNumber").val();
        //var pin_length = $("#txtDigitNumber").data("kendoNumericTextBox").value();
        var exceptedChar = $("#txtExceptedChar").val();

        var start_date = $("input[name=dtpStartDate]").val();
        var expired_date = $("input[name=dtpExpiredDate]").val();

        var AmountPINs = $("#txtPINAmount").val();

        var voucher_master_id = $("#ddlProjectDesc").data("kendoDropDownList").value();

        var nBox = parseInt(pin_length);
        var fixedChar = "";
        for (i = 0; i < nBox - 1; i++) {
            if ($("#txtfixedchar" + i).val().length != 0) {
                fixedChar = fixedChar.concat($("#txtfixedchar" + i).val());
            }
            else {
                fixedChar = fixedChar.concat("?");
            }
        }
        var lot = 0;
        $.ajax({
            type: "GET",
            url: "/GiftVoucher/GetLastLot",
            data: { "voucher_master_id": voucher_master_id },
            async: false,
            dataType: "json",
            success: function (data) {
                lot = parseInt(data) + 1;
                $("#txtLot").val(lot);

                $.ajax({
                    type: "GET",
                    url: "/GiftVoucher/GenPINs",
                    data: { "pin_type": pin_type, "pin_length": pin_length, "exceptedChar": exceptedChar, "fixedChar": fixedChar, "start_date": start_date, "expired_date": expired_date, "AmountPINs": AmountPINs, "voucher_master_id": voucher_master_id, "lot": lot },
                    async: false,
                    dataType: "json",
                    success: function (data) {
                        //alert("GenPINs-success:" + data);
                        _ViewData();
                        //_ShowData();
                        //Loading(0);
                    },
                    error: function (data) {
                        //alert("GenPINs-error:" +data);
                        _ViewData();
                    }
                });
            },
            error: function (data) {
                Loading(0);
            }
        });
    }
    function _ViewData() {

        var AmountPINs = $("#txtPINAmount").val();

        var voucher_master_id = $("#ddlProjectDesc").data("kendoDropDownList").value();
        var lot = $("#txtLot").val();
        //alert("ViewData: " + AmountPINs + ", " + voucher_master_id + ", " + lot);
        $.ajax({
            type: "GET",
            url: "/GiftVoucher/CheckGenSuccess",
            data: { "AmountPINs": AmountPINs, "voucher_master_id": voucher_master_id, "lot": lot },
            async: false,
            dataType: "json",
            success: function (data) {
                //alert("ViewData-success:" + data);
                if (data == true) {
                    //alert("show data");
                    _ShowData();
                    Loading(0);
                }
                else {
                    //alert("wait");
                    r = setTimeout(_ViewData, 30000);
                }
            },
            error: function (data) {
                //alert("ViewData-error:" + data);
                r = setTimeout(_ViewData, 30000);
            }
        });


    }
    function _ShowData() {
        var model = defaultData();

        var grid = $("#gridVoucherList").data("kendoGrid");
        grid.dataSource.page(1);
    }

    function CreateNewVoucherProjectPopup() {
        $("#validatefor-ddlCreateProjectGroup").html("");
        $("#validatefor-txtCreateProjectDesc").html("");
        $("#CreateVoucherProjectPopup").data("kendoWindow").center();
        $("#CreateVoucherProjectPopup").data("kendoWindow").open();
    }
    function CreateNewVoucherProject() {
        var chk = ValidationProcessingRequired("AddPopupPanel");

        if (chk) {
            //alert("save");
            $.ajax({
                type: "GET",
                url: "/GiftVoucher/CreateNewVoucherProject",
                data: { "ProjectGroup": $("#ddlCreateProjectGroup").data("kendoDropDownList").value(), "ProjectDesc": $("#txtCreateProjectDesc").val() },
                async: false,
                dataType: "json",
                success: function (data) {
                    //alert("Success");
                    if (data == "DUPLICATE") {
                        showFeedback("error", "Create Failed. " + $("#txtCreateProjectDesc").val() + " has dulplicate.", "Create Voucher Project");
                    }
                    else if (data == "SUCCESS") {
                        showFeedback("success", "Create " + $("#txtCreateProjectDesc").val() + " Success", "Create Voucher Project");
                    }
                    else {
                        showFeedback("error", data, "Create Voucher Project");
                    }
                    CancelPopup();
                    $("#ddlProjectGroup").data("kendoDropDownList").select(0);
                    $("#ddlProjectGroup").data("kendoDropDownList").trigger("change");
                },
                error: function (data) {
                    //alert(data);
                }
            });
        }
    }
    function CancelPopup() {
        $("#ddlCreateProjectGroup").data("kendoDropDownList").select(0);
        $("#txtCreateProjectDesc").val("");
        $("#CreateVoucherProjectPopup").data("kendoWindow").close();
    }
    function ddlProjectGroup_change() {
        $("#ddlProjectDesc").data("kendoDropDownList").dataSource.read({ ProjectGroup: $("#ddlProjectGroup").data("kendoDropDownList").value() });
    }
    function ddlProjectGroupDesc_change() {
        $.ajax({
            type: "GET",
            url: "/GiftVoucher/GetVoucherProjectCode",
            data: { "ProjectGroup": $("#ddlProjectGroup").data("kendoDropDownList").value(), "ID": $("#ddlProjectDesc").data("kendoDropDownList").value() },
            async: false,
            dataType: "json",
            success: function (data) {
                $("#txtVoucherProjectCode").val(data);
            },
            error: function (data) {
                $("#txtVoucherProjectCode").val("");
                alert(data);
            }
        });
    }
    function ddlProjectGroupDesc_databound() {
        $("#txtVoucherProjectCode").val("");
    }


    /////////////////////Validate Function///////////////////////////////
    var validateModel = [];
    validateModel.push({ id: "ddlProjectGroup" });
    validateModel.push({ id: "ddlProjectDesc" });
    validateModel.push({ id: "ddlPinType" });
    validateModel.push({ id: "txtDigitNumber" });
    validateModel.push({ id: "txtPINAmount" });
    $(function () {
        SetRequired(validateModel);
    });
    function ValidationIcon() {
        return "<i class='fa fa-warning i-red'></i> ";
    }
    function ValidationProcessingRequired(panel) {
        var chk = true;
        $("#" + panel + " .i-required").each(function (index, e) {
            var field = e.id.split('requiredfor-')[1];
            var value = $("#" + field).val();
            if ($.trim(value) == "") {
                $("#validatefor-" + field).html(ValidationIcon() + "This field is required.");
                chk = false;
            }
            else {
                $("#validatefor-" + field).html("");
            }
        });

        if (chk) {
            $("#" + panel + " .i-validate-length").each(function (index, e) {
                var field = e.id.split('validatefor-')[1];
                var value = $("#" + field).val();
                var length = parseInt(e.className.split('i-length-')[1]);
                var val_length = 0;
                if (value != "") {
                    val_length = value.length;
                }

                if (val_length > length) {
                    $("#" + e.id).html(ValidationIcon() + "This maxlength field is " + length + ".");
                    chk = false;
                }
                else {
                    $("#" + e.id).html("");
                }
            });
        }

        return chk;
    }

    function SetRequired(validateModel) {
        var i = 0;
        for (i = 0; i < validateModel.length; i++) {
            var id = validateModel[i].id;
            $("#requiredfor-" + id).addClass("label label-danger i-gap-left-md i-required");
            $("#requiredfor-" + id).text("Required");
        }
    }

    function SetValidateLength(validateLengthModel) {
        var i = 0;
        for (i = 0; i < validateLengthModel.length; i++) {
            var id = validateLengthModel[i].id;
            var length = validateLengthModel[i].length;
            if (length !== undefined) {
                $("#validatefor-" + id).addClass("i-validate-length i-length-" + length);
            }
        }
    }

    function RemoveRequired(panel) {
        $("#" + panel + " span[id*=requiredfor-]").removeClass("label label-danger i-gap-left-md i-required");
        $("#" + panel + " span[id*=requiredfor-]").text("");
        ClearTextValidation(panel);
    }

    function ClearTextValidation(panel) {
        $("#" + panel + " .i-required").each(function (index, e) {
            var field = e.id.split('requiredfor-')[1];
            $("#validatefor-" + field).text("");
        });
    }

    function RemoveValidation(validateModel) {
        var i = 0;
        for (i = 0; i < validateModel.length; i++) {
            var id = validateModel[i].id;
            $("#validatefor-" + id).html("");
        }
    }
    @*$('#txtDigitNumber').inputmask('Regex', {
        regex: "@Input_Num_Position",
    });*@
    $('#txtPINAmount').inputmask('Regex', {
        regex: "@Input_Num_Position",
    });
    $('#txtExceptedChar').inputmask('Regex', {
        regex: "@Input_Fixed_Value",
    });
    $('#txtCreateProjectDesc').inputmask('Regex', {
        regex: "@Input_Vou_Pro_Dec",
    });

    function Loading(x) {
        if (x == 0) {
            $("#MyPopupLoading").data("kendoWindow").close();
        }
        else {
            $("#MyPopupLoading").data("kendoWindow").center();
            $("#MyPopupLoading").data("kendoWindow").open();
        }
    }
</script>
