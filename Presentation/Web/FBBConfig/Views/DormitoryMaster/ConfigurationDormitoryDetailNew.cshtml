@model WBBEntity.PanelModels.FBBWebConfigModels.DormitoryMasterModel
@using WBBEntity.PanelModels;
@{
 

    string ADMIN001_H_01 = "";
    string L_DORMITORY_NAME_TH = "";
    string L_DORMITORY_NAME_EN = "";
    string L_BUILDING_TH = "";
    string L_BUILDING_EN = "";
    string L_SUB_CONTRACT_CODE = "";
    string L_SUB_CONTRACT_NAME = "";
    string L_OTY_ROOM = "";
    string L_HOUSE_NO = "";
    string L_MOO = "";
    string L_SOI = "";
    string L_STREET = "";
    string L_TUMBON = "";
    string L_AMPHUR = "";
    string L_PROVINCE = "";
    string L_POSTCODE = "";
    string L_OTY_ROOM_EN = "";
    string L_HOUSE_NO_EN = "";
    string L_MOO_EN = "";
    string L_SOI_EN = "";
    string L_STREET_EN = "";
    string L_TUMBON_EN = "";
    string L_AMPHUR_EN = "";
    string L_PROVINCE_EN = "";
    string L_POSTCODE_EN = "";
    string B_ADD_NEW = "";
    string B_EDIT = "";
    string B_SAVE = "";
    string H_CONTRACT_DORM = "";
    string L_CONTRACT_NAME = "";
    string L_CONTRACT_EMAIL = "";
    string L_CONTRACT_PHONE = "";
    string H_TARGET_LAUCH = "";
    string L_TARGET_LAUCH_DT = "";
    string L_LAUCH_DT = "";
    string L_TARGET_VOLUMN = "";
    string L_VOLUMN = "";

    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        ADMIN001_H_01 = configscreen.Any(f => f.Name == "H_DORMITORY_SUB_MENU_1_5") ? configscreen.FirstOrDefault(f => f.Name == "H_DORMITORY_SUB_MENU_1_5").LovValue2 : "";
        L_DORMITORY_NAME_TH = configscreen.Any(f => f.Name == "L_DORMITORY_NAME") ? configscreen.First(f => f.Name == "L_DORMITORY_NAME").LovValue1 : "";
        L_DORMITORY_NAME_EN = configscreen.Any(f => f.Name == "L_DORMITORY_NAME") ? configscreen.First(f => f.Name == "L_DORMITORY_NAME").LovValue2 : "";
        //      L_SUB_CONTRACT_CODE = configscreen.Any(f => f.Name == "ADMIN001_SUB_H_SUBCONTRACT_CD") ? configscreen.First(f => f.Name == "ADMIN001_SUB_H_SUBCONTRACT_CD").LovValue1 : "";
        //  L_SUB_CONTRACT_NAME = configscreen.Any(f => f.Name == "ADMIN001_SUB_H_SUBCONTRACT_NAME") ? configscreen.First(f => f.Name == "ADMIN001_SUB_H_SUBCONTRACT_NAME").LovValue1 : "";
        L_HOUSE_NO = configscreen.Any(f => f.Name == "L_HOUSE_NO") ? configscreen.First(f => f.Name == "L_HOUSE_NO").LovValue1 : "";
        L_MOO = configscreen.Any(f => f.Name == "L_MOO") ? configscreen.First(f => f.Name == "L_MOO").LovValue1 : "";
        L_SOI = configscreen.Any(f => f.Name == "L_SOI") ? configscreen.First(f => f.Name == "L_SOI").LovValue1 : "";
        L_STREET = configscreen.Any(f => f.Name == "L_STREET") ? configscreen.First(f => f.Name == "L_STREET").LovValue1 : "";
        L_TUMBON = configscreen.Any(f => f.Name == "L_TUMBOL") ? configscreen.First(f => f.Name == "L_TUMBOL").LovValue1 : "";
        L_AMPHUR = configscreen.Any(f => f.Name == "L_AMPHUR") ? configscreen.First(f => f.Name == "L_AMPHUR").LovValue1 : "";
        L_PROVINCE = configscreen.Any(f => f.Name == "L_PROVINCE") ? configscreen.First(f => f.Name == "L_PROVINCE").LovValue1 : "";
        L_POSTCODE = configscreen.Any(f => f.Name == "L_POSTCODE") ? configscreen.First(f => f.Name == "L_POSTCODE").LovValue1 : "";
        L_OTY_ROOM_EN = configscreen.Any(f => f.Name == "ADMIN001_SUB_H_QTY_ROOM") ? configscreen.First(f => f.Name == "ADMIN001_SUB_H_QTY_ROOM").LovValue2 : "";
        L_HOUSE_NO_EN = configscreen.Any(f => f.Name == "L_HOUSE_NO") ? configscreen.First(f => f.Name == "L_HOUSE_NO").LovValue2 : "";
        L_MOO_EN = configscreen.Any(f => f.Name == "L_MOO") ? configscreen.First(f => f.Name == "L_MOO").LovValue2 : "";
        L_SOI_EN = configscreen.Any(f => f.Name == "L_SOI") ? configscreen.First(f => f.Name == "L_SOI").LovValue2 : "";
        L_STREET_EN = configscreen.Any(f => f.Name == "L_STREET") ? configscreen.First(f => f.Name == "L_STREET").LovValue2 : "";
        L_TUMBON_EN = configscreen.Any(f => f.Name == "L_TUMBOL") ? configscreen.First(f => f.Name == "L_TUMBOL").LovValue2 : "";
        L_AMPHUR_EN = configscreen.Any(f => f.Name == "L_AMPHUR") ? configscreen.First(f => f.Name == "L_AMPHUR").LovValue2 : "";
        L_PROVINCE_EN = configscreen.Any(f => f.Name == "L_PROVINCE") ? configscreen.First(f => f.Name == "L_PROVINCE").LovValue2 : "";
        L_POSTCODE_EN = configscreen.Any(f => f.Name == "L_POSTCODE") ? configscreen.First(f => f.Name == "L_POSTCODE").LovValue2 : "";

        L_BUILDING_TH = configscreen.Any(f => f.Name == "G_BUILDING_NAME") ? configscreen.First(f => f.Name == "G_BUILDING_NAME").LovValue1 : "";
        L_BUILDING_EN = configscreen.Any(f => f.Name == "G_BUILDING_NAME") ? configscreen.First(f => f.Name == "G_BUILDING_NAME").LovValue2 : "";
        L_OTY_ROOM = configscreen.Any(f => f.Name == "G_ROOM_AMOUNT") ? configscreen.First(f => f.Name == "G_ROOM_AMOUNT").LovValue2 : "";
        B_ADD_NEW = configscreen.Any(f => f.Name == "B_ADD_NEW_BUILDING") ? configscreen.First(f => f.Name == "B_ADD_NEW_BUILDING").LovValue1 : "";
        B_EDIT = configscreen.Any(f => f.Name == "B_EDIT") ? configscreen.First(f => f.Name == "B_EDIT").LovValue1 : "";
        B_SAVE = configscreen.Any(f => f.Name == "B_SAVE") ? configscreen.First(f => f.Name == "B_SAVE").LovValue2 : "";
        
        H_CONTRACT_DORM = configscreen.Any(f => f.Name == "H_CONTRACT_DORM") ? configscreen.First(f => f.Name == "H_CONTRACT_DORM").LovValue1 : "";
        L_CONTRACT_NAME = configscreen.Any(f => f.Name == "L_CONTRACT_NAME") ? configscreen.First(f => f.Name == "L_CONTRACT_NAME").LovValue1 : "";
        L_CONTRACT_EMAIL = configscreen.Any(f => f.Name == "L_CONTRACT_EMAIL") ? configscreen.First(f => f.Name == "L_CONTRACT_EMAIL").LovValue1 : "";
        L_CONTRACT_PHONE = configscreen.Any(f => f.Name == "L_CONTRACT_PHONE") ? configscreen.First(f => f.Name == "L_CONTRACT_PHONE").LovValue1 : "";
        H_TARGET_LAUCH = configscreen.Any(f => f.Name == "H_TARGET_LAUCH") ? configscreen.First(f => f.Name == "H_TARGET_LAUCH").LovValue1 : "";
        L_TARGET_LAUCH_DT = configscreen.Any(f => f.Name == "L_TARGET_LAUCH_DT") ? configscreen.First(f => f.Name == "L_TARGET_LAUCH_DT").LovValue1 : "";
        L_LAUCH_DT = configscreen.Any(f => f.Name == "L_LAUCH_DT") ? configscreen.First(f => f.Name == "L_LAUCH_DT").LovValue1 : "";
        L_TARGET_VOLUMN = configscreen.Any(f => f.Name == "L_TARGET_VOLUMN") ? configscreen.First(f => f.Name == "L_TARGET_VOLUMN").LovValue1 : "";
        L_VOLUMN = configscreen.Any(f => f.Name == "L_VOLUMN") ? configscreen.First(f => f.Name == "L_VOLUMN").LovValue1 : "";

    }

    string INPUT_DORMITORY_NAME_TH = "";
    string INPUT_DORMITORY_NAME_EN = "";
    string INPUT_BUILDING_TH = "";
    string INPUT_BUILDING_EN = "";
    string INPUT_HOUSE_NO = "";
    string INPUT_MOO = "";
    string INPUT_SOI = "";
    string INPUT_STREET = "";
    string INPUT_HOUSE_NO_EN = "";
    string INPUT_MOO_EN = "";
    string INPUT_SOI_EN = "";
    string INPUT_STREET_EN = "";
    string LENGTH_DORMITORY_NAME_TH = "";
    string LENGTH_DORMITORY_NAME_EN = "";
    string LENGTH_BUILDING_TH = "";
    string LENGTH_BUILDING_EN = "";
    string LENGTH_HOUSE_NO = "";
    string LENGTH_MOO = "";
    string LENGTH_SOI = "";
    string LENGTH_STREET = "";
    string LENGTH_OTY_ROOM_EN = "";
    string LENGTH_HOUSE_NO_EN = "";
    string LENGTH_MOO_EN = "";
    string LENGTH_SOI_EN = "";
    string LENGTH_STREET_EN = "";

    string INPUT_OTY_ROOM_EN = "";

    if (ViewBag.DormConstant != null)
    {
        var DormConstant = (List<FbbConstantModel>)ViewBag.DormConstant;
        INPUT_DORMITORY_NAME_TH = DormConstant.Any(f => f.Field == "V_DORMITORY_NAME_TH") ? DormConstant.First(f => f.Field == "V_DORMITORY_NAME_TH").Validation : "";
        INPUT_DORMITORY_NAME_EN = DormConstant.Any(f => f.Field == "V_DORMITORY_NAME_EN") ? DormConstant.First(f => f.Field == "V_DORMITORY_NAME_EN").Validation : "";
        INPUT_BUILDING_TH = DormConstant.Any(f => f.Field == "V_BUILDING_NAME_TH") ? DormConstant.First(f => f.Field == "V_BUILDING_NAME_TH").Validation : "";
        INPUT_BUILDING_EN = DormConstant.Any(f => f.Field == "V_BUILDING_NAME_EN") ? DormConstant.First(f => f.Field == "V_BUILDING_NAME_EN").Validation : "";
        INPUT_HOUSE_NO = DormConstant.Any(f => f.Field == "V_HOUSE_NO_TH") ? DormConstant.First(f => f.Field == "V_HOUSE_NO_TH").Validation : "";
        INPUT_MOO = DormConstant.Any(f => f.Field == "V_MOO_TH") ? DormConstant.First(f => f.Field == "V_MOO_TH").Validation : "";
        INPUT_SOI = DormConstant.Any(f => f.Field == "V_SOI_TH") ? DormConstant.First(f => f.Field == "V_SOI_TH").Validation : "";
        INPUT_STREET = DormConstant.Any(f => f.Field == "V_ROAD_TH") ? DormConstant.First(f => f.Field == "V_ROAD_TH").Validation : "";
        INPUT_OTY_ROOM_EN = DormConstant.Any(f => f.Field == "V_ROOM_AMOUNT") ? DormConstant.First(f => f.Field == "V_ROOM_AMOUNT").Validation : "";
        INPUT_HOUSE_NO_EN = DormConstant.Any(f => f.Field == "V_HOUSE_NO_EN") ? DormConstant.First(f => f.Field == "V_HOUSE_NO_EN").Validation : "";
        INPUT_MOO_EN = DormConstant.Any(f => f.Field == "V_MOO_EN") ? DormConstant.First(f => f.Field == "V_MOO_EN").Validation : "";
        INPUT_SOI_EN = DormConstant.Any(f => f.Field == "V_SOI_EN") ? DormConstant.First(f => f.Field == "V_SOI_EN").Validation : "";
        INPUT_STREET_EN = DormConstant.Any(f => f.Field == "V_ROAD_EN") ? DormConstant.First(f => f.Field == "V_ROAD_EN").Validation : "";
        LENGTH_DORMITORY_NAME_TH = DormConstant.Any(f => f.Field == "INPUT_DORMITORY_NAME") ? DormConstant.First(f => f.Field == "INPUT_DORMITORY_NAME").Validation : "";
        LENGTH_DORMITORY_NAME_EN = DormConstant.Any(f => f.Field == "INPUT_DORMITORY_NAME") ? DormConstant.First(f => f.Field == "INPUT_DORMITORY_NAME").Validation : "";
        LENGTH_BUILDING_TH = DormConstant.Any(f => f.Field == "INPUT_HOUSE_NO") ? DormConstant.First(f => f.Field == "INPUT_BUILDING_NAME").Validation : "";
        LENGTH_BUILDING_EN = DormConstant.Any(f => f.Field == "INPUT_HOUSE_NO") ? DormConstant.First(f => f.Field == "INPUT_HOUSE_NO").Validation : "";
        LENGTH_HOUSE_NO = DormConstant.Any(f => f.Field == "INPUT_HOUSE_NO") ? DormConstant.First(f => f.Field == "INPUT_HOUSE_NO").Validation : "";
        LENGTH_MOO = DormConstant.Any(f => f.Field == "INPUT_MOO") ? DormConstant.First(f => f.Field == "INPUT_MOO").Validation : "";
        LENGTH_SOI = DormConstant.Any(f => f.Field == "INPUT_SOI") ? DormConstant.First(f => f.Field == "INPUT_SOI").Validation : "";
        LENGTH_STREET = DormConstant.Any(f => f.Field == "INPUT_ROAD") ? DormConstant.First(f => f.Field == "INPUT_ROAD").Validation : "";
        LENGTH_OTY_ROOM_EN = DormConstant.Any(f => f.Field == "INPUT_ROOM_AMOUNT") ? DormConstant.First(f => f.Field == "INPUT_ROOM_AMOUNT").Validation : "";
        LENGTH_HOUSE_NO_EN = DormConstant.Any(f => f.Field == "INPUT_HOUSE_NO") ? DormConstant.First(f => f.Field == "INPUT_HOUSE_NO").Validation : "";
        LENGTH_MOO_EN = DormConstant.Any(f => f.Field == "INPUT_MOO") ? DormConstant.First(f => f.Field == "INPUT_MOO").Validation : "";
        LENGTH_SOI_EN = DormConstant.Any(f => f.Field == "INPUT_SOI") ? DormConstant.First(f => f.Field == "INPUT_SOI").Validation : "";
        LENGTH_STREET_EN = DormConstant.Any(f => f.Field == "INPUT_ROAD") ? DormConstant.First(f => f.Field == "INPUT_ROAD").Validation : "";
    }
}
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <div>
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <i style="font-size: large;">&nbsp;@ADMIN001_H_01</i>
                </h3>
            </div>@*endpanel heading*@
            <div id="CoverageInformation" class="panel-collapse collapse in i-gap-top-1 i-gap-right-1 i-gap-left-1 i-gap-bottom-1">
                <div class="row">
                    <div class="col-sm-12 col-md-12">
                        @*<div class=" panel panel-default">*@
                        <div id="panelbodyCoverageIformation" class="panel-body">
                            <div>
                                <div class="col-sm-6 col-md-6">
                                    <label>ข้อมูลหอพัก</label>
                                </div>
                                <div class="col-sm-12 col-md-12 i-gap-top-1">
                                    <div class=" panel panel-default">
                                        <div id="panelbody1" class="panel-body">
                                            <div id="row1" class="row">
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_DORMITORY_NAME_TH<span id="requiredfor-dormitory_name_th"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @Html.TextBoxFor(t => t.dormitory_name_th, new { maxlength = @LENGTH_DORMITORY_NAME_TH, @class = "dis k-textbox form-control" })
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-dormitory_name_th"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                </div>
                                            </div>
                                            <div id="row2" class="row">
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_HOUSE_NO<span id="requiredfor-HOME_NO_TH"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @Html.TextBoxFor(t => t.HOME_NO_TH, new { maxlength = @LENGTH_HOUSE_NO, @class = "dis k-textbox form-control" })
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-HOME_NO_TH"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_MOO</label>
                                                    @Html.TextBoxFor(t => t.MOO_TH, new { maxlength = @LENGTH_MOO, @class = "dis k-textbox form-control" })
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_SOI</label>
                                                    @Html.TextBoxFor(t => t.SOI_TH, new { maxlength = @LENGTH_SOI, @class = "dis k-textbox form-control" })
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_STREET</label>
                                                    @Html.TextBoxFor(t => t.STREET_NAME_TH, new { maxlength = @LENGTH_STREET, @class = "dis k-textbox form-control" })
                                                </div>
                                            </div>
                                            <div id="row3" class="row">
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_PROVINCE<span id="requiredfor-Admin_Province_TH"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @(Html.Kendo().DropDownListFor(t => t.Province_TH)
                                                                .Name("Admin_Province_TH")
                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                .DataTextField("DISPLAY_VAL")
                                                                .DataValueField("LOV_NAME")
                                                                .Filter(FilterType.Contains)
                                                                .DataSource(source =>
                                                                    {
                                                                        source.Read(read =>
                                                                        {
                                                                            read.Action("SelectProvinceConfigEvent", "DormitoryMaster");
                                                                        });
                                                                    })
                                                                .Events(e => e.Change("onProvinceChange"))
                                                            )
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-Admin_Province_TH"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_AMPHUR<span id="requiredfor-Admin_AMPHUR_TH"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @(Html.Kendo().DropDownListFor(t => t.AMPHUR_TH)
                                                                .Name("Admin_AMPHUR_TH")
                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                .DataTextField("DISPLAY_VAL")
                                                                .DataValueField("LOV_NAME")
                                                                .Filter(FilterType.Contains)
                                                                .DataSource(source =>
                                                                {
                                                                    source.Read(read =>
                                                                    {
                                                                        read.Action("SelectAmphur", "DormitoryMaster");
                                                                    });
                                                                })
                                                                .Events(e => e.Change("onAumphurChange"))
                                                            )
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-Admin_AMPHUR_TH"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_TUMBON<span id="requiredfor-Admin_TUMBON_TH"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @(Html.Kendo().DropDownListFor(t => t.TUMBON_TH)
                                                                .Name("Admin_TUMBON_TH")
                                                                .DataTextField("DISPLAY_VAL")
                                                                .DataValueField("LOV_NAME")
                                                                .Filter(FilterType.Contains)
                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                .DataSource(source =>
                                                                {
                                                                    source.Read(read =>
                                                                    {
                                                                        read.Action("SelectTumbon", "DormitoryMaster");
                                                                    });
                                                                })
                                                                .Events(e => e.Change("onTumbonChange"))
                                                            )
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-Admin_TUMBON_TH"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_POSTCODE<span id="requiredfor-Admin_Postcode_TH"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @(Html.Kendo().DropDownListFor(t => t.Postcode_TH)
                                                                .Name("Admin_Postcode_TH")
                                                                .DataTextField("DISPLAY_VAL")
                                                                .DataValueField("LOV_NAME")
                                                                .Filter(FilterType.Contains)
                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                .DataSource(source =>
                                                                {
                                                                    source.Read(read =>
                                                                    {
                                                                        read.Action("SelectPostcode", "DormitoryMaster");
                                                                    });
                                                                })
                                                            )
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-Admin_Postcode_TH"></div>
                                                </div>
                                            </div><br />
                                            <div id="row4" class="row">
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_DORMITORY_NAME_EN<span id="requiredfor-dormitory_name_en"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @Html.TextBoxFor(t => t.dormitory_name_en, new { maxlength = @LENGTH_DORMITORY_NAME_EN, @class = "dis k-textbox form-control" })
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-dormitory_name_en"></div>
                                                </div>

                                                <div class="col-sm-12 col-md-3">
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                </div>
                                            </div>
                                            <div id="row5" class="row">
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_HOUSE_NO_EN<span id="requiredfor-HOME_NO_EN"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @Html.TextBoxFor(t => t.HOME_NO_EN, new { maxlength = @LENGTH_HOUSE_NO_EN, @class = "dis k-textbox form-control" })
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-HOME_NO_EN"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_MOO_EN</label>
                                                    @Html.TextBoxFor(t => t.MOO_EN, new { maxlength = @LENGTH_MOO_EN, @class = "dis k-textbox form-control" })
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_SOI_EN</label>
                                                    @Html.TextBoxFor(t => t.SOI_EN, new { maxlength = @LENGTH_SOI_EN, @class = "dis k-textbox form-control" })
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_STREET_EN</label>
                                                    @Html.TextBoxFor(t => t.STREET_NAME_EN, new { maxlength = @LENGTH_STREET_EN, @class = "dis k-textbox form-control" })
                                                </div>
                                            </div>
                                            <div id="row6" class="row">
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_PROVINCE_EN<span id="requiredfor-Admin_Province_EN"> </span></label>
                                                    <div class="i-fg-data-entry">
                                                        @(Html.Kendo().DropDownListFor(t => t.Province_EN)
                                                                .Name("Admin_Province_EN")
                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                .DataTextField("DISPLAY_VAL")
                                                                .DataValueField("LOV_NAME")
                                                                .Filter(FilterType.Contains)
                                                                .DataSource(source =>
                                                                {
                                                                    source.Read(read =>
                                                                    {
                                                                        read.Action("SelectProvinceEN", "DormitoryMaster");
                                                                    });
                                                                })
                                                                .Events(e => e.Change("onProvinceChange"))
                                                            )
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-Admin_Province_EN"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_AMPHUR_EN<span id="requiredfor-Admin_Aumphur_EN"> </span></label>
                                                    <div class="i-fg-data-entry">
                                                        @(Html.Kendo().DropDownListFor(t => t.AMPHUR_EN)
                                                                .Name("Admin_Aumphur_EN")
                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                .DataTextField("DISPLAY_VAL")
                                                                .DataValueField("LOV_NAME")
                                                                .Filter(FilterType.Contains)
                                                                .DataSource(source =>
                                                                {
                                                                    source.Read(read =>
                                                                    {
                                                                        read.Action("SelectAmphurEN", "DormitoryMaster");
                                                                    });
                                                                })
                                                                .Events(e => e.Change("onAumphurChange"))
                                                            )
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-Admin_Aumphur_EN"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_TUMBON_EN<span id="requiredfor-Admin_Tumbon_EN">  </span></label>
                                                    <div class="i-fg-data-entry">
                                                        @(Html.Kendo().DropDownListFor(t => t.TUMBON_EN)
                                                                .Name("Admin_Tumbon_EN")
                                                                .DataTextField("DISPLAY_VAL")
                                                                .DataValueField("LOV_NAME")
                                                                .Filter(FilterType.Contains)
                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                .DataSource(source =>
                                                                {
                                                                    source.Read(read =>
                                                                    {
                                                                        read.Action("SelectTumbonEN", "DormitoryMaster");
                                                                    });
                                                                })
                                                                .Events(e => e.Change("onTumbonChange"))
                                                            )
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-Admin_Tumbon_EN"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_POSTCODE_EN<span id="requiredfor-Admin_POSTCODE_EN">  </span></label>
                                                    <div class="i-fg-data-entry">
                                                        @(Html.Kendo().DropDownListFor(t => t.Postcode_EN)
                                                                .Name("Admin_POSTCODE_EN")
                                                                .DataTextField("DISPLAY_VAL")
                                                                .DataValueField("LOV_NAME")
                                                                .Filter(FilterType.Contains)
                                                                .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                                .DataSource(source =>
                                                                {
                                                                    source.Read(read =>
                                                                    {
                                                                        read.Action("SelectPostcodeEN", "DormitoryMaster");
                                                                    });
                                                                })
                                                            )
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-Admin_POSTCODE_EN"></div>
                                                </div>
                                            </div><br />
                                             <div id="row7" class="row">
                                                  <div class="col-sm-12 col-md-3">
                                    <label>@H_CONTRACT_DORM</label>&nbsp;&nbsp;
                                </div>
                                                 </div>
                                            <div id="row13" class="row">
                                                 <div class="col-sm-12 col-md-12 i-gap-top-1">
                                            <div id="row9" class="row">
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_CONTRACT_NAME<span id="requiredfor-Contact_Name"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @Html.TextBoxFor(t => t.Contact_Name, new { @class = "dis k-textbox form-control" })
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-Contact_Name"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_CONTRACT_EMAIL<span id="requiredfor-contract_email"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @Html.TextBoxFor(t => t.contract_email, new { @class = "dis k-textbox form-control" })
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-contract_email"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_CONTRACT_PHONE<span id="requiredfor-contract_phone"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @Html.TextBoxFor(t => t.contract_phone, new { @class = "dis k-textbox form-control" })
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-contract_phone"></div>
                                                </div>
                                    </div><br />
                                </div>
                                <div class="col-sm-12 col-md-3">
                                    <label>@H_TARGET_LAUCH</label>
                                </div>
                                <div class="col-sm-12 col-md-12 i-gap-top-1">
                                            <div id="row11" class="row">
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_TARGET_LAUCH_DT</label>
                                                 
                                                        @(Html.Kendo().DatePickerFor(t => t.target_launch_dt)
                                                                .Name("Target_launch_dt")
                                 .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                 .Format("dd/MM/yyyy"))
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_LAUCH_DT</label>
                                                 
                                                        @(Html.Kendo().DatePickerFor(t => t.launch_dt).Name("Launch_dt")
                                 .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                 .Format("dd/MM/yyyy"))
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_TARGET_VOLUMN<span id="requiredfor-target_volumn"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @Html.TextBoxFor(t => t.target_volumn, new { @class = "dis k-textbox form-control" })
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-target_volumn"></div>
                                                </div>
                                                <div class="col-sm-12 col-md-3">
                                                    <label>@L_VOLUMN<span id="requiredfor-volumn"></span></label>
                                                    <div class="i-fg-data-entry">
                                                        @Html.TextBoxFor(t => t.volumn, new { @class = "dis k-textbox form-control" })
                                                    </div>
                                                    <div class="i-fg-data-entry-validation" id="validatefor-volumn"></div>
                                                </div>
                                            </div>
                                </div>
                                                </div>
                                            </div>
                                                </div>
                                        </div>
                                        @*end panelbody1*@
                                    </div>@*end paneldefault*@
                                </div>
                                <div class="col-sm-6 col-md-6">
                                    <label>รายละเอียดของอาคาร/ตึก</label>
                                </div>
                                <div class="col-sm-12 col-md-12 i-gap-top-1">
                                    <div class=" panel panel-default">
                                        <div id="panelbody2" class="panel-body">
                                            <div class="col-sm-12 col-md-12 ">
                                                <div id="gridresult" class="row">
                                                    @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.DormitoryBuilding>()
                                                            .Name("gridBuilding")
                                                            .Columns(columns =>
                                                                {
                                                                    columns.Bound(p => p.indexBuilding).Title("Index").HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                                                    columns.Bound(p => p.mode).Title("Mode").HtmlAttributes(new { style = "text-align:left;" }).Hidden();
                                                                    columns.Bound(p => p.dormitory_no_th).Title(@L_BUILDING_TH).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                                                                    columns.Bound(p => p.dormitory_no_en).Title(@L_BUILDING_EN).HtmlAttributes(new { style = "text-align:left;" }).Width(200);
                                                                    columns.Bound(p => p.number_of_room).Title(@L_OTY_ROOM).HtmlAttributes(new { style = "text-align:right;" }).Width(200);
                                                                    columns.Command(command =>
                                                                    {
                                                                        command.Custom("Edit").Click("editBuilding").Text("<i class='fa fa-pencil-square-o fa-lg'></i>&nbsp; " + @B_EDIT);
                                                                 //       command.Custom("Remove").Click("removeItem").Text("<i class='fa fa-pencil-square-o fa-lg'></i>&nbsp; " + "Remove");
                                                                    }).Width(100);
                                                                    columns.Command(command =>
                                                                    {    command.Custom("Remove").Click("removeItem").Text("<i class='fa fa-pencil-square-o fa-lg'></i>&nbsp; " + "Removes");
                                                                    }).Width(100);
                                                                })
                                                            .ToolBar
                                                            (
                                                                toolbar => toolbar.Template
                                                                (
                                                                    "<div class='pull-right'>" + "<a onclick='addNewBuilding()' id='addnew' class='btn btn-default'><i class='fa fa-plus-circle fa-lg'></i>&nbsp;" + @B_ADD_NEW + "</a>&nbsp;</div>"
                                                                )
                                                            )
                                                            .Pageable
                                                            (
                                                                pageable => pageable
                                                                    .PageSizes(false)
                                                                    .Numeric(true)
                                                            )
                                                            .Scrollable
                                                            (
                                                                scrollable => scrollable.Height("auto")
                                                            )

                                                            .AutoBind(true)
                                                            .DataSource
                                                            (
                                                                dataSource => dataSource
                                                                .Ajax()
                                                                .PageSize(10)
                                                                .Read(read => read.Action("BuildingData", "DormitoryMaster"))
                                                            )
                                                            .Events(e => e.DataBound("onGridDataBound"))
                                                        )
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>@*end apconfig*@
                            <div class="wrap01 col-sm-12 col-md-12" style="margin-top: -10px">
                                <ul id="error" class="i-red"></ul>
                            </div>
                            <div id="panelbody4" class="panel-body">
                                <div id="row8" class="row">
                                    <div class="col-sm-12 col-md-12 i-text-align-center">
                                        <a class="btn btn-default" onclick="_SaveDormitory();"><i class="fa fa-floppy-o fa-lg"></i>&nbsp;&nbsp;@B_SAVE</a>&nbsp;&nbsp;
                                            <a class="btn btn-default" onclick="_Back();"><i class="fa fa-ban fa-lg"></i>&nbsp;&nbsp;Back</a>
                                    </div>
                                </div>
                            </div>
                        </div>@*end panel*@
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*</div>*@

</body>
@(Html.Kendo().Window()
    .Name("AddBuildingPopup")
    .HtmlAttributes(new { @class = "i-gap-popup" })
    .Title("Add Building")
    .Width(350)
    .Draggable()
    .Visible(false)
    .Modal(true)
    .Events(events => events.Close("onCloseAddBuilding"))
    .Content(@<text>
<div class="row i-no-over" id="AddBuildingPopupPanel">
    @Html.Hidden("Index")
    <div class="col-md-12">
        <div class="form-group">
            <label>@L_BUILDING_TH <span id="requiredfor-BuildingNameTH"></span></label>
            <div class="i-fg-data-entry">
                <input type="text" id="BuildingNameTH" class="dis k-textbox form-control" maxlength="@LENGTH_BUILDING_TH" />
            </div>
            <div class="i-fg-data-entry-validation" id="validatefor-BuildingNameTH"></div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            <label>@L_BUILDING_EN <span id="requiredfor-BuildingNameEN"></span></label>
            <div class="i-fg-data-entry">
                <input type="text" id="BuildingNameEN" class="dis k-textbox form-control" maxlength="@LENGTH_BUILDING_EN" />
            </div>
            <div class="i-fg-data-entry-validation" id="validatefor-BuildingNameEN"></div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            <label>@L_OTY_ROOM <span id="requiredfor-NumberOfRoom"></span></label>
            <div class="i-fg-data-entry">
                <input type="text" id="NumberOfRoom" class="dis k-textbox form-control" maxlength="@LENGTH_OTY_ROOM_EN" />
            </div>
            <div class="i-fg-data-entry-validation" id="validatefor-NumberOfRoom"></div>
        </div>
    </div>
    <div class="col-md-12">
        <button class="btn btn-default i-gap-top-1 pull-right" onclick="_SaveBuilding('Add')" id="btnAdd"><i class="fa fa-check-circle fa-lg"></i>&nbsp; Add</button>
        <button class="btn btn-default i-gap-top-1 i-hidden pull-right" onclick="_SaveBuilding('Edit')" id="btnEdit"><i class="fa fa-check-circle fa-lg"></i>&nbsp; Edit</button>
    </div>

</div>
</text>)
)

<script>
    var validateModel003R = new Array();
    var validateModel = [];
    validateModel.push({ id: "dormitory_name_th" });
    validateModel.push({ id: "dormitory_name_en" });
    validateModel.push({ id: "dormitory_no_th" });
    validateModel.push({ id: "dormitory_no_en" });
    validateModel.push({ id: "HOME_NO_TH" });
    validateModel.push({ id: "HOME_NO_EN" });
    validateModel.push({ id: "Admin_TUMBON_TH" });
    validateModel.push({ id: "Admin_AMPHUR_TH" });
    validateModel.push({ id: "Admin_Province_TH" });
    validateModel.push({ id: "Admin_Tumbon_EN" });
    validateModel.push({ id: "Admin_Aumphur_EN" });
    validateModel.push({ id: "Admin_Province_EN" });
    validateModel.push({ id: "Admin_Postcode_TH" });
    validateModel.push({ id: "Admin_POSTCODE_EN" });
    validateModel.push({ id: "MOO_TH" });
    validateModel.push({ id: "SOI_TH" });
    validateModel.push({ id: "STREET_NAME_TH" });
    validateModel.push({ id: "MOO_EN" });
    validateModel.push({ id: "SOI_EN" });
    validateModel.push({ id: "STREET_NAME_EN" });
    //---
    validateModel.push({ id: "Contact_Name" });
    validateModel.push({ id: "contract_email" });
    validateModel.push({ id: "contract_phone" });
    validateModel.push({ id: "target_launch_dt" });
    validateModel.push({ id: "launch_dt" });
    validateModel.push({ id: "target_volumn" });
    validateModel.push({ id: "volumn" });

    //--

    
    $(function () {
        SetRequired(validateModel);
        debugger
        var today = new Date();
        var tomorrow = new Date();
        tomorrow.setDate(today.getDate());

        $("#Target_launch_dt").data("kendoDatePicker").min(today);
        $("#Target_launch_dt").data("kendoDatePicker").value(today);
        $("#Launch_dt").data("kendoDatePicker").min(today);
        $("#Launch_dt").data("kendoDatePicker").value(today);
        

    });
    function _Clear() {
        $("#dormitory_name_th").val("");
        $("#dormitory_name_en").val("");
        $("#HOME_NO_TH").val("");
        $("#MOO_TH").val("");
        $("#SOI_TH").val("");
        $("#STREET_NAME_TH").val("");
        $("#HOME_NO_EN").val("");
        $("#MOO_EN").val("");
        $("#SOI_EN ").val("");
        $("#STREET_NAME_EN").val("");
        $("#Admin_TUMBON_TH").data("kendoDropDownList").select(0);
        $("#Admin_AMPHUR_TH").data("kendoDropDownList").select(0);
        $("#Admin_Province_TH").data("kendoDropDownList").select(0);
        $("#Admin_Tumbon_EN").data("kendoDropDownList").select(0);
        $("#Admin_Province_EN").data("kendoDropDownList").select(0);
        $("#Admin_Aumphur_EN").data("kendoDropDownList").select(0);
        $("#Admin_Postcode_TH").data("kendoDropDownList").select(0);
        $("#Admin_POSTCODE_EN").data("kendoDropDownList").select(0);
        RemoveValidation(validateModel);
        onProvinceChange();
        onAumphurChange();
        onTumbonChange();
    }

    function onGridDataBound() {
        Loading(0);
    }


    function addNewBuilding() {

        var validateModel = [];

        validateModel.push({ id: "BuildingNameTH" });
        validateModel.push({ id: "BuildingNameEN" });
        validateModel.push({ id: "NumberOfRoom" });
        SetRequired(validateModel);

        $("#btnAdd").show();
        $("#btnEdit").hide();

        $("#AddBuildingPopup").prev().find(".k-window-title").text("Add Building");
        $("#AddBuildingPopup").data("kendoWindow").center();
        $("#AddBuildingPopup").data("kendoWindow").open();

    }

    function editBuilding(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $("#BuildingNameTH").val(dataItem.dormitory_no_th);
        $("#BuildingNameEN").val(dataItem.dormitory_no_en);
        $("#NumberOfRoom").val(dataItem.number_of_room);
        $("#Index").val(dataItem.indexBuilding);
        var validateModel = [];

        validateModel.push({ id: "BuildingNameTH" });
        validateModel.push({ id: "BuildingNameEN" });
        validateModel.push({ id: "NumberOfRoom" });
        SetRequired(validateModel);

        $("#btnAdd").hide();
        $("#btnEdit").show();

        $("#AddBuildingPopup").prev().find(".k-window-title").text("Edit Building");
        $("#AddBuildingPopup").data("kendoWindow").center();
        $("#AddBuildingPopup").data("kendoWindow").open();

    }
    function removeItem(e) {
        debugger;
        var grid = $("#gridBuilding").data("kendoGrid");
        //Get the selected grid
     //   var tr = $(e.target).closest("tr");
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //Get the item from the grid
   //     var data = this.dataItem(tr);
        //Remove the item from the datasource
        grid.dataSource.remove(dataItem);
        //Sync it with the grid
      
        grid.dataSource.page(1);

    }
    function _SaveBuilding(status) {
        var chk = ValidationProcessingRequired("AddBuildingPopupPanel");
        if (chk) {
            if (status == "Add") {
                $.ajax({
                    type: "POST",
                    url: "/DormitoryMaster/AddBuildingData",
                    data: {
                        "BuildingNameTH": $("#BuildingNameTH").val()
                        , "BuildingNameEN": $("#BuildingNameEN").val()
                        , "NumberOfRoom": $("#NumberOfRoom").val()
                    },
                    dataType: "json",
                    async: false,
                    success: function (response) {

                    },
                    failure: function (err) {

                    }
                });
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "/DormitoryMaster/EditBuildingData",
                    data: {
                        "BuildingNameTH": $("#BuildingNameTH").val()
                        , "BuildingNameEN": $("#BuildingNameEN").val()
                        , "NumberOfRoom": $("#NumberOfRoom").val()
                        , "Index": $("#Index").val()
                    },
                    dataType: "json",
                    async: false,
                    success: function (response) {

                    },
                    failure: function (err) {

                    }
                });
            }
            var grid = $("#gridBuilding").data("kendoGrid");
            grid.dataSource.page(1);
            showFeedback("success", status + " Complete");
            $("#AddBuildingPopup").data("kendoWindow").close();
        }
    }

    function onCloseAddBuilding() {

        $("#BuildingNameTH").val("");
        $("#BuildingNameEN").val("");
        $("#NumberOfRoom").val("");
        ClearTextValidation("AddBuildingPopupPanel");
    }

    function _SaveDormitory() {
        var chk = ValidationProcessingRequired("panelbodyCoverageIformation");
        if (chk) {
            debugger
            var grid = $("#gridBuilding").data("kendoGrid");
            var dataSource = grid.dataSource;
            var totalRecords = dataSource.total();
            if (totalRecords > 0) {
                Loading();
                $.ajax({
                    type: "POST",
                    url: "/DormitoryMaster/SaveDormMaster",
                    data: {
                        "dormitory_name_th": $("#dormitory_name_th").val(), "HOME_NO_TH": $("#HOME_NO_TH").val(), "MOO_TH": $("#MOO_TH").val()
                        , "SOI_TH": $("#SOI_TH").val(), "STREET_NAME_TH": $("#STREET_NAME_TH").val(), "TUMBON_TH": $("#Admin_TUMBON_TH").val()
                        , "AMPHUR_TH": $("#Admin_AMPHUR_TH").val(), "Province_TH": $("#Admin_Province_TH").val(), "Postcode_TH": $("#Admin_Postcode_TH").val()
                        , "dormitory_name_en": $("#dormitory_name_en").val(), "HOME_NO_EN": $("#HOME_NO_EN").val(), "MOO_EN": $("#MOO_EN").val()
                        , "SOI_EN": $("#SOI_EN").val(), "STREET_NAME_EN": $("#STREET_NAME_EN").val(), "TUMBON_EN": $("#Admin_Tumbon_EN").val()
                        , "AMPHUR_EN": $("#Admin_Aumphur_EN").val(), "Province_EN": $("#Admin_Province_EN").val(), "Postcode_EN": $("#Admin_POSTCODE_EN").val()
                        , "Contact_Name": $("#Contact_Name").val(), "Email": $("#contract_email").val(), "Phone": $("#contract_phone").val(), "Target_launch_dt": $("#Target_launch_dt").val(),
                        "Launch_dt": $("#Launch_dt").val(), "Target_volumn": $("#target_volumn").val(), "Volumn": $("#volumn").val()
                    },
                    dataType: "text",
                    async: false,
                    success: function (response) {
                        Loading(0);
                        Loading();
                        var url = '@Url.Action("Index", "DormitoryMaster")';
                        url = url + "?SaveStatus=Saved successfully. " + response;
                        window.location.href = url;

                    },
                    failure: function (err) {
                        Loading(0);
                        showFeedback("error", "Save Fail", "SaveDormitory Master");
                    }

                });
            }
            else {
                showFeedback("warning", "Please add building.", "SaveDormitory Master");
            }
        }
    }

    function onProvinceChange() {
        $("#Admin_AMPHUR_TH").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_TH").val() });
        $("#Admin_TUMBON_TH").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_TH").val(), aumphur: $("#Admin_AMPHUR_TH").val() });
        $("#Admin_Postcode_TH").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_TH").val(), aumphur: $("#Admin_AMPHUR_TH").val(), tumbon: $("#Admin_TUMBON_TH").val() });
        $("#Admin_Aumphur_EN").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_EN").val() });
        $("#Admin_Tumbon_EN").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_EN").val(), aumphur: $("#Admin_Aumphur_EN").val() });
        $("#Admin_POSTCODE_EN").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_EN").val(), aumphur: $("#Admin_Aumphur_EN").val(), tumbon: $("#Admin_Tumbon_EN").val() });
    }
    function onAumphurChange() {
        $("#Admin_TUMBON_TH").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_TH").val(), aumphur: $("#Admin_AMPHUR_TH").val() });
        $("#Admin_Postcode_TH").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_TH").val(), aumphur: $("#Admin_AMPHUR_TH").val(), tumbon: $("#Admin_TUMBON_TH").val() });
        $("#Admin_Tumbon_EN").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_EN").val(), aumphur: $("#Admin_Aumphur_EN").val() });
        $("#Admin_POSTCODE_EN").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_EN").val(), aumphur: $("#Admin_Aumphur_EN").val(), tumbon: $("#Admin_Tumbon_EN").val() });
    }
    function onTumbonChange() {
        $("#Admin_POSTCODE_EN").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_EN").val(), aumphur: $("#Admin_Aumphur_EN").val(), tumbon: $("#Admin_Tumbon_EN").val() });
        $("#Admin_Postcode_TH").data("kendoDropDownList").dataSource.read({ province: $("#Admin_Province_TH").val(), aumphur: $("#Admin_AMPHUR_TH").val(), tumbon: $("#Admin_TUMBON_TH").val() });
    }

    function ValidationIcon() {
        return "<i class='fa fa-warning i-red'></i> ";
    }

    function ValidationProcessingRequired(panel) {
        var chk = true;
        $("#" + panel + " .i-required").each(function (index, e) {
            var field = e.id.split('requiredfor-')[1];
            var value = $("#" + field).val();
            if ($.trim(value) == "") {
                $("#validatefor-" + field).html(ValidationIcon() + "This field is required.");
                chk = false;
            }
            else {
                $("#validatefor-" + field).html("");
            }
        });

        if (chk) {
            $("#" + panel + " .i-validate-length").each(function (index, e) {
                var field = e.id.split('validatefor-')[1];
                var value = $("#" + field).val();
                var length = parseInt(e.className.split('i-length-')[1]);
                var val_length = 0;
                if (value != "") {
                    val_length = value.length;
                }

                if (val_length > length) {
                    $("#" + e.id).html(ValidationIcon() + "This maxlength field is " + length + ".");
                    chk = false;
                }
                else {
                    $("#" + e.id).html("");
                }
            });
        }

        return chk;
    }

    function SetRequired(validateModel) {
        var i = 0;
        for (i = 0; i < validateModel.length; i++) {
            var id = validateModel[i].id;
            $("#requiredfor-" + id).addClass("label label-danger i-gap-left-md i-required");
            $("#requiredfor-" + id).text("Required");
        }
    }

    function SetValidateLength(validateLengthModel) {
        var i = 0;
        for (i = 0; i < validateLengthModel.length; i++) {
            var id = validateLengthModel[i].id;
            var length = validateLengthModel[i].length;
            if (length !== undefined) {
                $("#validatefor-" + id).addClass("i-validate-length i-length-" + length);
            }
        }
    }

    function RemoveRequired(panel) {
        $("#" + panel + " span[id*=requiredfor-]").removeClass("label label-danger i-gap-left-md i-required");
        $("#" + panel + " span[id*=requiredfor-]").text("");
        ClearTextValidation(panel);
    }

    function ClearTextValidation(panel) {
        $("#" + panel + " .i-required").each(function (index, e) {
            var field = e.id.split('requiredfor-')[1];
            $("#validatefor-" + field).text("");
        });
    }

    function RemoveValidation(validateModel) {
        var i = 0;
        for (i = 0; i < validateModel.length; i++) {
            var id = validateModel[i].id;
            $("#validatefor-" + id).html("");
        }
    }

    function CheckKeyUps(id, RexStr) {
        var strKey = $("#" + id).val();
        var strBuilder = "";
        var filter = new RegExp(RexStr);
        for (var i = 0; i < strKey.length; i++) {
            if (filter.test(strKey.substr(i, 1))) {
                strBuilder += strKey.substr(i, 1);
            }
        }
        $("#" + id).val(strBuilder);

    }

    $("#dormitory_name_th").keyup(function () {
        CheckKeyUps("dormitory_name_th", '@INPUT_DORMITORY_NAME_TH');
    });
        $("#dormitory_name_en").keyup(function () {
            CheckKeyUps("dormitory_name_en", '@INPUT_DORMITORY_NAME_EN');
        });
        $("#HOME_NO_TH").keyup(function () {
            CheckKeyUps("HOME_NO_TH", '@INPUT_HOUSE_NO');
    });
    $("#HOME_NO_EN").keyup(function () {
        CheckKeyUps("HOME_NO_EN", '@INPUT_HOUSE_NO_EN');
    });
    $("#MOO_TH").keyup(function () {
        CheckKeyUps("MOO_TH", '@INPUT_MOO');
    });
    $("#MOO_EN").keyup(function () {
        CheckKeyUps("MOO_EN", '@INPUT_MOO_EN');
    });
    $("#SOI_TH").keyup(function () {
        CheckKeyUps("SOI_TH", '@INPUT_SOI');
    });
    $("#SOI_EN").keyup(function () {
        CheckKeyUps("SOI_EN", '@INPUT_SOI_EN');
    });
    $("#STREET_NAME_TH").keyup(function () {
        CheckKeyUps("STREET_NAME_TH", '@INPUT_STREET');
    });
    $("#STREET_NAME_EN").keyup(function () {
        CheckKeyUps("STREET_NAME_EN", '@INPUT_STREET_EN');
    });

    $("#BuildingNameTH").keyup(function () {
        CheckKeyUps("BuildingNameTH", '@INPUT_BUILDING_TH');
    });

    $("#BuildingNameEN").keyup(function () {
        CheckKeyUps("BuildingNameEN", '@INPUT_BUILDING_EN');
    });

    $("#NumberOfRoom").keyup(function () {
        CheckKeyUps("NumberOfRoom", '@INPUT_OTY_ROOM_EN');
    });

    function _Back() {
        Loading();
        var url = '@Url.Action("Index", "DormitoryMaster")';
        window.location.href = url;
    }
  

</script>
