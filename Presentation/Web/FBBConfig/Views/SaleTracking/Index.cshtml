@model WBBEntity.PanelModels.FBBWebConfigModels.SaleTrackingModel
@using WBBEntity.PanelModels;

@{
    string H_SALE_TRACKING = "";
    string L_LOCATION_CODE = "";
    string L_ASC_CODE = "";
    string L_REGISTER_DATE_FROM = "";
    string L_REGISTER_DATE_TO = "";
    string L_STATUS = "";
    string L_CUSTOMER_NAME = "";
    string C_LOCATION_CODE = "";
    string C_ASC_CODE = "";
    string C_EMPLOYEE_ID = "";
    string C_REGISTERED_DATE = "";
    string C_CUSTOMER_NAME = "";
    string C_BUILDING_VILLAGE = "";
    string C_SUB_DISTRICT = "";
    string C_DISTRICT = "";
    string C_PROVINCE = "";
    string C_INTERNET_NUMBER = "";
    string C_MAIN_PACKAGE = "";
    string C_PLAYBOX_FLAG = "";
    string C_FIXEDLINE_FLAG = "";
    string C_STATUS = "";
    string C_STATUS_DATE = "";
    
    string INPUT_LOC_CODE = "";
    string LENGTH_LOC_CODE = "";
    string INPUT_ASC_CODE = "";
    string LENGTH_ASC_CODE = "";
    string INPUT_CUST_NAME = "";
    string LENGTH_CUST_NAME = "";
    string LIMIT_DATE_FROM = "";
    string LIMIT_DATE_TO = "";


    if (ViewBag.configscreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.configscreen;

        H_SALE_TRACKING = configscreen.Any(f => f.Name == "H_SALE_TRACKING") ? configscreen.FirstOrDefault(f => f.Name == "H_SALE_TRACKING").LovValue1 : "";

        L_LOCATION_CODE = configscreen.Any(f => f.Name == "L_LOCATION_CODE") ? configscreen.FirstOrDefault(f => f.Name == "L_LOCATION_CODE").LovValue1 : "";
        L_ASC_CODE = configscreen.Any(f => f.Name == "L_ASC_CODE") ? configscreen.FirstOrDefault(f => f.Name == "L_ASC_CODE").LovValue1 : "";
        L_REGISTER_DATE_FROM = configscreen.Any(f => f.Name == "L_REGISTER_DATE_FROM") ? configscreen.FirstOrDefault(f => f.Name == "L_REGISTER_DATE_FROM").LovValue1 : "";
        L_REGISTER_DATE_TO = configscreen.Any(f => f.Name == "L_REGISTER_DATE_TO") ? configscreen.FirstOrDefault(f => f.Name == "L_REGISTER_DATE_TO").LovValue1 : "";
        L_STATUS = configscreen.Any(f => f.Name == "L_STATUS") ? configscreen.FirstOrDefault(f => f.Name == "L_STATUS").LovValue1 : "";
        L_CUSTOMER_NAME = configscreen.Any(f => f.Name == "L_CUSTOMER_NAME") ? configscreen.FirstOrDefault(f => f.Name == "L_CUSTOMER_NAME").LovValue1 : "";

        C_LOCATION_CODE = configscreen.Any(f => f.Name == "C_LOCATION_CODE") ? configscreen.FirstOrDefault(f => f.Name == "C_LOCATION_CODE").LovValue1 : "";
        C_ASC_CODE = configscreen.Any(f => f.Name == "C_ASC_CODE") ? configscreen.FirstOrDefault(f => f.Name == "C_ASC_CODE").LovValue1 : "";
        C_EMPLOYEE_ID = configscreen.Any(f => f.Name == "C_EMPLOYEE_ID") ? configscreen.FirstOrDefault(f => f.Name == "C_EMPLOYEE_ID").LovValue1 : "";
        C_REGISTERED_DATE = configscreen.Any(f => f.Name == "C_REGISTERED_DATE") ? configscreen.FirstOrDefault(f => f.Name == "C_REGISTERED_DATE").LovValue1 : "";
        C_CUSTOMER_NAME = configscreen.Any(f => f.Name == "C_CUSTOMER_NAME") ? configscreen.FirstOrDefault(f => f.Name == "C_CUSTOMER_NAME").LovValue1 : "";
        C_BUILDING_VILLAGE = configscreen.Any(f => f.Name == "C_BUILDING_VILLAGE") ? configscreen.FirstOrDefault(f => f.Name == "C_BUILDING_VILLAGE").LovValue1 : "";
        C_SUB_DISTRICT = configscreen.Any(f => f.Name == "C_SUB_DISTRICT") ? configscreen.FirstOrDefault(f => f.Name == "C_SUB_DISTRICT").LovValue1 : "";
        C_DISTRICT = configscreen.Any(f => f.Name == "C_DISTRICT") ? configscreen.FirstOrDefault(f => f.Name == "C_DISTRICT").LovValue1 : "";
        C_PROVINCE = configscreen.Any(f => f.Name == "C_PROVINCE") ? configscreen.FirstOrDefault(f => f.Name == "C_PROVINCE").LovValue1 : "";
        C_INTERNET_NUMBER = configscreen.Any(f => f.Name == "C_INTERNET_NUMBER") ? configscreen.FirstOrDefault(f => f.Name == "C_INTERNET_NUMBER").LovValue1 : "";
        C_MAIN_PACKAGE = configscreen.Any(f => f.Name == "C_MAIN_PACKAGE") ? configscreen.FirstOrDefault(f => f.Name == "C_MAIN_PACKAGE").LovValue1 : "";
        C_PLAYBOX_FLAG = configscreen.Any(f => f.Name == "C_PLAYBOX_FLAG") ? configscreen.FirstOrDefault(f => f.Name == "C_PLAYBOX_FLAG").LovValue1 : "";
        C_FIXEDLINE_FLAG = configscreen.Any(f => f.Name == "C_FIXEDLINE_FLAG") ? configscreen.FirstOrDefault(f => f.Name == "C_FIXEDLINE_FLAG").LovValue1 : "";
        C_STATUS = configscreen.Any(f => f.Name == "C_STATUS") ? configscreen.FirstOrDefault(f => f.Name == "C_STATUS").LovValue1 : "";
        C_STATUS_DATE = configscreen.Any(f => f.Name == "C_STATUS_DATE") ? configscreen.FirstOrDefault(f => f.Name == "C_STATUS_DATE").LovValue1 : "";

        INPUT_LOC_CODE = configscreen.Any(f => f.Name == "INPUT_LOC_CODE") ? configscreen.FirstOrDefault(f => f.Name == "INPUT_LOC_CODE").LovValue1 : "";
        LENGTH_LOC_CODE = configscreen.Any(f => f.Name == "LENGTH_LOC_CODE") ? configscreen.FirstOrDefault(f => f.Name == "LENGTH_LOC_CODE").LovValue1 : "";
        INPUT_ASC_CODE = configscreen.Any(f => f.Name == "INPUT_ASC_CODE") ? configscreen.FirstOrDefault(f => f.Name == "INPUT_ASC_CODE").LovValue1 : "";
        LENGTH_ASC_CODE = configscreen.Any(f => f.Name == "LENGTH_ASC_CODE") ? configscreen.FirstOrDefault(f => f.Name == "LENGTH_ASC_CODE").LovValue1 : "";
        INPUT_CUST_NAME = configscreen.Any(f => f.Name == "INPUT_CUST_NAME") ? configscreen.FirstOrDefault(f => f.Name == "INPUT_CUST_NAME").LovValue1 : "";
        LENGTH_CUST_NAME = configscreen.Any(f => f.Name == "LENGTH_CUST_NAME") ? configscreen.FirstOrDefault(f => f.Name == "LENGTH_CUST_NAME").LovValue1 : "";
        LIMIT_DATE_FROM = configscreen.Any(f => f.Name == "LIMIT_DATE_FROM") ? configscreen.FirstOrDefault(f => f.Name == "LIMIT_DATE_FROM").LovValue1 : "";
        LIMIT_DATE_TO = configscreen.Any(f => f.Name == "LIMIT_DATE_TO") ? configscreen.FirstOrDefault(f => f.Name == "LIMIT_DATE_TO").LovValue1 : "";


    }

}
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <div class="page-header i-header-fit">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <h3 style="margin-top: 0">@H_SALE_TRACKING</h3>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 col-md-12">
            <div class="panel panel-success">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        <span>Search Panel</span>
                        <a data-toggle="collapse" class="pull-right" href="#SearchPanel" onclick="onPanelToggle(this);" id="SearchPanelHeader"><i class="fa fa-chevron-circle-down fa-lg" id="SearchPanelHeaderArrow"></i></a>
                    </h3>
                </div>
                <div id="SearchPanel" class="panel-collapse collapse in">
                    <div class="panel-body" style="min-height: 135px;">
                        <div id="row1" class="row">
                            <div class="col-sm-6 col-md-6">
                                <label>@L_LOCATION_CODE</label>
                                <div class="i-fg-data-entry">
                                    <input type="text" id="txtLocation_code" class="k-textbox form-control" maxlength="@LENGTH_LOC_CODE" />
                                </div>
                                <div class="i-fg-data-entry-validation" id="validatefor-LocationCode"></div>
                            </div>
                            <div class="col-sm-6 col-md-6">
                                <label>@L_ASC_CODE</label>
                                <div class="i-fg-data-entry">
                                    <input type="text" id="txtAsc_code" class="k-textbox form-control" maxlength="@LENGTH_ASC_CODE"  />
                                </div>
                                <div class="i-fg-data-entry-validation" id="validatefor-AscCode"></div>
                            </div>
                        </div>@*end row1*@
                        <div id="row2" class="row">
                            <div class="col-sm-6 col-md-6">
                                <label>@L_REGISTER_DATE_FROM</label>
                                <div class="i-fg-data-entry">
                                    @(Html.Kendo().DatePicker()
                                    .Name("dtpDateFrom")
                                    .HtmlAttributes(new { @class = "form-control i-form-control-extend" , onkeydown = "javascript:return false;" })
                                    .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                    .Format("dd/MM/yyyy")
                                    .Min(DateTime.Today.AddDays(-Int32.Parse(LIMIT_DATE_FROM)))
                                    .Max(DateTime.Today)
                                    .Events(e => e.Change("ChangdtpDateFrom"))
                                    )
                                </div>
                                <div class="i-fg-data-entry-validation" id="validatefor-dtpDateFrom"></div>
                                <span class="k-invalid-msg" data-for="PickupDate"></span>
                            </div>
                            <div class="col-sm-6 col-md-6">
                                <label>@L_REGISTER_DATE_TO</label>
                                <div class="i-fg-data-entry">
                                    @(Html.Kendo().DatePicker()
                                    .Name("dtpDateTo")
                                    .HtmlAttributes(new { @class = "form-control i-form-control-extend", onkeydown = "javascript:return false;"  })
                                    .Format("dd/MM/yyyy")
                                    .Min(DateTime.Today.AddDays(-Int32.Parse(LIMIT_DATE_TO)))
                                    .Max(DateTime.Today)
                                    .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                    .Events(e => e.Change("ChangdtpDateTo"))
                                    )
                                </div>
                                <div class="i-fg-data-entry-validation" id="validatefor-dtpDateTo"></div>
                            </div>
                        </div>@*end row2*@
                        <div id="row3" class="row i-gap-top-1">
                            <div class="col-sm-6 col-md-6">
                                <label>@L_STATUS</label>
                                <div class="i-fg-data-entry">
                                    @(Html.Kendo().DropDownList()
                                    .Name("ddlStatus")
                                    .DataTextField("LOV_NAME")
                                    .DataValueField("LOV_VAL1")
                                    .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("SetDDLStatus", "SaleTracking", new { });
                                        });
                                    })
                                        .SelectedIndex(0)
                                    )
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-6">
                                <label>@L_CUSTOMER_NAME</label>
                                <div class="i-fg-data-entry">
                                    <input type="text" id="txtCustomer_name" class="k-textbox form-control" maxlength="@LENGTH_CUST_NAME"/>
                                </div>
                            </div>
                        </div>@*end row3*@
                        <div id="row4" class="row i-gap-top-1">
                            <div class="col-sm-6 col-md-6">
                            </div>
                            <div class="col-sm-6 col-md-6 i-text-align-right">
                                <a class="btn btn-default" onclick="_Clear();"><i class="fa fa-ban fa-lg"></i>&nbsp;&nbsp;ยกเลิก</a>
                                <a class="btn btn-info" onclick="_Search();"><i class="fa fa-search fa-lg"></i>&nbsp;&nbsp;ค้นหา</a>
                            </div>
                        </div>@*end row4*@
                    </div>
                </div>@*end SearchPanel*@
            </div>
        </div>
    </div>

    <div id="gridresult" class="row">
        <div class="col-sm-12 col-md-12 ">
            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.SaleTrackingList>()
            .Name("gridSaleTracking")
            .Columns(columns =>
            {
                columns.Bound(p => p.location_code).Title(@C_LOCATION_CODE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.asc_code).Title(@C_ASC_CODE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.employee_id).Title(@C_EMPLOYEE_ID).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.register_date_str).Title(@C_REGISTERED_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.customer_name).Title(@C_CUSTOMER_NAME).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.building_village).Title(@C_BUILDING_VILLAGE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.sub_district).Title(@C_SUB_DISTRICT).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.district).Title(@C_DISTRICT).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.province).Title(@C_PROVINCE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.fibrenet_id).Title(@C_INTERNET_NUMBER).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.technology).Title(@C_MAIN_PACKAGE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.playbox_flag).Title(@C_PLAYBOX_FLAG).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.fixedline_flag).Title(@C_FIXEDLINE_FLAG).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.current_state).Title(@C_STATUS).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                columns.Bound(p => p.status_date).Title(@C_STATUS_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
            })
            .ToolBar(toolbar => toolbar.Template("" +
                "<div class='pull-right'><a id='btnExport' onclick='_ExportToExcel();' class='btn btn-default'><i class='fa fa-reply fa-lg'></i>&nbsp; " + "Export to Excel" + "</a>&nbsp;</div>"
            ))
            .Scrollable(scrollable => scrollable.Height("auto"))
            .Sortable()
            .Resizable(resize => resize.Columns(true))
            .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
            .AutoBind(false)
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("ReadSearchSaleTrackingDataDefault", "SaleTracking").Data("bindingValue"))
                .PageSize(20)
                .ServerOperation(false)
                )
            .Events(e => e.DataBound("onGridDataBound"))
            )
        </div>      
    </div>
</body>

<script>

    $(document).ready(function () {
        $('#btnExport').attr("disabled", true);

        $('#txtLocation_code').keyup(function () { CheckKeyUps("txtLocation_code", "@INPUT_LOC_CODE"); });
        $('#txtAsc_code').keyup(function () { CheckKeyUps("txtAsc_code", "@INPUT_ASC_CODE"); });
        $('#txtCustomer_name').keyup(function () { CheckKeyUps("txtLocation_code", "@INPUT_CUST_NAME"); });

    });

    function post(path, params, method)
    {
        // Set method to post by default if not specified.
        method = method || "post";

        // The rest of this code assumes you are not using a library.
        // It can be made less wordy if you use one.
        var form = document.createElement("form");
        form.setAttribute("method", method);
        form.setAttribute("action", path);

        for (var key in params) {
            if (params.hasOwnProperty(key)) {
                var hiddenField = document.createElement("input");
                hiddenField.setAttribute("type", "hidden");
                hiddenField.setAttribute("name", key);
                hiddenField.setAttribute("value", params[key]);

                form.appendChild(hiddenField);
            }
        }

        document.body.appendChild(form);
        form.submit();
    }

    // Check KeyUp Textbox 
    function CheckKeyUps(id, RexStr) {
        var strKey = $("#" + id).val();
        var strBuilder = "";
        var filter = new RegExp(RexStr);
        for (var i = 0; i < strKey.length; i++) {
            if (filter.test(strKey.substr(i, 1))) {
                strBuilder += strKey.substr(i, 1);
            }
        }
        $("#" + id).val(strBuilder);
    }

    // Check Date Validation
    function ValidationDateValue(model)
    {
        var chk = ValidationProcessing("dateselect");

        // Check blank value
        if (chk)
        {
            if ($.trim($("#dtpDateFrom").val()) == '') {
                $("#validatefor-" + "dtpDateFrom").html(ValidationIcon() + "This field is required.");
                chk = false;
            }
            else {
                $("#validatefor-" + "dtpDateFrom").html("");
            }

            if ($.trim($("#dtpDateTo").val()) == '') {
                $("#validatefor-" + "dtpDateTo").html(ValidationIcon() + "This field is required.");
                chk = false;
            }
            else {
                $("#validatefor-" + "dtpDateTo").html("");
            }
        }

        // Check format
        if (chk)
        {
            if (!kendo.parseDate($("#dtpDateFrom").val(), "dd/MM/yyyy")) {
                if ($("#dtpDateFrom").val() != "") {
                    $("#validatefor-" + "dtpDateFrom").html(ValidationIcon() + "This field is not correct format.");
                    chk = false;
                }
            }
            else {
                $("#validatefor-" + "dtpDateFrom").html("");
            }

            if (!kendo.parseDate($("#dtpDateTo").val(), "dd/MM/yyyy")) {
                if ($("#dtpDateTo").val() != "") {
                    $("#validatefor-" + "dtpDateTo").html(ValidationIcon() + "This field is not correct format.");
                    chk = false;
                }
            }
            else {
                $("#validatefor-" + "dtpDateTo").html("");
            }
        }

        // Check Date From must be earlier than Date To
        if (chk)
        {
            var startPicker = new Date(kendo.parseDate($("#dtpDateFrom").val(), "mm/dd/yyyy"));
            var endPicker = new Date(kendo.parseDate($("#dtpDateTo").val(), "mm/dd/yyyy"));

            if (startPicker > endPicker) {
                if ($("#dtpDateFrom").val() != "") {
                    $("#validatefor-" + "dtpDateFrom").html(ValidationIcon() + "Date From must be earlier than Date To.");
                    chk = false;
                }
                else {
                    $("#validatefor-" + "dtpDateFrom").html("");
                }
            }
        }

        // Check The period date is not over than 1 month
        if (chk)
        {
            // hours*minutes*seconds*milliseconds
            var oneDay = 24 * 60 * 60 * 1000;

            var startPicker = new Date(kendo.parseDate($("#dtpDateFrom").val(), "dd/MM/yyyy"));
            var endPicker = new Date(kendo.parseDate($("#dtpDateTo").val(), "dd/MM/yyyy"));

            var diffDays = Math.round(Math.abs((startPicker.getTime() - endPicker.getTime()) / (oneDay)));

            if (diffDays > 31) {
                if ($("#dtpDateFrom").val() != "" && $("#dtpDateTo").val() != "") {
                    $("#validatefor-" + "dtpDateFrom").html(ValidationIcon() + "The period date is not over than 1 month.");
                    $("#validatefor-" + "dtpDateTo").html(ValidationIcon() + "The period date is not over than 1 month.");
                    chk = false;
                }
                else {
                    $("#validatefor-" + "dtpDateFrom").html("");
                    $("#validatefor-" + "dtpDateTo").html("");
                }
            }
        }

        return chk;
    }

    // Set input SaleTrackingModel Dafault
    var SaleTrackingModel = function () {
        LocCode: "";
        AscCode: "";
        DateFrom: "";
        DateTo: "";
        Status: "";
        CustName: "";
    }

    // Set Default Data
    function defaultData() {
        var searchResult = new SaleTrackingModel();

        searchResult.LocCode = kendo.toString($("#txtLocation_code").val());
        searchResult.AscCode = kendo.toString($("#txtAsc_code").val());
        searchResult.DateFrom = kendo.toString($("#dtpDateFrom").val(), "dd/MM/yyyy"); 
        searchResult.DateTo = kendo.toString($("#dtpDateTo").val(), "dd/MM/yyyy");
        searchResult.Status = $("#ddlStatus").val();
        searchResult.CustName = kendo.toString($("#txtCustomer_name").val());

        return searchResult;
    }
    
    // Change DatePicker DateFrom
    function ChangdtpDateFrom()
    {
        var endPicker = $("#dtpDateTo").data("kendoDatePicker"),
        startDate = this.value();

        if (startDate)
        {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate());
            endPicker.min(startDate);
        }

    }

    // Change DatePicker DateTo
    function ChangdtpDateTo()
    {
        var startPicker = $("#dtpDateFrom").data("kendoDatePicker"),
        endDate = this.value();

        if (endDate)
        {
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate());
            startPicker.max(endDate);
        }

    }

    // Events Bind Grid
    function bindingValue() {
        Loading();
        var model = defaultData();
        return {
            dataS: JSON.stringify(model)
        };
    }

    // Events Grid onGridDataBound
    function onGridDataBound() {
        Loading(0);
        //itemCount = this.dataSource.view().length;
        //insert empty row
        if (this.dataSource.view().length == 0) {
            
            var colspan = this.thead.find("th").length;
            var emptyRow = "<tr><td colspan='" + colspan + "'></td></tr>";
            this.tbody.html(emptyRow);

            $(".k-grid-content").height(3 * kendo.support.scrollbar());
            $('#btnExport').attr("disabled", true);
        }
        else {
            $(".k-grid-content").height("auto");
            $('#btnExport').attr("disabled", false);
        }

        $('#btnExport').attr("disabled", !(this.dataSource.view().length != 0));
    }

    // Button Search
    function _Search() {
        $("#gridSaleTracking").data("kendoGrid").dataSource.data([]);
        var model = defaultData();
        var chk = ValidationDateValue();
        if (chk)
        {
            Loading();
            var grid = $("#gridSaleTracking").data("kendoGrid");
            grid.dataSource.page(1);

            //$.ajax({
            //    url: '/SaleTracking/ReadSearchSaleTracking',
            //    data: { dataS : JSON.stringify(model) },
            //    dataType: "json",
            //    type: 'POST',
            //    success: function (response) {
            //        if (response) {
            //            if (response.itemDataS == "0") {
            //                $('#btnExport').attr("disabled", true);
            //            }
            //            else {
            //                $('#btnExport').attr("disabled", false);
            //            }
            //        }
            //    },
            //    failure: function (msg) {
                    
            //    }
            //    ,
            //    error: function (xhr, ajaxOptions, thrownError) {
            //        alert(xhr.status);
            //        alert(thrownError);
            //    }
            //});
        }
    }

    // Button Clear - Button Reset
    function _Clear() {
        var today = new Date();

        $("#txtLocation_code").val("")
        $("#txtAsc_code").val("");
        $("#dtpDateFrom").data("kendoDatePicker").value("");
        $("#dtpDateTo").data("kendoDatePicker").value("");
        $("#ddlStatus").data("kendoDropDownList").select(0);
        $("#txtCustomer_name").val("");

        // reset min , max.
        $("#dtpDateFrom").kendoDatePicker({ "min": new Date(LIMIT_DATE_FROM), "max": new Date(LIMIT_DATE_TO), "format": "dd/MM/yyyy" });
        $("#dtpDateTo").kendoDatePicker({ "min": new Date(LIMIT_DATE_FROM), "max": new Date(LIMIT_DATE_TO), "format": "dd/MM/yyyy" });

        $('#btnExport').attr("disabled", true);
        $("#gridSaleTracking").data("kendoGrid").dataSource.data([]);

        $("#validatefor-dtpDateTo").html("");
        $("#validatefor-dtpDateFrom").html("");
    }

    // Button Export To Excel
    function _ExportToExcel() {
        var model = new defaultData();
        window.open("/SaleTracking/ExportSaleTrackingData?dataS=" + JSON.stringify(model) + "");
    }

</script>


</html>