@model WBBEntity.PanelModels.FBBWebConfigModels.ReportInstallationCostbyOrderModel
@using WBBEntity.PanelModels;
@{

    string usertype = ViewBag.UserGroup;

    string UserViewType = "";
    if (usertype == "SCM")
    {
        UserViewType = "FLSView";
    }
    else if (usertype == "FAPO")
    {
        UserViewType = "FANPView";
    }
    else if (usertype == "ACCT")
    {
        UserViewType = "AccountingView";
    }

    string L_PAGE_NAME = "Report Installation Cost by Order";
    string L_ORDER_TYPE = "Order Type";
    string L_ORDER_NO = "";
    string L_ACCESS_NO = "";
    string L_PRODUCT_NAME = "";
    string L_SUBCONT_NAME = "";
    string L_REGION = "";
    string L_VENDOR_CODE = "";
    string L_IR_DOC = "";
    string L_INVOICE_NO = "";
    string L_WORKFLOW_STATUS = "";
    string L_SUB_CONTACT_TYPE = "";
    string L_SUB_CONTACT_SUB_TYPE = "";
    string L_AP_STATUS = "";
    string L_FOA_SUBMIT_DATE = "";
    string L_CS_APPROVE_DATE = "";
    string L_PAY_PERIOD = "";
    string L_TRANSFER_DATE = "";
    string L_PRODUCT_OWNER = "";// L_PRODUCT_OWNER

    string L_FROM = "From:";
    string L_TO = "To:";

    string B_CONFIRM = "CONFIRM";
    string B_SAVE = "SAVE";
    string B_CANCEL = "CANCEL";

    string L_Order_No = "Order No";
    string L_Order_Datetime = "Order Datetime";
    string L_Order_Type = "Order Type";

    string B_CLEAR = "Clear";
    string B_SEARCH = "Search";
    string B_update = "Update All";
    string B_updatebyfile = "Update Status By File";
    string B_export = "Export";
    string B_sendmail = "Send Email To Sub Contract";
    string B_clearall = "Clear All";

    //OrderDetail
    string L_ACC_NBR = "ACC NBR";
    string L_USER_NAME = "USER NAME";
    string L_SBC_CPY = "SBC CPY";
    string L_orderD_PRODUCT_NAME = "PRODUCT NAME";
    string L_ON_TOP1 = "ON TOP1";
    string L_ON_TOP2 = "ON TOP2";
    string L_VOIP_NUMBER = "VOIP NUMBER";
    string L_SERVICE_PACK_NAME = "SERVICE PACK NAME";
    string L_ORD_NO = "ORD NO";
    string L_orderD_ORDER_TYPE = "ORDER TYPE";
    string L_ORDER_SFF = "ORDER SFF";
    string L_APPOINTMENT_DATE = "APPOINTMENT DATE";
    string L_SFF_ACTIVE_DATE = "SFF ACTIVE DATE";
    string L_APPROVE_JOB_FBSS_DATE = "APPROVE JOB FBSS DATE";
    string L_COMPLETED_DATE = "COMPLETED DATE";
    string L_orderD_ORDER_STATUS = "ORDER STATUS";
    string L_REJECT_REASON = "REJECT REASON";
    string L_MATERIAL_CODE_CPESN = "MATERIAL CODE CPESN";
    string L_CPE_SN = "CPE SN";
    string L_CPE_MODE = "CPE MODE";
    string L_MATERIAL_CODE_STBSN = "MATERIAL CODE STBSN";
    string L_STB_SN = "STB SN";
    string L_MATERIAL_CODE_ATASN = "MATERIAL CODE ATASN";
    string L_ATA_SN = "ATA SN";
    string L_MATERIAL_CODE_WIFIROUTESN = "MATERIAL CODE WIFIROUTESN";
    string L_WIFI_ROUTER_SN = "WIFI ROUTER SN";
    string L_STO_LOCATION = "STO LOCATION";
    string L_orderD_VENDOR_CODE = "VENDOR CODE";
    string L_FOA_REJECT_REASON = "FOA REJECT REASON";
    string L_RE_APPOINTMENT_REASON = "RE APPOINTMENT REASON";
    string L_PHASE_PO = "PHASE PO";
    string L_SFF_SUBMITTED_DATE = "SFF SUBMITTED DATE";
    string L_EVENT_CODE = "EVENT CODE";
    string L_orderD_REGION = "REGION";
    string L_FEE_CODE = "ENTRY FEE";
    string L_TOTAL_FEE = "TOTAL FEE";


    // orderhistory
    string ordhis_WORKSTATUS = "";
    string ordhis_UPDATEBY = "";
    string ordhis_REMARK = "";
    string ordhis_REMARK_SUB = "";
    string ordhis_UPDATEDATE = "";
    //distanceDetail

    string L_TRANSACTION_ID = "";
    string L_REAL_DISTANCE = "";
    string L_MAP_DISTANCE = "";
    string L_DISP_DISTANCE = "";
    string L_ESRI_DISTANCE = "";
    string L_X1 = "";
    string L_X2 = "";
    string L_X2_1 = "";
    string L_X2_2 = "";
    string L_X2_3 = "";
    string L_X2_4 = "";
    string L_X3 = "";
    string L_X4 = "";
    string L_STATUS = "";
    string L_dd_USER_NAME = "";
    string L_ACTION_DATE = "";
    string L_POST_SAP = "";
    string L_TOTAL_PAID = "";



    string ordhis_LENGTH_DISTANCE = "";
    string ordhis_OVER_LENGTH = "";
    string ordhis_OVER_COST = "";
    string ordhis_TOTAL_COST = "";
    string ordhis_RULE_ID = "";


    //postSapDetail
    string L_SUB_CONTACT_NAME = "SUB CONTACT NAME";
    string L_PHASE = "PHASE";
    string L_REUSE_FLAG = "REUSE FLAG";
    string L_INSTALL_COST = "INSTALL COST";
    string L_ORDER_STATUS = "ORDER STATUS";
    //R19.03
    string B_ReCalByFileByDistance = "Re-Cal By File";




    if (ViewBag.SearchListScreen != null)
    {


        var configscreen = (List<LovValueModel>)ViewBag.SearchListScreen;
        L_ORDER_NO = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ORDER_NO").LovValue1 : "";

        L_ACCESS_NO = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_INTERNET_NO").LovValue1 : "";

        L_PRODUCT_NAME = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_PRODUCT_NAME").LovValue1 : "";

        L_PRODUCT_OWNER = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_PRODUCT_OWNER").LovValue1 : "";//L_PRODUCT_OWNER

        L_SUBCONT_NAME = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SUB_NAME").LovValue1 : "";

        L_REGION = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_REGION").LovValue1 : "";

        L_VENDOR_CODE = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_VENDOR").LovValue1 : "";


        L_IR_DOC = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_IR_DOC").LovValue1 : "";

        L_INVOICE_NO = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_INVOICE_NO").LovValue1 : "";

        L_WORKFLOW_STATUS = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_WORK_FLOW_STATUS").LovValue1 : "";

        L_CS_APPROVE_DATE = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_APPROVE_DATE").LovValue1 : "";

        L_PAY_PERIOD = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_PERIOD_DATE").LovValue1 : "";


        L_TRANSFER_DATE = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_TRANSFER_DATE").LovValue1 : "";

        L_FOA_SUBMIT_DATE = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_FOA_SUBMIT_DATE").LovValue1 : "";

        L_SUB_CONTACT_TYPE = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SUBCONTRACT_TYPE").LovValue1 : "";

        L_SUB_CONTACT_SUB_TYPE = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SUBCONTRACT_SUB_TYPE").LovValue1 : "";

        L_AP_STATUS = configscreen.Any(f => f.Type == "L_SEARCH_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ORDER_STATUS").LovValue1 : "";

    }
    if (ViewBag.OrderDetailListScreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.OrderDetailListScreen;
        L_ACC_NBR = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ACC_NBR").LovValue1 : "";
        L_USER_NAME = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_USER_NAME").LovValue1 : "";
        L_SBC_CPY = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SBC_CPY").LovValue1 : "";
        L_orderD_PRODUCT_NAME = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_PRODUCT_NAME").LovValue1 : "";
        L_ON_TOP1 = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ON_TOP1").LovValue1 : "";
        L_ON_TOP2 = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ON_TOP2").LovValue1 : "";
        L_VOIP_NUMBER = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_VOIP_NUMBER").LovValue1 : "";
        L_SERVICE_PACK_NAME = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SERVICE_PACK_NAME").LovValue1 : "";
        L_ORD_NO = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ORD_NO").LovValue1 : "";
        L_orderD_ORDER_TYPE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ORD_TYPE").LovValue1 : "";
        L_ORDER_SFF = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ORDER_SFF").LovValue1 : "";
        L_APPOINTMENT_DATE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_APPOINTMENT_DATE").LovValue1 : "";
        L_SFF_ACTIVE_DATE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SFF_ACTIVE_DATE").LovValue1 : "";
        L_APPROVE_JOB_FBSS_DATE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_APPROVE_JOB_FBSS_DATE").LovValue1 : "";
        L_COMPLETED_DATE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_COMPLETED_DATE").LovValue1 : "";
        L_ORDER_STATUS = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ORDER_STATUS").LovValue1 : "";
        L_REJECT_REASON = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_REJECT_REASON").LovValue1 : "";
        L_MATERIAL_CODE_CPESN = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_MATERIAL_CODE_CPESN").LovValue1 : "";
        L_CPE_SN = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_CPE_SN").LovValue1 : "";
        L_CPE_MODE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_CPE_MODE").LovValue1 : "";
        L_MATERIAL_CODE_STBSN = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_MATERIAL_CODE_STBSN").LovValue1 : "";
        L_STB_SN = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_STB_SN").LovValue1 : "";
        L_MATERIAL_CODE_ATASN = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_MATERIAL_CODE_ATASN").LovValue1 : "";
        L_ATA_SN = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ATA_SN").LovValue1 : "";
        L_MATERIAL_CODE_WIFIROUTESN = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_MATERIAL_CODE_WIFIROUTESN").LovValue1 : "";
        L_WIFI_ROUTER_SN = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_WIFI_ROUTER_SN").LovValue1 : "";
        L_STO_LOCATION = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_STO_LOCATION").LovValue1 : "";
        L_orderD_VENDOR_CODE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_VENDOR_CODE").LovValue1 : "";
        L_FOA_REJECT_REASON = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_FOA_REJECT_REASON").LovValue1 : "";
        L_RE_APPOINTMENT_REASON = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_RE_APPOINTMENT_REASON").LovValue1 : "";
        L_PHASE_PO = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_PHASE_PO").LovValue1 : "";
        L_SFF_SUBMITTED_DATE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SFF_SUBMITTED_DATE").LovValue1 : "";
        L_EVENT_CODE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_EVENT_CODE").LovValue1 : "";
        L_REGION = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_REGION").LovValue1 : "";
        L_TOTAL_FEE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_TOTAL_FEE").LovValue1 : "";
        L_FEE_CODE = configscreen.Any(f => f.Type == "L_ORD_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_FEE_CODE").LovValue1 : "";


    }


    if (ViewBag.OrderHisListScreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.OrderHisListScreen;

        ordhis_WORKSTATUS = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_STATUS").LovValue1 : "";
        ordhis_UPDATEBY = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_UPDATE_BY").LovValue1 : "";
        ordhis_REMARK = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_REMARK").LovValue1 : "";
        ordhis_UPDATEDATE = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_UPDATE_DATE").LovValue1 : "";
        ordhis_REMARK_SUB = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_REASON").LovValue1 : "";
        ordhis_RULE_ID = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_RULE_ID").LovValue1 : "";
        ordhis_LENGTH_DISTANCE = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_DISTANCE").LovValue1 : "";
        ordhis_OVER_LENGTH = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_OVER_LENGTH").LovValue1 : "";
        ordhis_OVER_COST = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_OVER_COST").LovValue1 : "";
        ordhis_TOTAL_COST = configscreen.Any(f => f.Type == "L_ORD_HIS_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_RATE").LovValue1 : "";




    }
    if (ViewBag.DisDetailListScreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.DisDetailListScreen;
        L_TRANSACTION_ID = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_TRANS_NO").LovValue1 : "";
        L_REAL_DISTANCE = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_A").LovValue1 : "";
        L_MAP_DISTANCE = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_B").LovValue1 : "";
        L_DISP_DISTANCE = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_C").LovValue1 : "";
        L_ESRI_DISTANCE = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_D").LovValue1 : "";

        L_X1 = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_X1").LovValue1 : "";
        L_X2 = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_X2").LovValue1 : "";
        L_X2_1 = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_X2_1").LovValue1 : "";
        L_X2_2 = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_X2_2").LovValue1 : "";
        L_X2_3 = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_X2_3").LovValue1 : "";
        L_X2_4 = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_X2_4").LovValue1 : "";
        L_X3 = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_X3").LovValue1 : "";
        L_X4 = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_X4").LovValue1 : "";
        L_STATUS = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_STATUS").LovValue1 : "";
        L_dd_USER_NAME = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_USER_NAME").LovValue1 : "";
        L_ACTION_DATE = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ACTION_DATE").LovValue1 : "";
        L_POST_SAP = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_POST_SAP").LovValue1 : "";
        L_TOTAL_PAID = configscreen.Any(f => f.Type == "L_DIST_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_TOTAL_PAID").LovValue1 : "";


    }
    string L_PZ_ORDER_NO = "";
    string L_PZ_ORDER_DATE = "";
    string L_PZ_ORDER_TYPE = "";
    string L_PZ_TOTAL_AMT = "";
    string L_PZ_REUSE_DROP_WIRE = "";

    string L_PZ_PRODUCT = "";
    string L_PZ_PHASE = "";
    string L_PZ_VENDOR = "";
    string L_PZ_CASE = "";
    string L_PZ_SUB_CONTRACT_TYPE = "";
    string L_PZ_SUB_CONTRACT_SUB_TYPE = "";
    string L_PZ_SUB_CONTRACT_NAME = "";
    string L_PZ_ADDRESS_ID = "";
    string L_PZ_ADDRESS_NAME = "";
    string L_PZ_RULE_ID = "";
    if (ViewBag.POSTSAPListScreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.POSTSAPListScreen;
        L_PZ_ORDER_NO = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ORDER_NO").LovValue1 : "";
        L_PZ_ORDER_DATE = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ORDER_DATE").LovValue1 : "";
        L_PZ_ORDER_TYPE = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ORDER_TYPE").LovValue1 : "";
        L_PZ_TOTAL_AMT = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_TOTAL_AMT").LovValue1 : "";
        L_PZ_REUSE_DROP_WIRE = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_REUSE_DROP_WIRE").LovValue1 : "";
        L_PZ_PRODUCT = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_PRODUCT").LovValue1 : "";
        L_PZ_PHASE = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_PHASE").LovValue1 : "";
        L_PZ_VENDOR = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_VENDOR").LovValue1 : "";
        L_PZ_CASE = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_CASE").LovValue1 : "";


        L_PZ_SUB_CONTRACT_TYPE = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SUB_CONTRACT_TYPE").LovValue1 : "";
        L_PZ_SUB_CONTRACT_SUB_TYPE = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SUB_CONTRACT_SUB_TYPE").LovValue1 : "";
        L_PZ_SUB_CONTRACT_NAME = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_SUB_CONTRACT_NAME").LovValue1 : "";
        L_PZ_ADDRESS_ID = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ADDRESS_ID").LovValue1 : "";
        L_PZ_ADDRESS_NAME = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_ADDRESS_NAME").LovValue1 : "";
        L_PZ_RULE_ID = configscreen.Any(f => f.Type == "L_POST_SAP_DETAIL_REPORT_INSTALLATION") ? configscreen.FirstOrDefault(f => f.Name == "L_RULE_ID").LovValue1 : "";

    }

    // Order Package Detail 
    string ordpackage_PACKAGE_CODE = "";
    string ordpackage_PACKAGE_NAME = "";
    string ordpackage_PACKAGE_CLASS = "";
    string ordpackage_NEW_PACKAGE = "";
    string ordpackage_CREATED_DATE = "";
    if (ViewBag.OrderPackageListScreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.OrderPackageListScreen;
        if (configscreen.Any(f => f.Type == "L_ORD_PACKAGE_REPORT_INSTALLATION"))
        {
            ordpackage_PACKAGE_CODE = configscreen.Where(w => w.Name == "L_PACKAGE_CODE").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordpackage_PACKAGE_NAME = configscreen.Where(w => w.Name == "L_PACKAGE_NAME").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordpackage_PACKAGE_CLASS = configscreen.Where(w => w.Name == "L_PACKAGE_CLASS").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordpackage_NEW_PACKAGE = configscreen.Where(w => w.Name == "L_NEW_PACKAGE").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordpackage_CREATED_DATE = configscreen.Where(w => w.Name == "L_CREATED_DATE").Select(s => s.LovValue1).FirstOrDefault() ?? "";
        }
    }

    // Order Fee Detail 
    string ordfee_FEE_ID = "";
    string ordfee_FEE_TYPE = "";
    string ordfee_FEE_NAME = "";
    string ordfee_FEE_PRICE = "";
    string ordfee_FEE_ACTION = "";
    string ordfee_PAYMENT_CHANNEL = "";
    string ordfee_PAYMENT_METHOD = "";
    string ordfee_PAYMENT_DATE = "";
    string ordfee_CREATED_DATE = "";
    if (ViewBag.OrderFeeListScreen != null)
    {
        var configscreen = (List<LovValueModel>)ViewBag.OrderFeeListScreen;
        if (configscreen.Any(f => f.Type == "L_ORD_FEE_REPORT_INSTALLATION"))
        {
            ordfee_FEE_ID = configscreen.Where(w => w.Name == "L_FEE_ID").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordfee_FEE_TYPE = configscreen.Where(w => w.Name == "L_FEE_TYPE").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordfee_FEE_NAME = configscreen.Where(w => w.Name == "L_FEE_NAME").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordfee_FEE_PRICE = configscreen.Where(w => w.Name == "L_FEE_PRICE").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordfee_FEE_ACTION = configscreen.Where(w => w.Name == "L_FEE_ACTION").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordfee_PAYMENT_CHANNEL = configscreen.Where(w => w.Name == "L_PAYMENT_CHANNEL").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordfee_PAYMENT_METHOD = configscreen.Where(w => w.Name == "L_PAYMENT_METHOD").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordfee_PAYMENT_DATE = configscreen.Where(w => w.Name == "L_PAYMENT_DATE").Select(s => s.LovValue1).FirstOrDefault() ?? "";
            ordfee_CREATED_DATE = configscreen.Where(w => w.Name == "L_CREATED_DATE").Select(s => s.LovValue1).FirstOrDefault() ?? "";
        }
    }

}
<input type="hidden" id="hiddenDataItem" />
<div class="page-header i-header-fit">
    <div class="row">
        <div class="col-sm-12 col-md-12">
            <h3 style="margin-top: 0">@L_PAGE_NAME</h3>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>Search By Criteria</span>
                    <a data-toggle="collapse" class="pull-right" href="#SearchPanel" onclick="onPanelToggle(this);" id="SearchPanelHeader"><i class="fa fa-chevron-circle-down fa-lg" id="SearchPanelHeaderArrow"></i></a>
                </h3>
            </div>
            <div id="SearchPanel" class="panel-collapse collapse in">
                <div class="panel-body" style="min-height: 200px;">
                    <div class="row">
                        <div class="col-sm-12 col-md-4">
                            <label>@L_ORDER_NO</label>
                            @Html.TextBoxFor(t => t.ORDER_NO, new { maxlength = 50, @class = "k-textbox form-control" })
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_ACCESS_NO</label>
                            @Html.TextBoxFor(t => t.ACCESS_NO, new { maxlength = 50, @class = "k-textbox form-control" })
                            <div class="i-fg-data-entry-validation" id="validatefor-ACCESSNO"></div>
                        </div>
                        
                        <div class="col-sm-12 col-md-4">
                            <label>@L_REGION</label>
                            @(Html.Kendo().DropDownList()
                                                          .Name("ddlRegion")
                                                          .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                          .DataTextField("DISPLAY_VAL")
                                                          .DataValueField("LOV_VAL1")
                                                          .Filter("contains")
                                                          .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("SelectRegion", "ReportInstallationCostbyOrder");
                                                              }).ServerFiltering(true);
                                                          })
                            )
                        </div>
                    </div>
                    <div class="row i-gap-top-1">
                        <div class="col-sm-12 col-md-4">
                            <label>@L_PRODUCT_NAME</label>
                            @(Html.Kendo().MultiSelect()
                                                  .Name("ddlProductName")
                                                  .Placeholder("SELECT ALL")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                  .DataTextField("DISPLAY_VAL")
                                                  .DataValueField("LOV_VAL1")
                                                  .DataSource(source =>
                                                  {
                                                      source.Read(read =>
                                                      {
                                                          read.Action("SelectProductname", "ReportInstallationCostbyOrder");
                                                      });
                                                  })
                            )
                        </div>
                        <div class="col-sm-12 col-md-4" hidden>
                            <label>@L_SUBCONT_NAME</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlSubContract")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                  .OptionLabel("SELECT ALL")
                                                  .DataTextField("SUB_CONTRACTOR_NAME")
                                                  .DataValueField("ORG_ID")
                                                  .Filter("contains")
                                                  .DataSource(source =>
                                                  {
                                                      source.Read(read =>
                                                      {
                                                          read.Action("SelectSubContractorName", "ReportInstallationCostbyOrder");
                                                      }).ServerFiltering(true);
                                                  }).Events(e => e.Change("onChangeddlSubContract"))
                            )
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_VENDOR_CODE</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlVendorcode")
                                                  .OptionLabel("SELECT ALL")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                  .DataTextField("SUB_CONTRACTOR_CODE")
                                                  .DataValueField("SUB_CONTRACTOR_CODE")
                                                  .Filter("contains")
                                                  .DataSource(source =>
                                                  {
                                                      source.Read(read =>
                                                      {
                                                          read.Action("SelectVendorCode", "ReportInstallationCostbyOrder");
                                                      }).ServerFiltering(true);
                                                  }).Events(e => e.Change("onChangeddlVendorcode"))
                            )
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>Symptom Group</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlSymptomGroup")
                                                  .OptionLabel("SELECT ALL")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                            //.DataTextField("SUB_CONTRACTOR_CODE")
                            //.DataValueField("SUB_CONTRACTOR_CODE")
                            //.Filter("contains")
                            //.DataSource(source =>
                            //{
                            //    source.Read(read =>
                            //    {
                            //        read.Action("SelectVendorCode", "ReportInstallationCostbyOrder");
                            //    }).ServerFiltering(true);
                            //}).Events(e => e.Change("onChangeddlVendorcode"))
                            )
                        </div>
                    </div>
                    <div class="row i-gap-top-1">
                        <div class="col-sm-12 col-md-4">

                            <label>@L_SUB_CONTACT_TYPE</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlSubContracttype")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                  // .OptionLabel("SELECT ALL")
                                                  .DataTextField("LOV_VAL1")
                                                  .DataValueField("LOV_VAL1")
                                                  .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("SelectSubContracttype", "ReportInstallationCostbyOrder");
                                                              });
                                                          })
                            )
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_SUB_CONTACT_SUB_TYPE</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlSubContractsubtype")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                  // .OptionLabel("SELECT ALL")
                                                  .DataTextField("DISPLAY_VAL")
                                                  .DataValueField("LOV_VAL1")
                                                  .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("SelectSubContractsubtype", "ReportInstallationCostbyOrder");
                                                              });
                                                          })
                            )
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_ORDER_TYPE</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlOrdertype")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                  // .OptionLabel("SELECT ALL")
                                                  .DataTextField("DISPLAY_VAL")
                                                  .DataValueField("LOV_VAL1")
                                                  .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("SelectOrderType", "ReportInstallationCostbyOrder");
                                                              });
                                                          })
                            )
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>Symptom Name</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlSymptomName")
                                                  .OptionLabel("SELECT ALL")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                            //.DataTextField("SUB_CONTRACTOR_CODE")
                            //.DataValueField("SUB_CONTRACTOR_CODE")
                            //.Filter("contains")
                            //.DataSource(source =>
                            //{
                            //    source.Read(read =>
                            //    {
                            //        read.Action("SelectVendorCode", "ReportInstallationCostbyOrder");
                            //    }).ServerFiltering(true);
                            //}).Events(e => e.Change("onChangeddlVendorcode"))
                            )
                        </div>
                    </div>
                    <div class="row i-gap-top-1">
                        <div class="col-sm-12 col-md-4">
                            <label>@L_IR_DOC</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlIrDoc")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                  .DataTextField("DISPLAY_VAL")
                                                  .DataValueField("LOV_VAL1")
                                                  .Filter("contains")
                                                  .DataSource(source =>
                                                  {
                                                      source.Read(read =>
                                                      {
                                                          read.Action("SelectIrDoc", "ReportInstallationCostbyOrder");
                                                      }).ServerFiltering(true);
                                                  })
                            )
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_INVOICE_NO</label>
                            @Html.TextBoxFor(t => t.INVOICE_NO, new { maxlength = 50, @class = "k-textbox form-control" })
                        </div>
                        <div class="col-sm-12 col-md-4">

                            <label>@L_PRODUCT_OWNER</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlProductOwner")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                            //.OptionLabel("SELECT ALL")
                            .DataTextField("LovValue1")
                            .DataValueField("LovValue1")
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("SelectProductOwner", "ReportInstallationCostbyOrder");
                                });
                            })
                            )
                        </div>
                    </div>
                    <div class="row i-gap-top-1">
                        <div class="col-sm-12 col-md-4">
                            <label>@L_WORKFLOW_STATUS</label>
                            @(Html.Kendo().MultiSelect()
                                                  .Name("ddlWorkflowStatus")
                                                  .Placeholder("SELECT ALL")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                  .DataTextField("DISPLAY_VAL")
                                                  .DataValueField("LOV_VAL1")
                                                  .DataSource(source =>
                                                  {
                                                      source.Read(read =>
                                                      {
                                                          read.Action("SelectWorkFlowStatus", "ReportInstallationCostbyOrder");
                                                      });
                                                  })
                            )
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_AP_STATUS</label>
                            @(Html.Kendo().DropDownList()
                                                  .Name("ddlOrdStatus")
                                                  .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                  // .OptionLabel("SELECT ALL")
                                                  .DataTextField("DISPLAY_VAL")
                                                  .DataValueField("LOV_VAL1")
                                                  .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("SelectOrderStatus", "ReportInstallationCostbyOrder");
                                                              });
                                                          })
                            )
                        </div>

                    </div>
                    <div class="row i-gap-top-1">
                        <div class="col-sm-12 col-md-8">

                            <label>@L_FOA_SUBMIT_DATE</label>
                            <div class="row">
                                <div class="col-sm-12 col-md-6">
                                    <label>@L_FROM</label>
                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DatePicker().Name("dtpFoaDateFrom")
                                                              .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                              .Format("dd/MM/yyyy")
                                                              .Min(new DateTime(1900, 1, 1))
                                                              .Max(new DateTime(2099, 12, 31))
                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                                      .Events(e => e.Change("onChangedtpFoaDateFrom"))
                                        )
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpFoaDateFrom"></div>
                                    <span class="k-invalid-msg" data-for="PickupDate"></span>
                                </div>
                                <div class="col-sm-12 col-md-6">
                                    <label>@L_TO</label>
                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DatePicker().Name("dtpFoaDateTo")
                                                              .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                              .Format("dd/MM/yyyy")
                                                              .Min(new DateTime(1900, 1, 1))
                                                              .Max(new DateTime(2099, 12, 31))
                                                              .Events(e => e.Change("onChangedtpFoaDateTo"))

                                        )
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpFoaDateTo"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row i-gap-top-1">
                        <div class="col-sm-12 col-md-8" id="L_CS_APPROVE_DATE_HIDE" hidden>
                            <label>@L_CS_APPROVE_DATE</label>
                            <div class="row">
                                <div class="col-sm-12 col-md-6">
                                    <label>@L_FROM</label>
                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DatePicker().Name("dtpCsApproveDateFrom")
                                                              .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                              .Format("dd/MM/yyyy")
                                                              .Min(new DateTime(1900, 1, 1))
                                                              .Max(new DateTime(2099, 12, 31))
                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                              .Events(e => e.Change("onChangedtpCsApproveDateFrom")))
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpCsApproveDateFrom"></div>
                                    <span class="k-invalid-msg" data-for="PickupDate"></span>
                                </div>
                                <div class="col-sm-12 col-md-6">
                                    <label>@L_TO</label>
                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DatePicker().Name("dtpCsApproveDateTo")
                                                              .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                              .Format("dd/MM/yyyy")
                                                              .Min(new DateTime(1900, 1, 1))
                                                              .Max(new DateTime(2099, 12, 31))
                                                              .Events(e => e.Change("onChangedtpCsApproveDateTo"))
                                        )
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpCsApproveDateTo"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row i-gap-top-1 WithdrawalDate">
                        <div class="col-sm-12 col-md-8">
                            <label>@L_PAY_PERIOD</label>
                            <div class="row">
                                <div class="col-sm-12 col-md-6">
                                    <label>@L_FROM</label>
                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DatePicker().Name("dtpWithdrawalDateFrom")
                                                              .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                              .Format("dd/MM/yyyy")
                                                              .Min(new DateTime(1900, 1, 1))
                                                              .Max(new DateTime(2099, 12, 31))
                                                              .Events(e => e.Change("onChangedtpWithdrawalDateFrom"))
                                        )
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpWithdrawalDateFrom"></div>
                                    <span class="k-invalid-msg" data-for="PickupDate"></span>
                                </div>
                                <div class="col-sm-12 col-md-6">
                                    <label>@L_TO</label>
                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DatePicker().Name("dtpWithdrawalDateTo")
                                                              .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                              .Format("dd/MM/yyyy")
                                                              .Min(new DateTime(1900, 1, 1))
                                                              .Max(new DateTime(2099, 12, 31))
                                                              .Events(e => e.Change("onChangedtpWithdrawalDateTo"))
                                        )
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpWithdrawalDateTo"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row i-gap-top-1 TranfDate">
                        <div class="col-sm-12 col-md-8">
                            <label>@L_TRANSFER_DATE</label>
                            <div class="row">
                                <div class="col-sm-12 col-md-6">
                                    <label>@L_FROM</label>
                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DatePicker().Name("dtpTransferDateFrom")
                                                              .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                              .Format("dd/MM/yyyy")
                                                              .Min(new DateTime(1900, 1, 1))
                                                              .Max(new DateTime(2099, 12, 31))
                                                              .Events(e => e.Change("onChangedtpTransferDateFrom"))
                                        )
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpTransferDateFrom"></div>
                                    <span class="k-invalid-msg" data-for="PickupDate"></span>
                                </div>
                                <div class="col-sm-12 col-md-6">
                                    <label>@L_TO</label>
                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DatePicker().Name("dtpTransferDateTo")
                                                              .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                              .ParseFormats(new List<string> { "dd/MM/yyyy" })
                                                              .Format("dd/MM/yyyy")
                                                              .Min(new DateTime(1900, 1, 1))
                                                              .Max(new DateTime(2099, 12, 31))
                                                              .Events(e => e.Change("onChangedtpTransferDateTo"))
                                        )
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-dtpTransferDateTo"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row i-gap-top-1">
                        <div class="col-sm-6 col-md-6">
                        </div>
                        <div class="col-sm-6 col-md-6 i-text-align-right">
                            <a class="btn btn-info" onclick="ClearSearch();"><i class="fa fa-times"></i>&nbsp;&nbsp;@B_CLEAR</a>
                            <a id="btnSearchOrder" class="btn btn-info" onclick="searchOrderList();"><i class="fa fa-search fa-lg"></i>&nbsp;&nbsp;@B_SEARCH</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row" id="_orderList">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>Order List</span>
                    <a data-toggle="collapse" class="pull-right" href="#orderList" onclick="onPanelToggle(this);" id="orderListHeader"><i class="fa fa-chevron-circle-down fa-lg" id="orderListHeaderArrow"></i></a>
                </h3>
            </div>
            <div id="orderList" class="panel-collapse collapse in">
                <div class="panel-body" style="min-height: 200px;">
                    @*end row2*@
                    <div id="SearchRow3" class="row i-gap-top-1">
                        <div class="col-sm-12 col-md-12 ">
                            @if (usertype == "SCM")
                            {
                                @Html.Partial("_PartialSCMOrderList")
                            }
                            else if (usertype == "FAPO")
                            {
                                @Html.Partial("_PartialFAPOOrderList")
                            }
                            else if (usertype == "ACCT")
                            {
                                @*@Html.Partial("_PartialSCMOrderList")*@
                                @Html.Partial("_PartialACCOrderList")
                            }
                        </div>
                    </div>
                    <div id="SearchRow4" class="row i-gap-top-1">
                        <br />
                    </div>
                    <div id="SearchRow5" class="row i-gap-top-1">
                        <div class="col-sm-12 col-md-12 i-text-align-right">
                            @if (usertype == "SCM")
                            {
                                <a class="btn btn-info  " id="btnUpallWTS" onclick="UpdateAllWTS();"><i class=""></i>&nbsp; &nbsp;Update Status Waiting Sub Verify</a>
                                <a class="btn btn-info  " id="btnUpallHOLD" onclick="UpdateAllHOLD();"><i class=""></i>&nbsp; &nbsp;Update Status Hold</a>


                            }
                            @*<button class="btn btn-info" id="updateall" onclick="UpdateAll();"><i class="fa fa-pencil-square-o"></i>&nbsp;&nbsp;@B_update</button>*@
                            <a class="btn btn-info" id="updatebyfile" onclick="UpdateBtFileConfig();"><i class="fa fa-pencil-square-o"></i>&nbsp;&nbsp;@B_updatebyfile</a>
                            @*<a class="btn btn-info" id="export" onclick="_Export();"><i class="fa fa-file-excel-o"></i>&nbsp;&nbsp;@B_export</a>*@
                            @if (usertype == "SCM")
                            {
                                <a class="btn btn-info  " id="sendmail" onclick="_SendMail();" disabled="disabled"><i class=" fa fa-envelope"></i>&nbsp; &nbsp;@B_sendmail</a>

                            }
                            @if (usertype == "FAPO")
                            {
                                <a class="btn btn-info  " id="btnReCalByFileByDistance" onclick="ReCalByFileByDistance();"><i class="fa fa-pencil-square-o"></i>&nbsp;&nbsp;@B_ReCalByFileByDistance</a>
                            }
                            @if (usertype == "ACCT")
                            {
                                <a class="btn btn-info  " id="btnAcctUpdate" onclick="AcctUpdate();"><i class="fa fa-pencil-square-o"></i>&nbsp;&nbsp;Update Status Comfirm Paid</a>
                            }
                            <a class="btn btn-success" id="export" onclick="OpenExport();"><i class="fa fa-file-excel-o"></i>&nbsp;&nbsp;Export   </a>
                            @*<a class="btn btn-info" onclick="_ClearAll();"><i class="fa fa-times"></i>&nbsp;&nbsp;@B_clearall</a>*@
                        </div>
                        @*<a class="btn btn-info" onclick="EditConfig();">&nbsp;&nbsp;TESTPopupEdit</a>*@
                    </div>
                    @*end row3*@
                </div>
            </div>
            @*end SearchPanel*@
        </div>
    </div>
</div>
<div id="_orderListPanel" class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>Order List Panel</span>
                    <a data-toggle="collapse" class="pull-right" href="#orderListPanel" onclick="onPanelToggle(this);" id="orderListPanelHeader"><i class="fa fa-chevron-circle-down fa-lg" id="orderListPanelHeaderArrow"></i></a>
                </h3>
            </div>
            <div id="orderListPanel" class="panel-collapse collapse in">
                <div class="panel-body" style="min-height: 200px;">

                    <div class="row">
                        <div class="col-sm-12 col-md-4">
                            <label>@L_ACC_NBR</label>
                            <input type="text" id="_ACC_NBR" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_USER_NAME</label>
                            <input type="text" id="_USER_NAME" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_SBC_CPY</label>
                            <input type="text" id="_SBC_CPY" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_orderD_PRODUCT_NAME</label>
                            <input type="text" id="_PRODUCT_NAME" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_ON_TOP1</label>
                            <input type="text" id="_ON_TOP1" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_ON_TOP2</label>
                            <input type="text" id="_ON_TOP2" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_VOIP_NUMBER</label>
                            <input type="text" id="_VOIP_NUMBER" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_SERVICE_PACK_NAME</label>
                            <input type="text" id="_SERVICE_PACK_NAME" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_ORD_NO</label>
                            <input type="text" id="_ORD_NO" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_orderD_ORDER_TYPE</label>
                            <input type="text" id="_ORDER_TYPE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_ORDER_SFF</label>
                            <input type="text" id="_ORDER_SFF" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_APPOINTMENT_DATE</label>
                            <input type="text" id="_APPOINTMENT_DATE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_SFF_ACTIVE_DATE</label>
                            <input type="text" id="_SFF_ACTIVE_DATE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_APPROVE_JOB_FBSS_DATE</label>
                            <input type="text" id="_APPROVE_JOB_FBSS_DATE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_COMPLETED_DATE</label>
                            <input type="text" id="_COMPLETED_DATE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_ORDER_STATUS</label>
                            <input type="text" id="_WORK_STATUS" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_REJECT_REASON</label>
                            <input type="text" id="_REJECT_REASON" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_MATERIAL_CODE_CPESN</label>
                            <input type="text" id="_MATERIAL_CODE_CPESN" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_CPE_SN</label>
                            <input type="text" id="_CPE_SN" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_CPE_MODE</label>
                            <input type="text" id="_CPE_MODE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_MATERIAL_CODE_STBSN</label>
                            <input type="text" id="_MATERIAL_CODE_STBSN" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_STB_SN</label>
                            <input type="text" id="_STB_SN" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_MATERIAL_CODE_ATASN</label>
                            <input type="text" id="_MATERIAL_CODE_ATASN" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_ATA_SN</label>
                            <input type="text" id="_ATA_SN" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_MATERIAL_CODE_WIFIROUTESN</label>
                            <input type="text" id="_MATERIAL_CODE_WIFIROUTESN" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_WIFI_ROUTER_SN</label>
                            <input type="text" id="_WIFI_ROUTER_SN" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_STO_LOCATION</label>
                            <input type="text" id="_STO_LOCATION" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_orderD_VENDOR_CODE</label>
                            <input type="text" id="_VENDOR_CODE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_FOA_REJECT_REASON</label>
                            <input type="text" id="_FOA_REJECT_REASON" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_RE_APPOINTMENT_REASON</label>
                            <input type="text" id="_RE_APPOINTMENT_REASON" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_PHASE_PO</label>
                            <input type="text" id="_PHASE_PO" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_SFF_SUBMITTED_DATE</label>
                            <input type="text" id="_SFF_SUBMITTED_DATE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_EVENT_CODE</label>
                            <input type="text" id="_EVENT_CODE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_REGION</label>
                            <input type="text" id="_REGION" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <label>@L_TOTAL_FEE</label>
                            <input type="text" id="_TOTAL_FEE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-4">
                            <label>@L_FEE_CODE</label>
                            <input type="text" id="_ENTRY_FEE" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="FLSupdateALL">
    @(Html.Kendo().Window()
                             .Name("FLSEditALLConfigPopup")
                             .HtmlAttributes(new { @class = "i-gap-popup" })
                             //.Title("Status Waiting Sub Verify")
                             .Width(1024)
                             .Draggable()
                             .Visible(false)
                             .Modal(true)
                             .Content(@<text>
                                @Html.Partial("_PartialFLSUpdateallOrder")
                            </text>)
    )
</div>
<div id="ACCT">
    @(Html.Kendo().Window()
                    .Name("ACCTPopup")
                    .HtmlAttributes(new { @class = "i-gap-popup" })
                    //.Title("Status Waiting Sub Verify")
                    .Title(@UserViewType)
                    .Width(960)
                    .Draggable()
                    .Visible(false)
                    .Modal(true)
                    .Content(@<text>
                        @Html.Partial("_PartialEditAllACCOrderPopup")
                    </text>)
    )
</div>
<div id="PopupKendo">
    @(Html.Kendo().Window()
                      .Name("EditConfigPopup")
                      .HtmlAttributes(new { @class = "i-gap-popup" })
                      .Title(@UserViewType)
                      .Width(620)
                      .Draggable()
                      .Visible(false)
                      .Modal(true)
                      .Content(@<text>

                        @if (usertype == "SCM")
                                    {
                            @Html.Partial("_PartialEditSCMOrderPopup")
                                    }
                                    else if (usertype == "FAPO")
                                    {
                            @Html.Partial("_PartialEditFAPOOrderPopup")
                                    }
                                    else if (usertype == "ACCT")
                                    {
                            @Html.Partial("_PartialEditACCOrderPopup")
                                    }


                    </text>)
    )
    @(Html.Kendo().Window()
                      .Name("UpdateStatusByFileConfig")
                      .HtmlAttributes(new { @class = "i-gap-popup" })
                      .Title(false)
                      .Width(520)
                      .Draggable()
                      .Visible(false)
                      .Modal(true)
                      .Content(@<text>

                        @if (usertype == "SCM")
                                    {
                            @Html.Partial("_PartialUpdateSCMStatusByFile")
                                    }
                                    else if (usertype == "FAPO")
                                    {
                            @Html.Partial("_PartialUpdateFAPOStatusByFile")
                                    }
                                    else if (usertype == "ACCT")
                                    {
                            @Html.Partial("_PartialUpdateACCStatusByFile")
                                    }


                    </text>)
    )
    @*R19.03 ADD EditConfigPopupFOA *@
    @(Html.Kendo().Window()
                      .Name("EditConfigPopupFOA")
                      .HtmlAttributes(new { @class = "i-gap-popup" })
                      .Title(@UserViewType + " Re-Cal Distance")
                      .Width(1000)
                      .Draggable()
                      .Visible(false)
                      .Modal(true)
                      .Content(@<text>
                        @if (usertype == "FAPO")
                                    {
                            @Html.Partial("_PartialReCalDistanceFAPOOrderPopup")
                                    }
                    </text>)
    )
    @(Html.Kendo().Window()
                      .Name("EditConfigPopupWithRadioBtn")
                      .HtmlAttributes(new { @class = "i-gap-popup" })
                      .Title(@UserViewType)
                      .Width(620)
                      .Draggable()
                      .Visible(false)
                      .Modal(true)
                      .Content(@<text>

                        @if (usertype == "FAPO")
                                    {
                            @Html.Partial("_PartialEditFAPOOrderPopupWithRadioBtn")
                                    }
                    </text>)
    )
    @*R19.03 ADD UpdateAllCheckOpenConfirmPopupByStatus *@
    @(Html.Kendo().Window()
                              .Name("UpdateAllCheckOpenConfirmPopupByStatus")
                      .HtmlAttributes(new { @class = "i-gap-popup" })
                         .Title(@UserViewType + " WorkFlow Status")
                      .Width(520)
                      .Draggable()
                      .Visible(false)
                      .Modal(true)
                      .Content(@<text>
                        <row>

                            <div class=" col-sm-12 col-md-6">
                                <div class="form-group">
                                    <label>@L_STATUS <span id="requiredfor-SectorInfo"></span></label>&nbsp;<label style="color:red;font-size:15px">*</label>
                                    <div class="i-fg-data-entry">
                                        @(Html.Kendo().DropDownList()
                                                      .Name("ddlFAPOWorkFlowStatus")
                                                      .HtmlAttributes(new { @class = "form-control i-form-control-extend" })
                                                      .DataTextField("DISPLAY_VAL")
                                                      .DataValueField("LOV_VAL1")
                                                      .DataSource(source =>
                                                      {
                                                                                source.Read(read =>
                                                                    {
                                                                                                          read.Action("SelectFAPOWorkFlowStatus", "ReportInstallationCostbyOrder");

                                                                                                      });

                                                                            }).SelectedIndex(0)
                                                //  .Events(e => e.Change("ddlstatusonChangeDropDown"))
                                        )
                                    </div>
                                    <div class="i-fg-data-entry-validation" id="validatefor-FAPOWorkFlowStatus"></div>

                                </div>
                            </div>
                        </row>

                        <row>
                            <div class=" col-sm-12 col-md-6">
                                <div class="form-group">
                                    <div class="row i-gap-top-1">
                                        <div class="i-text-align-center">
                                            <a id="ConfirmFAPOConfirmRecalDistanceWorkStatus" class="btn btn-success" onclick="ConfirmRecalFAPODistanceWorkStatus();"><i class="fa fa-check-square-o fa-lg"></i>&nbsp;&nbsp;@B_CONFIRM</a>
                                            <a id="CancelFAPOConfirmRecalDistanceWorkStatus" class="btn btn-danger" onclick="CanCelRecalFAPODistanceWorkStatus();"><i class="fa fa-ban fa-lg"></i>&nbsp;&nbsp;@B_CANCEL</a>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </row>
                    </text>)
    )
    @*R19.03 ADD ReCalDistanceByFileBy *@
    @(Html.Kendo().Window()
                              .Name("ReCalDistanceByFileBy")
                      .HtmlAttributes(new { @class = "i-gap-popup" })
                      .Title(@UserViewType + " Re-Cal By File")
                      .Width(520)
                      .Draggable()
                      .Visible(false)
                      .Modal(true)
                      .Content(@<text>
                        @if (usertype == "FAPO")
                                    {
                            @Html.Partial("_PartialUpdateFAPOReCalDistanceByFile")

                                    }

                    </text>)
    )
</div>
<div id="_orderListHistory" class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>Order List History</span>
                    <a data-toggle="collapse" class="pull-right" href="#orderListHistory" onclick="onPanelToggle(this);" id="orderListHistoryHeader"><i class="fa fa-chevron-circle-down fa-lg" id="orderListHistoryHeaderArrow"></i></a>
                </h3>
            </div>
            <div id="orderListHistory" class="panel-collapse collapse in">
                <div class="panel-body" style="min-height: 200px;">
                    <div class="col-sm-12 col-md-12 ">
                        <div id="_ridOrderListHistory" class="row">



                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.reportInstallOrderHistoryDetailModel>()
                                                                .Name("gridOrderListHistory")
                                                        .Columns(columns =>
                                                        {

                                                            columns.Bound(p => p.WORK_STATUS).Title(@ordhis_WORKSTATUS).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.UPDATE_BY).Title(@ordhis_UPDATEBY).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.REMARK).Title(@ordhis_REMARK).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.REMARK_FOR_SUB).Title(@ordhis_REMARK_SUB).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.LENGTH_DISTANCE).Title(@ordhis_LENGTH_DISTANCE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.OVER_LENGTH).Title(@ordhis_OVER_LENGTH).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.OVER_COST).Title(@ordhis_OVER_COST).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.TOTAL_COST).Title(@ordhis_TOTAL_COST).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            //columns.Bound(p => p.RULE_ID).Title(@ordhis_RULE_ID).HtmlAttributes(new { style = "text-align:left;" }).Width(150);

                                                            columns.Bound(p => p.UPDATE_DATE_TEXT).Format("{0: dd/MM/yyyy HH:mm:ss}").Title(@ordhis_UPDATEDATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                                        })
                                                            //  .ToolBar(toolbar => toolbar.Template("<div class='pull-right'><a onclick='ExportToExcel()' id='btnExport'  class='btn btn-default'><i class='fa fa-reply fa-lg'></i>&nbsp; Export To Excel </a></div>"))
                                                            .Scrollable(scrollable => scrollable.Height("auto"))
                                                              .Resizable(resize => resize.Columns(true))
                                                              .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                              .AutoBind(false)
                                                              .DataSource(dataSource => dataSource
                                                              .Ajax()
                                                              .PageSize(20)
                                                                             .Read(read => read.Action("getOrderListHistory", "ReportInstallationCostbyOrder").Data("detailbindingValue"))
                                                               )
                            //   .Events(e => e.DataBound("onGridDataBound"))
                            )

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="_DistanceDetail" class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>Distance Detail</span>
                    <a data-toggle="collapse" class="pull-right" href="#DistanceDetail" onclick="onPanelToggle(this);" id="DistanceDetailHeader"><i class="fa fa-chevron-circle-down fa-lg" id="DistanceDetailHeaderArrow"></i></a>
                </h3>
            </div>
            <div id="DistanceDetail" class="panel-collapse collapse in">
                <div class="panel-body" style="min-height: 200px;">
                    <div class="col-sm-12 col-md-12 ">
                        <div id="GridDistanceDetail" class="row">


                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.reportInstallDistanceDetailModel>()
                                                        .Name("gridDistanceDetail")
                                                        .Columns(columns =>
                                                        {


                                                            columns.Bound(p => p.TRANSACTION_ID).Title(@L_TRANSACTION_ID).HtmlAttributes(new { style = "text-align:left;" }).Width(170);

                                                            columns.Bound(p => p.REAL_DISTANCE).Title(@L_REAL_DISTANCE).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(170);
                                                            columns.Bound(p => p.MAP_DISTANCE).Title(@L_MAP_DISTANCE).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(170);
                                                            columns.Bound(p => p.DISP_DISTANCE).Title(@L_DISP_DISTANCE).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(170);
                                                            columns.Bound(p => p.ESRI_DISTANCE).Title(@L_ESRI_DISTANCE).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(170);

                                                            columns.Bound(p => p.X1).Title(@L_X1).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(120);
                                                            columns.Bound(p => p.X2).Title(@L_X2).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(120);
                                                            columns.Bound(p => p.X2_1).Title(@L_X2_1).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(120);
                                                            columns.Bound(p => p.X2_2).Title(@L_X2_2).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(120);
                                                            columns.Bound(p => p.X2_3).Title(@L_X2_3).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(120);
                                                            columns.Bound(p => p.X2_4).Title(@L_X2_4).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(120);
                                                            columns.Bound(p => p.X3).Title(@L_X3).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(120);
                                                            columns.Bound(p => p.X4).Title(@L_X4).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(120);
                                                            columns.Bound(p => p.TotalPaid).Title(@L_TOTAL_PAID).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n}").Width(120);

                                                            columns.Bound(p => p.STATUS).Title(@L_STATUS).HtmlAttributes(new { style = "text-align:left;" }).Width(120);
                                                            columns.Bound(p => p.USER_NAME).Title(@L_dd_USER_NAME).HtmlAttributes(new { style = "text-align:left;" }).Width(120);
                                                            columns.Bound(p => p.ACTION_DATE).Format("{0: dd/MM/yyyy HH:mm:ss}").Title(@L_ACTION_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(170);
                                                            columns.Bound(p => p.POST_SAP).Title(@L_POST_SAP).HtmlAttributes(new { style = "text-align:center;" }).Width(120);

                                                        })
                                                            //  .ToolBar(toolbar => toolbar.Template("<div class='pull-right'><a onclick='ExportToExcel()' id='btnExport'  class='btn btn-default'><i class='fa fa-reply fa-lg'></i>&nbsp; Export To Excel </a></div>"))
                                                            .Scrollable(scrollable => scrollable.Height("auto"))
                                                              .Resizable(resize => resize.Columns(true))
                                                              .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                              .AutoBind(false)
                                                              .DataSource(dataSource => dataSource
                                                              .Ajax()
                                                              .PageSize(20)
                                                              .Read(read => read.Action("getDistanceDetail", "ReportInstallationCostbyOrder").Data("detailbindingValue"))
                                                               )
                                    //   .Events(e => e.DataBound("onGridDataBound"))
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="_SapDetail" class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>POST SAP Detail</span>
                    <a data-toggle="collapse" class="pull-right" href="#SapDetail" onclick="onPanelToggle(this);" id="SapDetailHeader"><i class="fa fa-chevron-circle-down fa-lg" id="SapDetailHeaderArrow"></i></a>
                </h3>
            </div>




            <div id="SapDetail" class="panel-collapse collapse in">
                <div class="panel-body" style="min-height: 200px;">
                    <div class="row">
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_ORDER_NO</label>
                            @*@Html.TextBoxFor(t => t.OrderNo, new { maxlength = 50, @class = "k-textbox form-control" })*@
                            <input type="text" id="ordNo" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_ORDER_DATE</label>
                            @*@Html.TextBoxFor(t => t.OrderDatetime, new { maxlength = 50, @class = "k-textbox form-control" })*@
                            <input type="text" id="ordDate" value="" disabled="disabled" class="k-textbox form-control" />

                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_ORDER_TYPE</label>
                            @*@Html.TextBoxFor(t => t.OrderType, new { maxlength = 50, @class = "k-textbox form-control" })*@
                            <input type="text" id="ordType" value="" disabled="disabled" class="k-textbox form-control" />

                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_TOTAL_AMT</label>
                            @*@Html.TextBoxFor(t => t.ProductName, new { maxlength = 50, @class = "k-textbox form-control" })*@
                            <input type="text" id="InstCost" value="" disabled="disabled" class="k-textbox form-control" />

                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_REUSE_DROP_WIRE</label>
                            @*@Html.TextBoxFor(t => t.Phase, new { maxlength = 50, @class = "k-textbox form-control" })*@
                            <input type="text" id="ReuseFLag" value="" disabled="disabled" class="k-textbox form-control" />

                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_PRODUCT</label>
                            @*@Html.TextBoxFor(t => t.Vendor, new { maxlength = 50, @class = "k-textbox form-control" })*@
                            <input type="text" id="prdName" value="" disabled="disabled" class="k-textbox form-control" />

                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_PHASE</label>
                            @*@Html.TextBoxFor(t => t.Case, new { maxlength = 50, @class = "k-textbox form-control" })*@
                            <input type="text" id="phase" value="" disabled="disabled" class="k-textbox form-control" />

                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_SUB_CONTRACT_NAME</label>
                            @*@Html.TextBoxFor(t => t.ReuseFlag, new { maxlength = 50, @class = "k-textbox form-control" })*@
                            <input type="text" id="subContactName" value="" disabled="disabled" class="k-textbox form-control" />

                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_SUB_CONTRACT_TYPE </label>
                            @*@Html.TextBoxFor(t => t.TotalAmount, new { maxlength = 50, @class = "k-textbox form-control" })*@

                            <input type="text" id="subconttype" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_SUB_CONTRACT_SUB_TYPE </label>
                            @*@Html.TextBoxFor(t => t.TotalAmount, new { maxlength = 50, @class = "k-textbox form-control" })*@

                            <input type="text" id="subcontsubtype" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>

                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_ADDRESS_ID </label>
                            @*@Html.TextBoxFor(t => t.TotalAmount, new { maxlength = 50, @class = "k-textbox form-control" })*@

                            <input type="text" id="addID" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_ADDRESS_NAME </label>
                            @*@Html.TextBoxFor(t => t.TotalAmount, new { maxlength = 50, @class = "k-textbox form-control" })*@

                            <input type="text" id="addName" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_RULE_ID </label>
                            @*@Html.TextBoxFor(t => t.TotalAmount, new { maxlength = 50, @class = "k-textbox form-control" })*@

                            <input type="text" id="ruleID" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>
                        <div class="col-sm-12 col-md-3">
                            <label>@L_PZ_CASE </label>
                            @*@Html.TextBoxFor(t => t.TotalAmount, new { maxlength = 50, @class = "k-textbox form-control" })*@

                            <input type="text" id="ordStatus" value="" disabled="disabled" class="k-textbox form-control" />
                        </div>



                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="_orderListPackage" class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>Order Package Detail</span>
                    <a data-toggle="collapse" class="pull-right" href="#orderListPackage" onclick="onPanelToggle(this);" id="orderListPackageHeader"><i class="fa fa-chevron-circle-down fa-lg" id="orderListPackageHeaderArrow"></i></a>
                </h3>
            </div>
            <div id="orderListPackage" class="panel-collapse collapse in">
                <div class="col-sm-12 col-md-12" style="margin-top:15px; margin-bottom:10px;">
                    <label>Order  no. :</label>&nbsp;<span id="orderListPackage-orderNo"></span><br>
                    <label>Access no. :</label>&nbsp;<span id="orderListPackage-accessNo"></span>
                </div>
                <div class="panel-body" style="min-height: 200px;">
                    <div class="col-sm-12 col-md-12 ">
                        <div id="_ridorderListPackage" class="row">
                            @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.reportInstallOrderPackageDetailModel>()
                                                                .Name("gridorderListPackage")
                                                        .Columns(columns =>
                                                        {

                                                            columns.Bound(p => p.PACKAGE_CODE).Title(@ordpackage_PACKAGE_CODE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.PACKAGE_NAME).Title(@ordpackage_PACKAGE_NAME).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.PACKAGE_CLASS).Title(@ordpackage_PACKAGE_CLASS).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.NEW_PACKAGE).Title(@ordpackage_NEW_PACKAGE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.CREATED_DATE_TEXT).Format("{0: dd/MM/yyyy HH:mm:ss}").Title(@ordpackage_CREATED_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                                        })
                                                            //  .ToolBar(toolbar => toolbar.Template("<div class='pull-right'><a onclick='ExportToExcel()' id='btnExport'  class='btn btn-default'><i class='fa fa-reply fa-lg'></i>&nbsp; Export To Excel </a></div>"))
                                                            .Scrollable(scrollable => scrollable.Height("auto"))
                                                              .Resizable(resize => resize.Columns(true))
                                                              .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                              .AutoBind(false)
                                                              .DataSource(dataSource => dataSource
                                                              .Ajax()
                                                              .PageSize(20)
                                                                             .Read(read => read.Action("getOrderListPackage", "ReportInstallationCostbyOrder").Data("detailbindingValue"))
                                                               )
                            //   .Events(e => e.DataBound("onGridDataBound"))
                            )

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="_orderListFee" class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>Order Fee Detail</span>
                    <a data-toggle="collapse" class="pull-right" href="#orderListFee" onclick="onPanelToggle(this);" id="orderListFeeHeader"><i class="fa fa-chevron-circle-down fa-lg" id="orderListFeeHeaderArrow"></i></a>
                </h3>
            </div>
            <div id="orderListFee" class="panel-collapse collapse in">
                    <div class="col-sm-12 col-md-12" style="margin-top:15px; margin-bottom:10px;">
                        <label>Order  no. :</label>&nbsp;<span id="orderListFee-orderNo"></span><br>
                        <label>Access no. :</label>&nbsp;<span id="orderListFee-accessNo"></span>
                    </div>
                    <div class="panel-body" style="min-height: 200px;">
                        <div class="col-sm-12 col-md-12 ">
                            <div id="_ridorderListFee" class="row">
                                @(Html.Kendo().Grid<WBBEntity.PanelModels.FBBWebConfigModels.reportInstallOrderFeeDetailModel>()
                                                                .Name("gridorderListFee")
                                                        .Columns(columns =>
                                                        {

                                                            columns.Bound(p => p.FEE_ID).Title(@ordfee_FEE_ID).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.FEE_ID_TYPE).Title(@ordfee_FEE_TYPE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.FEE_NAME).Title(@ordfee_FEE_NAME).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.ORDER_FEE_PRICE).Title(@ordfee_FEE_PRICE).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.FEE_ACTION).Title(@ordfee_FEE_ACTION).HtmlAttributes(new { style = "text-align:left;" }).Width(150);
                                                            columns.Bound(p => p.CREATED_DATE_TEXT).Format("{0: dd/MM/yyyy HH:mm:ss}").Title(ordfee_CREATED_DATE).HtmlAttributes(new { style = "text-align:center;" }).Width(150);
                                                        })
                                                            //  .ToolBar(toolbar => toolbar.Template("<div class='pull-right'><a onclick='ExportToExcel()' id='btnExport'  class='btn btn-default'><i class='fa fa-reply fa-lg'></i>&nbsp; Export To Excel </a></div>"))
                                                            .Scrollable(scrollable => scrollable.Height("auto"))
                                                              .Resizable(resize => resize.Columns(true))
                                                              .Pageable(pageable => pageable.Numeric(true).PageSizes(new int[] { 20, 50, 100 }))
                                                              .AutoBind(false)
                                                              .DataSource(dataSource => dataSource
                                                              .Ajax()
                                                              .PageSize(20)
                                                                             .Read(read => read.Action("getOrderListFee", "ReportInstallationCostbyOrder").Data("detailbindingValue"))
                                                               )
                            //   .Events(e => e.DataBound("onGridDataBound"))
                            )

                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </div>
</div>
<input type="hidden" id="accNo" />
<input id="tempNote" type="hidden" value="" />
<input id="chk" type="hidden" />
@(Html.Kendo().Window()
             .Name("_SendMail")
            .HtmlAttributes(new { @class = "i-gap-popup" })
             .Title(@B_sendmail)
            .Width(580)
            .Draggable()
            .Visible(false)
            .Modal(true)
           .Content(@<text>
            @Html.Partial("_PartialSendMail")

        </text>)
)
@(Html.Kendo().Window()
                                            .Name("noData")
                                        .HtmlAttributes(new { @class = "i-gap-popup" })

                                            .Title("System Information")
                                        .Width(400)
                                        .Draggable()
                                        .Visible(false)
                                        .Modal(true)
                                       .Content(@<text>
                                        <div id="Nodata">
                                            <div style="text-align:center" class="row">
                                                <label style="font-size:15px;color:red">  No Data Found </label>
                                            </div>
                                        </div>
                                    </text>)
)
@(Html.Kendo().Window()
                                            .Name("_ExportEmail")
                                        .HtmlAttributes(new { @class = "i-gap-popup" })

                                            .Title("Export")
                                        .Width(500)
                                        .Draggable()
                                        .Visible(false)
                                        .Modal(true)
                                       .Content(@<text>

                                        <div class="row">
                                            <div class=" col-sm-3" style="text-align:right">

                                                <label> <span id="requiredfor-SectorInfo"></span>&nbsp;<label style="color:red;font-size:15px">*&nbsp;</label>Email</label>

                                            </div>
                                            <div class=" col-sm-6">
                                                @*<input type="text" id="_emailinput" class="k-textbox form-control" />*@
                                                <input type="email" id="_emailinput" class="k-textbox form-control" placeholder="Enter your email">
                                                <div class="i-fg-data-entry-validation" id="validatefor-_emailinput"> </div>
                                            </div>

                                        </div>
                                        <br />
                                        <div class="row" style="text-align:center">

                                                 <a id = "btcloseexportemail" onclick="CloseEmailExport();" class="btn btn-danger"><i class="fa fa-ban fa-lg"></i>&nbsp;&nbsp;CLOSE</a>
                                                 <a class="btn btn-info" id="exportemail" onclick="_ExportByEmail();"><i class="fa fa-envelope"></i>&nbsp;&nbsp;Send to Email</a>
                                         </div>

                                 </text>)
)
<input type="hidden" id="_sumincvat" />
<input type="hidden" id="_sumvat" />
<input type="hidden" id="_sumtotal" />
<input type="hidden" id="AccNo_note" />
<input type="hidden" id="ordNo_note" />
<input type="hidden" id="note" />
<input type="hidden" id="dbk_ACC_NO" />
<input type="hidden" id="dbk_ORD_NO" />
<input type="hidden" id="chkall" value="False" />
<input type="hidden" id="chkusertype" value="@ViewBag.UserGroup" />
<input type="hidden" id="_WFSTATUS" />
<input type="hidden" id="hideinvNo" />
<script src="~/Scripts/kendo/2014.1.415/jszip.min.js"></script>
<script>

    var ddlStatusModel = {
        work_status: ""
    };


    function ValidationIcon() {
        return "<i class='fa fa-warning i-red'></i> ";
    }
    var editbyOrdermodel = function () {
        ACCESS_NO: "";
        INTERFACE = "";
        USER = "";
        STATUS = "";
        INV_NO = "";
        INV_DT = "";
        IR_DOC = "";
        VALIDATE_DIS = "";
        REASON = "";
        REMARK = "";
        REMARKFORSUB = "";
        TRANSFER_DT = "";
    }
    var ReportInstallationCostbyOrderModel = function () {
        ORDER_NO: "";
        ACCESS_NO: "";
        PRODUCT_NAME: "";
        SUBCONT_CODE: ""; //ddlVendorcode
        ORG_ID: ""; //ddlSubContract
        SUBCONT_NAME: ""; //ddlSubContract
        IR_DOC: "";
        INVOICE_NO: "";
        WORK_STATUS: ""; // ddlWorkflowStatus
        SUBCONT_TYPE: ""; //ddlSubContract_type
        SUBCONTSUB_TYPE: ""; //ddlSubContract_sub_type
        ORD_STATUS: "";  //ddlOrderStatus
        ORD_TYPE: ""; //ddlOrdertype
        REGION: "";
        FOA_FM: "";
        FOA_TO: "";
        APPROVE_FM: "";
        APPROVE_TO: "";
        PERIOD_FM: "";
        PERIOD_TO: "";
        TRANS_FM: "";
        TRANS_TO: "";
        UPDATE_BY: "";
        PRODUCT_OWNER = ""; //ddlProductOwner
        report_type = "";
        PAGE_INDEX: 1;
        PAGE_SIZE: 20;
    }

    function defaultData() {
        var searchResult = new ReportInstallationCostbyOrderModel();
        searchResult.ORDER_NO = $("#ORDER_NO").val(); //ORDER_NO
        searchResult.ACCESS_NO = $("#ACCESS_NO").val(); //ACCESS_NO
        searchResult.PRODUCT_NAME = $("#ddlProductName").val(); //ddlProductName
        searchResult.PRODUCT_OWNER = $("#ddlProductOwner").val(); //ddlProductOwner
        searchResult.SUBCONT_CODE = $("#ddlVendorcode").val(); //ddlVendorcode
        searchResult.ORG_ID = $("#ddlSubContract").val();//ddlSubContract
        //searchResult.SUBCONT_NAME = $("#ddlSubContract").val();//ddlSubContract
        searchResult.IR_DOC = $("#ddlIrDoc").val(); //ddlIrDoc
        searchResult.INVOICE_NO = $("#INVOICE_NO").val(); //INVOICE_NO
        searchResult.WORK_STATUS = $("#ddlWorkflowStatus").val(); //ddlWorkflowStatus
        searchResult.ORD_STATUS = $("#ddlOrdStatus").val();
        searchResult.ORD_TYPE = $("#ddlOrdertype").val();
        searchResult.REGION = $("#ddlRegion").val(); //ddlRegion

        searchResult.SUBCONT_TYPE = $("#ddlSubContracttype").val();
        searchResult.SUBCONTSUB_TYPE = $("#ddlSubContractsubtype").val();

        searchResult.FOA_FM = $("#dtpFoaDateFrom").val();

        searchResult.FOA_TO = $("#dtpFoaDateTo").val();


        searchResult.PERIOD_FM = $("#dtpWithdrawalDateFrom").val();
        searchResult.PERIOD_TO = $("#dtpWithdrawalDateTo").val();
        searchResult.APPROVE_FM = $("#dtpCsApproveDateFrom").val();
        searchResult.APPROVE_TO = $("#dtpCsApproveDateTo").val();
        searchResult.TRANS_FM = $("#dtpTransferDateFrom").val();
        searchResult.TRANS_TO = $("#dtpTransferDateTo").val();
        searchResult.UPDATE_BY = "";

        //$("#orderListPackage-orderNo").html(searchResult.ORDER_NO);
        //$("#orderListPackage-accessNo").html(searchResult.ACCESS_NO);
        //$("#orderListFee-orderNo").html(searchResult.ORDER_NO);
        //$("#orderListFee-accessNo").html(searchResult.ACCESS_NO);

        var grid = getGridName();
        searchResult.PAGE_INDEX = grid.dataSource.page();
        searchResult.PAGE_SIZE = grid.dataSource.pageSize();

        var tabStrip = $("#SoftwareTabStrip").data("kendoTabStrip");
        var selectedIndex = tabStrip.select().index();
        var tab = "";
        if (selectedIndex === 0) {
            // INSTALLATION tab is selected
            tab = "INSTALL";
        } else if (selectedIndex === 1) {
            // MA tab is selected
            tab = "MA";
        }
        searchResult.report_type = tab;

        return searchResult;
    }
    var FLSUpdateModel = function () {
        UPDATESTATUS = "";
        WF_STATUS: "";

        DateFrom: "";
        DateTo: "";
        INVOICE_NO: "";
        INVOICE_DATE = "";

        PAGE_INDEX: 1;
        PAGE_SIZE: 20;

        report_type: "";
    }


    function getGridName() {
        //checkTabStrip();
        var tabStrip = $("#SoftwareTabStrip").data("kendoTabStrip");
        console.log(tabStrip);
        var selectedIndex = tabStrip.select().index();


        var name;
        if (("@usertype" === "SCM")) {
            //name = $("#SCMView").data("kendoGrid");
            if (selectedIndex === 0) {//INSTALL
                name = $("#SCMView").data("kendoGrid");
            } else if (selectedIndex === 1) {//MA
                name = $("#SCMView2").data("kendoGrid");
            }
        }
        else if ("@usertype" === "FAPO") {
            //name = $("#FAPOView").data("kendoGrid");
            if (selectedIndex === 0) {//INSTALL
                name = $("#FAPOView").data("kendoGrid");

                $("#ddlSymptomName").closest(".col-sm-12").hide();
                $("#ddlSymptomGroup").closest(".col-sm-12").hide();
            } else if (selectedIndex === 1) {//MA
                name = $("#FAPOView2").data("kendoGrid");

                //$("#ddlSymptomName").closest(".col-sm-12").show();
                //$("#ddlSymptomGroup").closest(".col-sm-12").show();
                $("#ddlSymptomName").closest(".col-sm-12").hide();
                $("#ddlSymptomGroup").closest(".col-sm-12").hide();
                $('#radio2_wrapper').hide();
                $("#cal_radio1").prop('checked', true);
                //if ($('#radio1_wrapper').is(':visible')) {
                //    $('#cal_radio1').prop('checked', true);
                //}
            }
        }
        else if ("@usertype" === "ACCT") {
            //name = $("#AccountingView").data("kendoGrid");
            if (selectedIndex === 0) {//INSTALL
                name = $("#AccountingView").data("kendoGrid");
            } else if (selectedIndex === 1) {//MA
                name = $("#AccountingView2").data("kendoGrid");
            }
        }
        return name;
    }

    function getGridNameAll() {
        var names = [];
        if (("@usertype" === "SCM")) {
            names = [$("#SCMView").data("kendoGrid"), $("#SCMView2").data("kendoGrid")];
        }
        else if ("@usertype" === "FAPO") {
            names = [$("#FAPOView").data("kendoGrid"), $("#FAPOView2").data("kendoGrid")];
        }
        else if ("@usertype" === "ACCT") {
            names = [$("#AccountingView").data("kendoGrid"), $("#AccountingView2").data("kendoGrid")];
        }
        return names;
    }


    function CallListDetail(ACC_NO, ORD_NO) {

        $.ajax({
            type: "POST",
            url: "/ReportInstallationCostbyOrder/SCMOrderDetail",
            data: { AccNo: ACC_NO, OrdNO: ORD_NO },
            dataType: "json",
            async: false,
            success: function (response) {

                if (response) {
                    $("#_ACC_NBR").val(response._ACC_NBR);
                    $("#_USER_NAME").val(response._USER_NAME);
                    $("#_SBC_CPY").val(response._SBC_CPY);
                    $("#_PRODUCT_NAME").val(response._PRODUCT_NAME);
                    $("#_ON_TOP1").val(response._ON_TOP1);
                    $("#_ON_TOP2").val(response._ON_TOP2);
                    $("#_VOIP_NUMBER").val(response._VOIP_NUMBER);
                    $("#_SERVICE_PACK_NAME").val(response._SERVICE_PACK_NAME);
                    $("#_ORD_NO").val(response._ORD_NO);
                    $("#_ORDER_TYPE").val(response._ORDER_TYPE);
                    $("#_ORDER_SFF").val(response._ORDER_SFF);
                    $("#_APPOINTMENT_DATE").val(response._APPOINTMENT_DATE);
                    $("#_SFF_ACTIVE_DATE").val(response._SFF_ACTIVE_DATE);
                    $("#_APPROVE_JOB_FBSS_DATE").val(response._APPROVE_JOB_FBSS_DATE);
                    $("#_COMPLETED_DATE").val(response._COMPLETED_DATE);
                    $("#_ORDER_STATUS").val(response._WORK_STATUS);
                    $("#_REJECT_REASON").val(response._REJECT_REASON);
                    $("#_MATERIAL_CODE_CPESN").val(response._MATERIAL_CODE_CPESN);
                    $("#_CPE_SN").val(response._CPE_SN);
                    $("#_CPE_MODE").val(response._CPE_MODE);
                    $("#_MATERIAL_CODE_STBSN").val(response._MATERIAL_CODE_STBSN);
                    $("#_STB_SN").val(response._STB_SN);
                    $("#_MATERIAL_CODE_ATASN").val(response._MATERIAL_CODE_ATASN);
                    $("#_ATA_SN").val(response._ATA_SN);
                    $("#_MATERIAL_CODE_WIFIROUTESN").val(response._MATERIAL_CODE_WIFIROUTESN);
                    $("#_WIFI_ROUTER_SN").val(response._WIFI_ROUTER_SN);
                    $("#_STO_LOCATION").val(response._STO_LOCATION);
                    $("#_VENDOR_CODE").val(response._VENDOR_CODE);
                    $("#_FOA_REJECT_REASON").val(response._FOA_REJECT_REASON);
                    $("#_RE_APPOINTMENT_REASON").val(response._RE_APPOINTMENT_REASON);
                    $("#_PHASE_PO").val(response._PHASE_PO);
                    $("#_SFF_SUBMITTED_DATE").val(response._SFF_SUBMITTED_DATE);
                    $("#_EVENT_CODE").val(response._EVENT_CODE);
                    $("#_REGION").val(response._REGION);
                    $("#_ENTRY_FEE").val(response._ENTRY_FEE);
                    $("#_TOTAL_FEE").val(response._TOTAL_FEE);
                    $('#_orderListPanel').show();

                }
            },
            failure: function (msg) {
            }
        });
        var orderHisgrid = $("#gridOrderListHistory").data("kendoGrid");  // ok
        $("#gridOrderListHistory").data("kendoGrid").dataSource.read({ AccNo: ACC_NO, OrdNO: ORD_NO });



        $('#_orderListHistory').show();


        $("#gridDistanceDetail").data("kendoGrid").dataSource.read({ AccNo: ACC_NO, OrdNO: ORD_NO });
        $('#_DistanceDetail').show();

        $("#gridorderListPackage").data("kendoGrid").dataSource.read({ AccNo: ACC_NO, OrdNO: ORD_NO });
        $('#_orderListPackage').show();

        $("#gridorderListFee").data("kendoGrid").dataSource.read({ AccNo: ACC_NO, OrdNO: ORD_NO });
        $('#_orderListFee').show();

        $.ajax({
            type: "POST",
            url: "/ReportInstallationCostbyOrder/SCMPostSapDetail",
            data: { AccNo: ACC_NO, OrdNO: ORD_NO },
            dataType: "json",
            async: false,
            success: function (response) {

                if (response) {
                    $("#ordNo").val(response._ordNo);
                    $("#ordDate").val(response._ordDate);
                    $("#ordType").val(response._ordType);
                    $("#InstCost").val(response._instCost);
                    $("#ReuseFLag").val(response._ReuseFlag);
                    $("#prdName").val(response._PrdName);
                    $("#phase").val(response._Phase);
                    $("#subContactName").val(response._SubContractName);
                    $("#ordStatus").val(response._ordStatus);
                    $("#subconttype").val(response._subconttype);
                    $("#subcontsubtype").val(response._subcontsubtype);

                    $("#addID").val(response._addID);
                    $("#addName").val(response._addName);
                    $("#ruleID").val(response._ruleID);
                    $('#_SapDetail').show();


                }
            },
            failure: function (msg) {
            }
        });

        $("#orderListPackage-orderNo").html(ORD_NO);
        $("#orderListPackage-accessNo").html(ACC_NO);
        $("#orderListFee-orderNo").html(ORD_NO);
        $("#orderListFee-accessNo").html(ACC_NO);

    }



    function CallListRecalDetail(ACC_NO, ORD_NO) {

        $.ajax({
            type: "POST",
            url: "/ReportInstallationCostbyOrder/SCMOrderDetail",
            data: { AccNo: ACC_NO, OrdNO: ORD_NO },
            dataType: "json",
            async: false,
            success: function (response) {

                if (response) {
                    $("#_ACC_NBR").val(response._ACC_NBR);
                    $("#_USER_NAME").val(response._USER_NAME);
                    $("#_SBC_CPY").val(response._SBC_CPY);
                    $("#_PRODUCT_NAME").val(response._PRODUCT_NAME);
                    $("#_ON_TOP1").val(response._ON_TOP1);
                    $("#_ON_TOP2").val(response._ON_TOP2);
                    $("#_VOIP_NUMBER").val(response._VOIP_NUMBER);
                    $("#_SERVICE_PACK_NAME").val(response._SERVICE_PACK_NAME);
                    $("#_ORD_NO").val(response._ORD_NO);
                    $("#_ORDER_TYPE").val(response._ORDER_TYPE);
                    $("#_ORDER_SFF").val(response._ORDER_SFF);
                    $("#_APPOINTMENT_DATE").val(response._APPOINTMENT_DATE);
                    $("#_SFF_ACTIVE_DATE").val(response._SFF_ACTIVE_DATE);
                    $("#_APPROVE_JOB_FBSS_DATE").val(response._APPROVE_JOB_FBSS_DATE);
                    $("#_COMPLETED_DATE").val(response._COMPLETED_DATE);
                    $("#_ORDER_STATUS").val(response._WORK_STATUS);
                    $("#_REJECT_REASON").val(response._REJECT_REASON);
                    $("#_MATERIAL_CODE_CPESN").val(response._MATERIAL_CODE_CPESN);
                    $("#_CPE_SN").val(response._CPE_SN);
                    $("#_CPE_MODE").val(response._CPE_MODE);
                    $("#_MATERIAL_CODE_STBSN").val(response._MATERIAL_CODE_STBSN);
                    $("#_STB_SN").val(response._STB_SN);
                    $("#_MATERIAL_CODE_ATASN").val(response._MATERIAL_CODE_ATASN);
                    $("#_ATA_SN").val(response._ATA_SN);
                    $("#_MATERIAL_CODE_WIFIROUTESN").val(response._MATERIAL_CODE_WIFIROUTESN);
                    $("#_WIFI_ROUTER_SN").val(response._WIFI_ROUTER_SN);
                    $("#_STO_LOCATION").val(response._STO_LOCATION);
                    $("#_VENDOR_CODE").val(response._VENDOR_CODE);
                    $("#_FOA_REJECT_REASON").val(response._FOA_REJECT_REASON);
                    $("#_RE_APPOINTMENT_REASON").val(response._RE_APPOINTMENT_REASON);
                    $("#_PHASE_PO").val(response._PHASE_PO);
                    $("#_SFF_SUBMITTED_DATE").val(response._SFF_SUBMITTED_DATE);
                    $("#_EVENT_CODE").val(response._EVENT_CODE);
                    $("#_REGION").val(response._REGION);
                    $("#_ENTRY_FEE").val(response._ENTRY_FEE);
                    $("#_TOTAL_FEE").val(response._TOTAL_FEE);
                    $('#_orderListPanel').show();


                }
            },
            failure: function (msg) {
            }
        });
        var orderHisgrid = $("#gridRecalDistanceDetail").data("kendoGrid");  // ok


    }


    function onGridDataBound() {
        Loading(0);
        if (this.dataSource.view().length === 0) {
            //insert empty row
            var colspan = this.thead.find("th").length;
            var emptyRow = "<tr style='height:auto; text-align:center' ><td colspan='" + colspan + "'>  </td></tr>";

            this.tbody.html(emptyRow);

            $("#noData").data("kendoWindow").open();
            $("#noData").data("kendoWindow").center();
            //workarounds for IE lt 9
            this.table.width(800);
            $(".k-grid-content").height(2 * kendo.support.scrollbar());
        }
        else {
            $('.k-grid-content').height("auto");
            $('.k-grid-content').css("max-height", "300px");
        }
    }

    $(document).ready(function () {

        $("#EditConfigPopupFOA").kendoWindow({
            open: function () {
                //contentToToggle.style.display = "none";
                var dropdown = $("#NEW_LOOKUP").data("kendoDropDownList");
                if (dropdown) {
                    dropdown.select(0);
                }
                var container = $("#dynamicGridsContainer");
                container.empty();
            },
            close: function () {

                contentToToggle.style.display = "none";
                $("#ONTOP_LOOKUP_RECAL").text("");
                var dropdown = $("#NEW_LOOKUP").data("kendoDropDownList");
                if (dropdown) {
                    dropdown.select(0);
                }
                $("#TOTAL_PRICE").val("");
                var container = $("#dynamicGridsContainer");
                container.empty();
                $(".i-fg-data-entry-validation").each(function () {
                    $(this).html("");  // Clear the content of each validation message container
                });
            }
        });


        $("#FLSEditALLConfigPopup").kendoWindow({
            // ค่าคอนฟิกอื่น ๆ ที่คุณต้องการ
            close: function () {

                ClearUpdateSearch();
            }
        });
      //  $('#btnUpallWTS').hide();
       // $('#btnUpallHOLD').hide();

        $("#chk").val("False");
        $("#tempNote").val("0");
        $("#files").kendoUpload();
        $('#_orderListPanel').hide();
        $('#_orderListHistory').hide();
        $('#_DistanceDetail').hide();
        $('#_SapDetail').hide();
        $('#_orderListPackage').hide();
        $('#_orderListFee').hide();
        var usertype = $("#chkusertype").val();
        if (usertype == "FAPO") {
            var contentToToggle = document.getElementById("contentToToggle");
            contentToToggle.style.display = "none";
        }
      //  $("#dtpFoaDateFrom").data("kendoDatePicker").value(new Date());
      //  $("#dtpFoaDateTo").data("kendoDatePicker").value(new Date());
        //datepicker
        $("#dtpFoaDateTo").data("kendoDatePicker").enable(false);
        $("#dtpCsApproveDateTo").data("kendoDatePicker").enable(false);
        $("#dtpWithdrawalDateTo").data("kendoDatePicker").enable(false);
        $("#dtpTransferDateTo").data("kendoDatePicker").enable(false);

      //  $("#updateall").prop("disabled", true);
        $('#updatebyfile').attr("disabled", false);
        $("#btnAcctUpdate").attr("disabled", true);
       //   btnReCalByFileByDistance
      //  $('#btnReCalByFileByDistance').attr("disabled", true);

        $('#export').attr("disabled", true);
       // $('#btnAcctUpdate').attr("disabled", false);
        $('#sendmail').attr("disabled", true);

        $(".k-multiselect-wrap").css("border", "1px #dadada solid");
        $(".k-upload-empty").css("border", "1px #dadada solid");


        var grid = getGridName();
        var gridList = getGridNameAll();
        gridList.forEach(grid => {
            $(grid.tbody).on("click", "td", function (e) {
                var row = $(this).closest("tr");
                var curRowIdx = $("tr", grid.tbody).index(row);
                var colIdx = $("td", row).index(this);
                var item = grid.dataItem(row);
                if (colIdx == 11) {
                    $("#AccNo_note").val(item.ACCESS_NO);
                    $("#ordNo_note").val(item.ORDER_NO);
                    $("#note").val(item.NOTE);
                }

            });

            $(grid.tbody).on("dblclick", "td", function (e) {
                var row = $(this).closest("tr");
                var rowIdx = $("tr", grid.tbody).index(row);
                var colIdx = $("td", row).index(this);
                var item = grid.dataItem(row);
                //var ACC_NO = item.ACCESS_NUMBER;
                var ACC_NO = item.ACCESS_NO;
                var ORD_NO = item.ORDER_NO_SFF;
                $("#dbk_ACC_NO").val(ACC_NO);
                $("#dbk_ORD_NO").val(ORD_NO);
                if (colIdx <= 3) {
                    CallListDetail(ACC_NO, ORD_NO);
                }

                $("#orderListPackage-orderNo").html(ORD_NO);
                $("#orderListPackage-accessNo").html(ACC_NO);
                $("#orderListFee-orderNo").html(ORD_NO);
                $("#orderListFee-accessNo").html(ACC_NO);
            });
        })
    });

    var model;
    function bindingValue() {
        Loading();
        model = defaultData();
        return {
            dataS: JSON.stringify(model)
        };
    }

    var model2;

    function bindingValueRecal() {

        //var lookupNames = [];
        //var grid = $("#gridRecalDistanceDetail").data("kendoGrid");
        //grid.dataSource.view().forEach(function (item) {
        //    lookupNames.push(item.LOOKUP_NAME);
        //});
        //var lookupNamesString = lookupNames.join(", ");
        //console.log("lookupNamesString ", lookupNamesString);
        //$("#ONTOP_LOOKUP_RECAL").val(lookupNamesString);


        var hiddenData = $("#hiddenDataItem").val();

        var dataItem = hiddenData ? JSON.parse(hiddenData) : null;

        if (dataItem) {
            var result = {
                LOOKUP_NAME: dataItem.LOOKUP_NAME,
                LOOKUP_ID: dataItem.LOOKUP_ID
            };

            return {
                dataS: JSON.stringify(result)
            };
        }

    }

    function bindingValueRecalExsiting() {
        var hiddenData = $("#hiddenDataItem").val();
        var dataItem = hiddenData ? JSON.parse(hiddenData) : null;
        if (dataItem) {
            var result = {
                ACCESS_NO: dataItem.ACCESS_NO,
                ORDER_NO: dataItem.ORDER_NO,
                ORDER_NO_SFF: dataItem.ORDER_NO_SFF,
                SOA_SUBMIT_DATE_TEXT: dataItem.SOA_SUBMIT_DATE_TEXT
            };

            var requestData = {
                dataS: JSON.stringify(result)
            };
            var dropdown = $("#NEW_LOOKUP").data("kendoDropDownList");
            dropdown.dataSource.read();
        }
        return requestData;
    }

    function bindingValueRecalExsiting2() {
        var hiddenData = $("#hiddenDataItem").val();
        var dataItem = hiddenData ? JSON.parse(hiddenData) : null;
        if (dataItem) {

            return {
                text: ""
            };
        }

    }


    function BindingRecalReportInstallationCostbyOrderList2() {
        var gridIndexFromColumn = $("#gridIndexFromColumn").val();
        if (gridIndexFromColumn) {

            return {
                index: gridIndexFromColumn
            };
        }

    }

    function detailbindingValue() {
        //  Loading();
        return {
            AccNO: $("#dbk_ACC_NO").val(),
            OrdNO: $("#dbk_ORD_NO").val()
        };
    }
    function hidepanel()
    {
        $('#_orderListPanel').hide();
        $('#_orderListHistory').hide();
        $('#_DistanceDetail').hide();
        $('#_SapDetail').hide();
        $('#_orderListPackage').hide();
        $('#_orderListFee').hide();

    }
    function UpdateBtFileConfig(e) {
        $("#UpdateStatusByFileConfig").data("kendoWindow").open();
        $("#UpdateStatusByFileConfig").data("kendoWindow").center();
    }
    //R19.03
    function ReCalByFileByDistance(e) {
        $("#ReCalDistanceByFileBy").data("kendoWindow").open();
        $("#ReCalDistanceByFileBy").data("kendoWindow").center();
      //  $("#btnExportTemplateRecal").attr("disabled", true);
    }
    //End R19.03
    $("#INVOICE_NO").keyup(function () {
        CheckKeyUps("INVOICE_NO", "[a-zA-Z0-9_-]");

    });
    $("#ACCESS_NO").keyup(function () {
        CheckKeyUps("ACCESS_NO", "[0-9]");

    });
    function ClearSearch() {
        $('#_orderListPanel').hide();
        $('#_orderListHistory').hide();
        $('#_DistanceDetail').hide();
        $('#_SapDetail').hide();
        $('#_orderListPackage').hide();
        $('#_orderListFee').hide();
       // $('#btnUpallWTS').attr("disabled", true);
        $("#_WFSTATUS").val(""); //INVOICE_NO
       // $('btnUpallHOLD').attr("disabled", true);
        $('#export').attr("disabled", true);
        $('#sendmail').attr("disabled", true);
        $("#ORDER_NO").val("");
        $("#ACCESS_NO").val("");
        var ddlProductName = $("#ddlProductName").data('kendoMultiSelect');
        ddlProductName.value("");
        ddlProductName.trigger("change");
        $("#ddlSubContract").data('kendoDropDownList').value("ALL");
        $("#ddlRegion").data('kendoDropDownList').value("ALL");
        $("#ddlVendorcode").data('kendoDropDownList').value("ALL");
        $("#ddlIrDoc").data('kendoDropDownList').value("ALL");
        $("#ddlSubContracttype").data('kendoDropDownList').value("ALL");
        $("#ddlSubContractsubtype").data('kendoDropDownList').value("ALL");
        $("#ddlProductOwner").data('kendoDropDownList').value("ALL");//ddlProductOwner
        $("#ddlOrdStatus").data('kendoDropDownList').value("ALL");
        $("#ddlOrdertype").data('kendoDropDownList').value("ALL");
        var ddlWorkflowStatus = $("#ddlWorkflowStatus").data('kendoMultiSelect');
        ddlWorkflowStatus.value("");
        ddlWorkflowStatus.trigger("change");

        $("#INVOICE_NO").val("");

        $("#dtpCsApproveDateFrom").data("kendoDatePicker").value(new Date());
        $("#dtpCsApproveDateTo").data("kendoDatePicker").value(new Date());
        $("#dtpWithdrawalDateFrom").data("kendoDatePicker").value(new Date());
        $("#dtpWithdrawalDateTo").data("kendoDatePicker").value(new Date());
        $("#dtpTransferDateFrom").data("kendoDatePicker").value(new Date());
        $("#dtpTransferDateTo").data("kendoDatePicker").value(new Date());
        $("#dtpFoaDateFrom").data("kendoDatePicker").value(new Date());
        $("#dtpFoaDateTo").data("kendoDatePicker").value(new Date());
        $("#dtpCsApproveDateFrom").val("");
        $("#dtpCsApproveDateTo").val("");
        $("#dtpWithdrawalDateFrom").val("");
        $("#dtpWithdrawalDateTo").val("");
        $("#dtpTransferDateFrom").val("");
        $("#dtpTransferDateTo").val("");
        $("#dtpFoaDateFrom").val("");
        $("#dtpFoaDateTo").val("");
        $("#dtpFoaDateTo").data("kendoDatePicker").enable(false);
        $("#dtpCsApproveDateTo").data("kendoDatePicker").enable(false);
        $("#dtpWithdrawalDateTo").data("kendoDatePicker").enable(false);
        $("#dtpTransferDateTo").data("kendoDatePicker").enable(false);

        $("#validatefor-" + "dtpCsApproveDateFrom").html("");
        $("#validatefor-" + "dtpCsApproveDateTo").html("");

        $("#validatefor-" + "dtpWithdrawalDateFrom").html("");
        $("#validatefor-" + "dtpWithdrawalDateTo").html("");

        $("#validatefor-" + "dtpTransferDateFrom").html("");
        $("#validatefor-" + "dtpTransferDateTo").html("");


        $("#validatefor-" + "dtpFoaDateFrom").html("");
        $("#validatefor-" + "dtpFoaDateTo").html("");
        checkedIds = {};
        $("#SCMView tr").removeClass("k-state-selected");
        $(".k-cb").removeAttr("checked");
        // $("#Grid").data('kendoGrid').dataSource.data([]);
        var grid = getGridName();
        grid.dataSource.data([]);
        var usertype = $("#chkusertype").val();
        //alert(usertype);
        if (usertype == "ACCT") {
          //  console.log("CC");
            $("#sumtotal").html(" ");
            $("#sumvat").html(" ");
            $("#sumincvat").html(" ");
            $("#_sumtotal").val(" ");
            $("#_sumvat").val(" ");
            $("#_sumincvat").val(" ");
        }

        onChangeddlSubContract();
        onChangeddlVendorcode();

        $('#btnAcctUpdate').attr("disabled", true);

    }
    //function _ClearAll() {
    //    ClearSearch();
    //    checkedIds = {};
    //    $("#SCMView tr").removeClass("k-state-selected");
    //    $(".k-cb").removeAttr("checked");
    //   // $("#Grid").data('kendoGrid').dataSource.data([]);
    //    var grid = getGridName();
    //    grid.dataSource.data([]);
    //}


    function CancelEditConfig() {
        $("#EditConfigPopup").data("kendoWindow").close();
        $("#UpdateStatusByFileConfig").data("kendoWindow").close();
        // $("#ddlStatus").val("ALL");
        $("#ddlStatus").data('kendoDropDownList').value("ALL");
        $("#InvoiceNo").val("");
        $("#dtpInvDate").val("");
        $("#IrDoc").val("");
        $("#Remark").val("");
        $("#validatefor-ddlStatus").html("");
        $("#validatefor-InvoiceNo").html("");
        $("#validatefor-dtpInvDate").html("");
        $("#validatefor-IrDoc").html("");
        $("#validatefor-Remark").html("");
    }

    function setSaveButtonFAPO() {
        //  console.log("setSaveButtonFAPO=" + $("#chk").val());
        if ($("#chk").val() === "True") {

            $('#saveChkFapo').attr("style", "display:normal");
            $('#saveFapo').attr("style", "display:none");
            // alert("show");
            //  $('#savechkbox').attr("disabled", fa);

            //R19.03
            $('#saveAllChkFapoRecalDistance').attr("style", "display:normal");
            $('#saveFapoRecalDistance').attr("style", "display:none");
            $('#saveFapoRecalRuleID').attr("style", "display:none");
            $('#GrFibreNetid').attr("style", "display:none");
            $('#GrExistingRule').attr("style", "display:none");

            //end R19.03

        }
        else {

            $('#saveChkFapo').attr("style", "display:none");
            $('#saveFapo').attr("style", "display:normal");
            //alert("hide");
            // $('#savechkbox').attr("disabled", false);
            //R19.03
            $('#saveAllChkFapoRecalDistance').attr("style", "display:none");
            $('#saveFapoRecalDistance').attr("style", "display:none");
            $('#saveFapoRecalRuleID').attr("style", "display:normal");
            $('#GrFibreNetid').attr("style", "display:normal");
            $('#GrExistingRule').attr("style", "display:normal");
            //end R19.03
        }
    }

    function setSaveButtonFAPO2() {
        //  console.log("setSaveButtonFAPO=" + $("#chk").val());
        if ($("#chk").val() === "True") {

            $('#saveChkFapo2').attr("style", "display:normal");
            $('#saveFapo2').attr("style", "display:none");
            // alert("show");
            //  $('#savechkbox').attr("disabled", fa);

            //R19.03
            $('#saveAllChkFapoRecalDistance').attr("style", "display:normal");
            $('#saveFapoRecalDistance').attr("style", "display:none");
            $('#saveFapoRecalRuleID').attr("style", "display:none");
            $('#GrFibreNetid').attr("style", "display:none");
            $('#GrExistingRule').attr("style", "display:none");

            //end R19.03

        }
        else {

            $('#saveChkFapo2').attr("style", "display:none");
            $('#saveFapo2').attr("style", "display:normal");
            //alert("hide");
            // $('#savechkbox').attr("disabled", false);
            //R19.03
            $('#saveAllChkFapoRecalDistance').attr("style", "display:none");
            $('#saveFapoRecalDistance').attr("style", "display:none");
            $('#saveFapoRecalRuleID').attr("style", "display:normal");
            $('#GrFibreNetid').attr("style", "display:normal");
            $('#GrExistingRule').attr("style", "display:normal");
            //end R19.03
        }
    }

    function setSaveButtonACC() {

        if ($("#chk").val() === "True") {
            $('#saveChkAcc').attr("style", "display:normal");
            $('#saveAcc').attr("style", "display:none");
            //alert("show");
            //  $('#savechkbox').attr("disabled", fa);
        }
        else {
            $('#saveChkAcc').attr("style", "display:none");
            $('#saveAcc').attr("style", "display:normal");
            // alert("hide");
            // $('#savechkbox').attr("disabled", false);
        }
    }
    function setSaveButtonSCM() {
        if ($("#chk").val() === "True") {
            $('#savechkbox').attr("style", "display:normal");
            $('#save').attr("style", "display:none");
            // alert("show");
            //  $('#savechkbox').attr("disabled", fa);
        }
        else {
            $('#savechkbox').attr("style", "display:none");
            $('#save').attr("style", "display:normal");
            //alert("hide");
            // $('#savechkbox').attr("disabled", false);
        }
    }
    function formatDate(OrderDate) {
        if (OrderDate != null) {
            var d = new Date(OrderDate);
            d.setUTCHours(17);
            //var b = new Date(OrderDate + '+07:00');
            var formatedOrderDate = kendo.format("{0:dd/MM/yyyy}", d);
            return formatedOrderDate;
        }
        return "";
    }
    function LoadACCTSTATUS() {


        $.ajax({
            cache: false,
            type: "GET",
            async: false,
            data: { work_status: "Confirm Paid" },
            url: "/ReportInstallationCostbyOrder/SelectAccWorkFlowStatus",
            dataType: "json",
            success: function (data) {
                try {
                    temp_data_dropdown = data;
                    $("#ddlStatus").kendoDropDownList({
                        dataTextField: "DISPLAY_VAL",
                        dataValueField: "LOV_VAL1",
                        dataSource: data,
                        change: changeDDLStatus,
                        filter: "contains",
                        virtual: {
                            itemHeight: 26,
                            valueMapper: function (options) {
                                options.success([options.value || 0]); //return the value <-> item index mapping;
                            }
                        }

                    });
                    //Loading(0);
                } catch (ex) {
                    // Loading(0);
                }
            }
        });

        document.getElementById('ddlStatus').setAttribute('height', 20);
    }

    function LoadWFSTATUS(value) {


        $.ajax({
            cache: false,
            type: "GET",
            async: false,
            data: { WFS: value },
            url: "/ReportInstallationCostbyOrder/SelectScmWorkFlowStatus",
            dataType: "json",
            success: function (data) {
                try {
                    temp_data_dropdown = data;
                    $("#ddlStatus").kendoDropDownList({
                        dataTextField: "DISPLAY_VAL",
                        dataValueField: "LOV_VAL1",
                        dataSource: data,
                        change: changeDDLStatus,
                        filter: "contains",
                        virtual: {
                            itemHeight: 26,
                            valueMapper: function (options) {
                                options.success([options.value || 0]); //return the value <-> item index mapping;
                            }
                        }

                    });
                    //Loading(0);
                } catch (ex) {

                    // Loading(0);
                }
            }
        });

       // document.getElementById('ddlStatus').setAttribute('height', 20);
    }
    function GetFLSDataUpdateAll(WFSTATUS) {
            Loading();

            $.ajax({
                type: "POST",
                url: "/ReportInstallationCostbyOrder/FLSUPDATEOrderList",
                data: {
                    "data": WFSTATUS

                },
                dataType: "text",
                async: false,
                success: function (response) {

                    if (response) {

                    }
                },
                failure: function (msg) {
                }
            });


 }


    function UpdateAllWTS() {

        $('.btsearchs').hide();
      //  $('#btnSearchOrder').attr('style' ,'display:none');
        $("#updateddlStatus").data('kendoDropDownList').value("ALL");
        $("#ddlStatusHold").data('kendoDropDownList').value("ALL");

        $("#_ddlIRDOC").data('kendoDropDownList').value("ALL");

        $("#_ddl-Status").val("");
        $("#_invNO").val("");
        $("#_dtpInvDate").val("");


        $("#_flsremark").val("");
        $("#_disDistance").val("");



        $("#validatefor-_ddlStatus").html("");




        $('#vdinvdt').html("*");
        $('#vdinvno').html("*");
        $('#vdirdc').html("*");
        $("#FLSEditALLConfigPopup").prev().find(".k-window-title").text("Status Waiting Sub Verify");
        $('#chkstatus').show();
        $('#ddlHold').hide();
        $('#ddlWS').show();
        $('#upinv').hide();
        $('#_irdc').show();
        $('#_invno').show();
        $('#_invdt').show();

        $("#_WFSTATUS").val("Waiting Sub Verify");
        var dialog = $("#FLSEditALLConfigPopup").data("kendoWindow").open();
        dialog = $("#FLSEditALLConfigPopup").data("kendoWindow");
        dialog.center();
        var grid = $("#FLSViewUpdateALL").data("kendoGrid");
        grid.dataSource.data([]);

    }
    function UpdateAllHOLD()
    {
        $('.btsearchs').show();

        onchangeddlStatusHold();


         $('#upinv').show();

        $("#updateddlStatus").data('kendoDropDownList').value("ALL");
        $("#ddlStatusHold").data('kendoDropDownList').value("ALL");

        $("#_ddlIRDOC").data('kendoDropDownList').value("ALL");

        $("#_ddl-Status").val("");
        $("#_invNO").val("");
        $("#_dtpInvDate").val("");


        $("#_flsremark").val("");
        $("#_disDistance").val("");



        $("#validatefor-_ddlStatus").html("");


        $('#vdinvdt').html("");
        $('#vdinvno').html("");
        $('#vdirdc').html("");
        // $('#vdirdc').hide();

        $("#FLSEditALLConfigPopup").prev().find(".k-window-title").text("Status Hold");
        $('#chkstatus').hide();
        $("#_dpDistance").hide();
        $("#_WFSTATUS").val("Hold");
        LoadHOLDWFSTATUS("Hold");
        var dialog = $("#FLSEditALLConfigPopup").data("kendoWindow").open();
        dialog = $("#FLSEditALLConfigPopup").data("kendoWindow");
        dialog.center();
        var grid = $("#FLSViewUpdateALL").data("kendoGrid");
        grid.dataSource.data([]);


    }
    function LoadHOLDWFSTATUS(value) {


        $.ajax({
            cache: false,
            type: "GET",
            async: false,
            data: { WFS: value },
            url: "/ReportInstallationCostbyOrder/SelectScmWorkFlowStatus",
            dataType: "json",
            success: function (data) {
                try {
                    temp_data_dropdown = data;
                    $("#ddlStatusHold").kendoDropDownList({
                        dataTextField: "DISPLAY_VAL",
                        dataValueField: "LOV_VAL1",
                        dataSource: data,
                        change: onchangeddlStatusHold,
                        filter: "contains",
                        virtual: {
                            itemHeight: 26,
                            valueMapper: function (options) {
                                options.success([options.value || 0]); //return the value <-> item index mapping;
                            }
                        }

                    });
                    //Loading(0);
                } catch (ex) {
                    // Loading(0);
                }
            }
        });

        document.getElementById('ddlStatusHold').setAttribute('height', 20);
    }


    function scmUpdate() {
        setSaveButtonSCM();
        var dialog = $("#EditConfigPopup").data("kendoWindow").open();
        dialog = $("#EditConfigPopup").data("kendoWindow");
        dialog.center();
    }
    function AcctUpdate() {
        $("#accallinvnodate").show();
       // var data = JSON.stringify({ 'AccNOList': idsToSend });
       // console.log(data);
        searchACCTValue();
       // LoadACCTSTATUS();
       //var _hinvno = $("#hideinvNo").val();
        $("#acct_No").val("");
        $("#ddlStatus2").data("kendoDropDownList").dataSource.read({ work_status: "Confirm Paid" });
        setSaveButtonACC();
        var dialog = $("#ACCTPopup").data("kendoWindow").open();
        dialog = $("#ACCTPopup").data("kendoWindow");
        dialog.center();
    }
    function EditConfig(e) {
        $("#cal_radio1").prop('checked', false);
        $("#cal_radio2").prop('checked', false);
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $("#hiddenDataItem").val(JSON.stringify(dataItem));


        $("#accNo").val(dataItem.ACCESS_NUMBER);
        $("#hideinvNo").val(dataItem.INVOICE_NO);
        $("#disputeDistance").val(dataItem.TOTAL_DISTANCE);
        if ("@usertype" === "SCM") {

            //console.log("@usertype === SCM ");
            LoadWFSTATUS(dataItem.WORK_STATUS);
            $("#invdt").show();
            $("#irdc").show();
            $("#disputeDistance").prop("disabled", true);
            $("#dpDistance").hide();
            $("#invno").show();

            $("#accNo").val(dataItem.ACCESS_NUMBER);
           // hold-ACCNO
           //  alert(dataItem.ACCESS_NUMBER);
            $("#hold-ACCNO").val(dataItem.ACCESS_NUMBER);
            $("#hold-ACCNO").prop("disabled", true);
            $("#hold-ACCNO_SHOW").val(dataItem.ACCESS_NUMBER_MASKING);
            $("#hold-ACCNO_SHOW").prop("disabled", true);

            if (dataItem.work_status == "Hold") {

                document.getElementById('haccno').style.display = "block" //show

                 document.getElementById('irdc').style.display = 'none';
            } else {

                document.getElementById('haccno').style.display = "none" //show

                document.getElementById('irdc').style.display = 'block';
            }
            if (dataItem.WORK_STATUS == "Confirm Paid" || dataItem.WORK_STATUS == "Dispute" || dataItem.WORK_STATUS == "Waiting Paid" || dataItem.WORK_STATUS == "Waiting Sub Verify") {

               // $("#dtpperioddate").prop("disabled", true);
              //  LoadWFSTATUS(dataItem.ORDER_STATUS);
                if (dataItem.WORK_STATUS == "Dispute") {
                    $("#ddlStatus").data('kendoDropDownList').value(dataItem.WORK_STATUS);   //ddlStatus
                    document.getElementById('dpDistance').style.display = 'block';
                    $("#disputeDistance").val(dataItem.TOTAL_DISTANCE);
                    $("#disputeDistance").prop("disabled", true);
                    $("#invdt").hide();
                    $("#irdc").hide();
                    $("#invno").hide();
                } else if (dataItem.WORK_STATUS == "Waiting Sub Verify") {
                    //$("#ddlStatus").data('kendoDropDownList').value("PLEASE SELECT");
                    $("#disputeDistance").val(dataItem.TOTAL_DISTANCE);
                }
                else {

                    //console.log("dataItem.TOTAL_DISTANCE ", dataItem.TOTAL_DISTANCE);
                    //$("#disputeDistance").val(dataItem.REQUEST_DISTANCE);
                    //$("#disputeDistance").val("");
                    document.getElementById('dpDistance').style.display = 'none';
                    $("#disputeDistance").prop("disabled", false);
                }

            }
            else {
              // LoadWFSTATUS(dataItem.ORDER_STATUS);
             //   document.getElementById('pddate').style.display = 'normal';
              //  alert("CallHold");
                // $("#dtpperioddate").prop("disabled", false);
                 $("#ddlStatus").data('kendoDropDownList').value("ALL");

                document.getElementById('dpDistance').style.display = 'none';
            }


            $("#InvoiceNO").val(dataItem.INVOICE_NO);
            $("#dtpInvDate").val(formatDate(dataItem.INVOICE_DATE));
            if (dataItem.IR_DOC == "Y" || dataItem.IR_DOC == "N") {
                $("#ddlIRDOC").data('kendoDropDownList').value(dataItem.IR_DOC); //ddlStatus
            }
            else {
                $("#ddlIRDOC").data('kendoDropDownList').value("ALL");
            }
            $("#REMARK").val(dataItem.REMARK);
          //  $("#REMARK_FOR_SUB").val(dataItem.NOTE);

            setSaveButtonSCM();



        }
        else if ("@usertype" === "FAPO") {

            $("#accNo").val(dataItem.ACCESS_NUMBER);
            setSaveButtonFAPO();
           // if (dataItem.DISTANCE_VALIDATE != null || dataItem.DISTANCE_VALIDATE != "" || dataItem.DISTANCE_VALIDATE != "undefined") {
            $("#oldRequestDistance").val(dataItem.RECAL_DISTANCE); // VALIDATE_DIS
            $("#oldRequestDistance2").val(dataItem.RECAL_DISTANCE); // VALIDATE_DIS
           // }

            //ddlReason
            if (dataItem.REMARK != null || dataItem.REMARK != "" || dataItem.REMARK != "undefined") {
                $("#REMARK").val(dataItem.REMARK);
            }
            if (dataItem.REMARK != null || dataItem.REMARK != "" || dataItem.REMARK != "undefined") {
                $("#REMARK2").val(dataItem.REMARK);
            }

            $("#ddlReason").data('kendoDropDownList').dataSource.read();
            //R19.03  Re Cal
            $("#FIBRENET_ID").val(dataItem.ACCESS_NUMBER);
            $("#FIBRENET_ID_SHOW").val(dataItem.ACCESS_NUMBER_MASKING);
            $("#EXISTING_RULE").val(dataItem.RULE_ID);
            $("#OrderNoForRecal").val(dataItem.ORDER_NO);
            $("#OrderNoSffForRecal").val(dataItem.ORDER_NO_SFF);
            $("#OrderNoForRecal2").val(dataItem.ORDER_NO);

            //End R19.03
        }
        else {
            $("#acct_accNo").val(dataItem.INVOICE_NO);
            $("#accNo").val(dataItem.ACCESS_NUMBER);
            setSaveButtonACC();
            ddlStatusModel.work_status = dataItem.WORK_STATUS;
            $("#ddlStatus").data("kendoDropDownList").dataSource.read({ work_status: dataItem.WORK_STATUS });
            $("#ddlStatus").data('kendoDropDownList').value("ALL");
            //if (dataItem.ORDER_STATUS == "Paid" || dataItem.ORDER_STATUS == "Hold") {
            //    $("#ddlStatus").data('kendoDropDownList').value(dataItem.ORDER_STATUS);   //ddlStatus
            //}
            //else {
            //    $("#ddlStatus").data('kendoDropDownList').value("ALL");
            //}
            $("#accrm").show();
            $("#_invno-date").show();
            $("#accinvdate").val(formatDate(dataItem.INVOICE_DATE));
            $("#dtPaidDate").val(formatDate(dataItem.PAID_DATE));
            if (dataItem.REMARK != null || dataItem.REMARK != "" || dataItem.REMARK != "undefined") {
                $("#REMARK").val(dataItem.REMARK);
            }
        }


        var _acNo = $("#accNo").val();
        //R19.03 Check  FAPOWorkStatus==Recheck Or Dispute
        //$("#EditConfigPopup").data("kendoWindow").open();
        //var dialog = $("#EditConfigPopup").data("kendoWindow");
        //dialog.center();

        //var FAPOWorkStatus = dataItem.WORK_STATUS;
        var FAPOWorkStatus = '';
        if (dataItem.WORK_STATUS != null) {
            FAPOWorkStatus = dataItem.WORK_STATUS
        } else if (dataItem.ORDER_STATUS != null) {
            FAPOWorkStatus = dataItem.ORDER_STATUS
        }
        var chk = FAPOWorkStatus.toUpperCase().trim().replace(" ", "");
        //alert("chstatus=" + $("#chk").val())
        //alert("test=" + $('#ddlWorkflowStatus').val())
        //alert("chk=" + chk)

        if ("@usertype" === "FAPO") {
            $("#validatefor-NewRule").html("");
            $("#REMARK_RE-CAL").val("");
            $("#TOTAL_PRICE").val("");

            $("#ddlReason2other").val("");
            $("#VALIDATE_DIS2").val("");
            $("#REMARK2_Recal").val("");
            //$("#NEW_RULE").data('kendoDropDownList').select(0);

            $("#ddlReason2").data('kendoDropDownList').value("จ่ายตามระยะจริง");
        }

        if ($("#chk").val() == "True") {
            if ($('#ddlWorkflowStatus').val() != '' && $('#ddlWorkflowStatus').val() != null) {
                var chstatus = $('#ddlWorkflowStatus').val()[0].toUpperCase().trim().replace(" ", "");
                // UpdateAllCheckOpenConfirmPopupByStatus();
                if (chstatus == "RECHECK" || chk == "COMPLETED" ) {

                    var dialog = $("#EditConfigPopupFOA").data("kendoWindow").open();
                    dialog = $("#EditConfigPopupFOA").data("kendoWindow");
                    dialog.center();

                } else if (chstatus == "NODATA") {
                    var dialog = $("#EditConfigPopup").data("kendoWindow").open();
                    dialog = $("#EditConfigPopup").data("kendoWindow");
                    dialog.center();
                }
                else {
                     var dialog = $("#EditConfigPopup").data("kendoWindow").open();
                    dialog = $("#EditConfigPopup").data("kendoWindow");
                    dialog.center();
               }
            } else {
                if (chk == "RECHECK" || chk == "COMPLETED" ) {
                    var dialog = $("#EditConfigPopupFOA").data("kendoWindow").open();
                    dialog = $("#EditConfigPopupFOA").data("kendoWindow");
                    dialog.center();
                } else {
                    var dialog = $("#EditConfigPopup").data("kendoWindow").open();
                    dialog = $("#EditConfigPopup").data("kendoWindow");
                    dialog.center();
                }

            }

        } else {
            if ("@usertype" === "FAPO") {
                if (chk == "RECHECK" || chk == "COMPLETED" || chk == "NODATA") {
                    $("#gridRecalDistanceDetail").data("kendoGrid").dataSource.read();
                    var grid = $("#gridRecalDistanceDetail").data("kendoGrid");
                    grid.dataSource.read();

                    //var dialog = $("#EditConfigPopupFOA").data("kendoWindow").open();
                    //dialog = $("#EditConfigPopupFOA").data("kendoWindow");
                    //dialog.center();

                    //var tabStrip = $("#SoftwareTabStrip").data("kendoTabStrip");
                    //var selectedIndex = tabStrip.select().index();
                    var activeTab = $('#SoftwareTabStrip').data("kendoTabStrip").select().index();
                    if (activeTab === 1) {//MA
                        $("#radio2_wrapper").hide();
                        $("#cal_radio1").prop('checked', true);
                        contentToToggle.style.display = "block";
                        var dialogFOA = $("#EditConfigPopupFOA").data("kendoWindow").open();
                        dialogFOA = $("#EditConfigPopupFOA").data("kendoWindow");
                        var dialogRadio = $("#EditConfigPopupWithRadioBtn").data("kendoWindow").close();
                        dialogFOA.center();
                        dialogRadio.refresh();
                    }
                    else if (activeTab === 0) {

                        if (chk == "NODATA") {
                            var dialogRadio = $("#EditConfigPopupWithRadioBtn").data("kendoWindow").open();
                            dialogRadio = $("#EditConfigPopupWithRadioBtn").data("kendoWindow");
                            var dialogFOA = $("#EditConfigPopupFOA").data("kendoWindow").close();
                            dialogRadio.center();
                            dialogFOA.refresh();
                            $("#radio3_wrapper").hide();
                            $("#saveChkFapo2").hide();
                            $("#cal_radio4").prop('checked', true);
                            //$("#cal_radio4").prop('checked', true).trigger('click');

                            //$("#radio1_wrapper").hide();
                            //$("#cal_radio2").prop('checked', true);
                            //contentToToggle.style.display = "block";
                            //var dialogRadio = $("#EditConfigPopupWithRadioBtn").data("kendoWindow").open();
                            //dialogRadio = $("#EditConfigPopupWithRadioBtn").data("kendoWindow");
                            //var dialogFOA = $("#EditConfigPopupFOA").data("kendoWindow").close();
                            //dialogRadio.center();
                            //dialogFOA.refresh();
                            //var dialogRadio = $("#EditConfigPopupFOA").data("kendoWindow").close();
                            //dialogFOA.center();
                            //dialogRadio.refresh();
                        } else {
                            // Show both radio buttons
                            $("#radio3_wrapper").show();
                            $("#saveChkFapo2").show();
                            var dialog = $("#EditConfigPopupFOA").data("kendoWindow").open();
                            dialog = $("#EditConfigPopupFOA").data("kendoWindow");
                            dialog.center();
                            $("#radio2_wrapper").show();
                        }
                    }

                } else {
                    var dialog = $("#EditConfigPopup").data("kendoWindow").open();
                    dialog = $("#EditConfigPopup").data("kendoWindow");
                    dialog.center();
                }
            } else {
                if (chk == "RECHECK" || chk == "COMPLETED" || chk == "NODATA") {
                    var dialog = $("#EditConfigPopupFOA").data("kendoWindow").open();
                    dialog = $("#EditConfigPopupFOA").data("kendoWindow");
                    dialog.center();
                } else {
                    var dialog = $("#EditConfigPopup").data("kendoWindow").open();
                    dialog = $("#EditConfigPopup").data("kendoWindow");
                    dialog.center();
                }
            }

        }



    }
    function CheckKeyUps(id, RexStr) {
        var strKey = $("#" + id).val();
        var strBuilder = "";
        var filter = new RegExp(RexStr);
        for (var i = 0; i < strKey.length; i++) {
            if (filter.test(strKey.substr(i, 1))) {
                strBuilder += strKey.substr(i, 1);
            }
        }
        $("#" + id).val(strBuilder);
    }


    function UpdateAll() {
        if ("@usertype" === "SCM") {
            setSaveButtonSCM();
        }
        else if ("@usertype" === "FAPO") {
            setSaveButtonFAPO();
        }
        else {
            setSaveButtonACC();
        }

        //R19.03 Comment
        //$("#EditConfigPopup").data("kendoWindow").open();
        //var dialog = $("#EditConfigPopup").data("kendoWindow");
        //dialog.center();
        var chstatus = "";
        if ("@usertype" === "FAPO") {
            chstatus = $('#ddlWorkflowStatus').val()[0].toUpperCase().trim().replace(" ", "");

            if (chstatus == "RECHECK") {
                var dialog = $("#EditConfigPopupFOA").data("kendoWindow").open();
                dialog = $("#EditConfigPopupFOA").data("kendoWindow");
                dialog.center();

            } else if (chstatus == "NODATA") {
                var dialog = $("#EditConfigPopup").data("kendoWindow").open();
                dialog = $("#EditConfigPopup").data("kendoWindow");
                dialog.center();
           }
            else {
                var dialog = $("#EditConfigPopup").data("kendoWindow").open();
                dialog = $("#EditConfigPopup").data("kendoWindow");
                dialog.center();
            }

        } else {
            if ($('#ddlWorkflowStatus').val() != "" && $('#ddlWorkflowStatus').val() != null) {
                ddlStatusModel.work_status = $('#ddlWorkflowStatus').val()[0];
                $("#ddlStatus").data("kendoDropDownList").dataSource.read({ work_status: $('#ddlWorkflowStatus').val()[0] });
                $("#EditConfigPopup").data("kendoWindow").open();
                var dialog = $("#EditConfigPopup").data("kendoWindow");
                dialog.center();
            }

        }
    }

    function onChangedtpInvDate() {
        var startPicker = $("#dtpInvDate").data("kendoDatePicker"),
            endDate = this.value();

        if (endDate) {
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate());
            startPicker.max(endDate);
        }

    }
    //dtpFoaDate
    function onChangedtpFoaDateFrom() {
        var pickDate = this.value();
        var datepicker = $("#dtpFoaDateTo").data("kendoDatePicker");
        if (pickDate) {
            datepicker.enable(true);
            var minDate = new Date(pickDate);
            var maxDate = new Date(pickDate.setMonth(pickDate.getMonth() + 5));
            maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth() + 1, maxDate.getDate() - 1);
            $("#dtpFoaDateTo").kendoDatePicker({
                min: minDate,
                max: maxDate,
                format: "dd/MM/yyyy",
                parseFormats: ["dd/MM/yyyy"]
            });

        } else {
            datepicker.enable(false);
        }

        datepicker.value(new Date());
        var value = $("#dtpFoaDateFrom").val();
        $("#dtpFoaDateTo").val(value);
    }
    function onChangedtpFoaDateTo() {
        //var pickDate = this.value();
        //if (pickDate) {
        //    var maxDate = new Date(pickDate);
        //    var minDate = new Date(pickDate.setMonth(pickDate.getMonth() - 6));
        //    //minDate = new Date(minDate.getFullYear(), minDate.getMonth(), 1);
        //    $("#dtpCsApproveDateFrom").kendoDatePicker({
        //        min: minDate,
        //        max: maxDate,
        //        format: "dd/MM/yyyy",
        //        parseFormats: ["dd/MM/yyyy"]
        //    });
        //}
    }
    //dtpCsApproveDate
    function onChangedtpCsApproveDateFrom() {
        var pickDate = this.value();
        var datepicker = $("#dtpCsApproveDateTo").data("kendoDatePicker");
        if (pickDate) {
            datepicker.enable(true);
            var minDate = new Date(pickDate);
            var maxDate = new Date(pickDate.setMonth(pickDate.getMonth() + 5));
            maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth() + 1, maxDate.getDate() - 1);
            $("#dtpCsApproveDateTo").kendoDatePicker({
                min: minDate,
                max: maxDate,
                format: "dd/MM/yyyy",
                parseFormats: ["dd/MM/yyyy"]
            });

        } else {
            datepicker.enable(false);
        }
        datepicker.value(new Date());
        var value = $("#dtpCsApproveDateFrom").val();
        $("#dtpCsApproveDateTo").val(value);
    }
    function onChangedtpCsApproveDateTo() {
        //var pickDate = this.value();
        //if (pickDate) {
        //    var maxDate = new Date(pickDate);
        //    var minDate = new Date(pickDate.setMonth(pickDate.getMonth() - 6));
        //    //minDate = new Date(minDate.getFullYear(), minDate.getMonth(), 1);
        //    $("#dtpCsApproveDateFrom").kendoDatePicker({
        //        min: minDate,
        //        max: maxDate,
        //        format: "dd/MM/yyyy",
        //        parseFormats: ["dd/MM/yyyy"]
        //    });
        //}
    }

    //dtpWithdrawalDate
    function onChangedtpFoaDateFrom() {
        var pickDate = this.value();
        var datepicker = $("#dtpFoaDateTo").data("kendoDatePicker");
        if (pickDate) {
            datepicker.enable(true);
            var minDate = new Date(pickDate);
            var maxDate = new Date(pickDate.setMonth(pickDate.getMonth() + 5));
            maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth() + 1, maxDate.getDate() - 1);
            $("#dtpFoaDateTo").kendoDatePicker({
                min: minDate,
                max: maxDate,
                format: "dd/MM/yyyy",
                parseFormats: ["dd/MM/yyyy"]
            });

        } else {
            datepicker.enable(false);
        }

        datepicker.value(new Date());
        var value = $("#dtpFoaDateFrom").val();
        $("#dtpFoaDateTo").val(value);
    }

    function onChangedtpWithdrawalDateFrom() {
        var pickDate = this.value();
        var datepicker = $("#dtpWithdrawalDateTo").data("kendoDatePicker");
        if (pickDate) {
            datepicker.enable(true);
            var minDate = new Date(pickDate);
            var maxDate = new Date(pickDate.setMonth(pickDate.getMonth() + 5));
            maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth() + 1, maxDate.getDate() - 1);
            $("#dtpWithdrawalDateTo").kendoDatePicker({
                min: minDate,
                max: maxDate,
                format: "dd/MM/yyyy",
                parseFormats: ["dd/MM/yyyy"]
            });
        } else {
            datepicker.enable(false);
        }
        datepicker.value(new Date());
        var value = $("#dtpWithdrawalDateFrom").val();
        $("#dtpWithdrawalDateTo").val(value);

    }
    function onChangedtpWithdrawalDateTo() {
        //var pickDate = this.value();
        //if (pickDate) {
        //    var maxDate = new Date(pickDate);
        //    var minDate = new Date(pickDate.setMonth(pickDate.getMonth() - 6));
        //    minDate = new Date(minDate.getFullYear(), minDate.getMonth(), 1);
        //    $("#dtpWithdrawalDateFrom").kendoDatePicker({
        //        min: minDate,
        //        max: maxDate,
        //        format: "dd/MM/yyyy",
        //        parseFormats: ["dd/MM/yyyy"]
        //    });
        //}
    }

    function onChangedtpTransferDateFrom() {
        var pickDate = this.value();
        var datepicker = $("#dtpTransferDateTo").data("kendoDatePicker");
        if (pickDate) {
            datepicker.enable(true);
            var minDate = new Date(pickDate);
            var maxDate = new Date(pickDate.setMonth(pickDate.getMonth() + 5));
            maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth() + 1, maxDate.getDate() - 1);
            $("#dtpTransferDateTo").kendoDatePicker({
                min: minDate,
                max: maxDate,
                format: "dd/MM/yyyy",
                parseFormats: ["dd/MM/yyyy"]
            });
        } else {
            datepicker.enable(false);
        }
        datepicker.value(new Date());
        var value = $("#dtpTransferDateFrom").val();
        $("#dtpTransferDateTo").val(value);
    }
    function onChangedtpTransferDateTo() {
        //var pickDate = this.value();
        //if (pickDate) {
        //    var maxDate = new Date(pickDate);
        //    var minDate = new Date(pickDate.setMonth(pickDate.getMonth() - 6));
        //    minDate = new Date(minDate.getFullYear(), minDate.getMonth(), 1);
        //    $("#dtpTransferDateFrom").kendoDatePicker({
        //        min: minDate,
        //        max: maxDate,
        //        format: "dd/MM/yyyy",
        //        parseFormats: ["dd/MM/yyyy"]
        //    });
        //}
    }

    function checkNote() {
        var tempnote = $("#tempNote").val();
        var tempnoteLength = $("#tempNote").val().length;

        if (tempnote != "0") {
            var msgNote = "Note Has been Update Please Save Change OR Please Cancel Change !!! ";
            showFeedback("warning", msgNote, "System Information");
            // alert("");
            return false;
        }
        else {
            return true;
        }


    }
    function setSumValue() {
        var usertype = $("#chkusertype").val();
        //alert(usertype);
        var _st = $("#_sumtotal").val();
        var _sv = $("#_sumvat").val();
        var _sincv = $("#_sumincvat").val();
       // console.log(_st);
       // console.log(_sv);
      //  console.log(_sincv);
        if (usertype == "ACCT") {

            $("#sumtotal").html(_st);
            $("#sumvat").html(_sv);
            $("#sumincvat").html(_sincv);
        }


    }
    function getDisputeValue(accno) {
        var flagdp = "";

      //   console.log(accno);
            $.ajax({
                type: "POST",
                url: "/ReportInstallationCostbyOrder/getDisputeRecord",
                data: {
                    "AccNo": accno
                },
                dataType: "json",
                async: false,
                success: function (response) {

                    if (response) {
                      //   console.log(response._flagDispite);
                        flagdp = response._flagDispite;

                    }
                },
                failure: function (msg) {
                }
        });
        //console.log(flagdp);
        return flagdp;
    }
    function getSumValue() {
        var usertype = $("#chkusertype").val();
        //alert(usertype);
        if (usertype == "ACCT") {

            var _sumtotal;
            $.ajax({
                type: "POST",
                url: "/ReportInstallationCostbyOrder/getSumValue",
                // data: data,
                dataType: "json",
                async: false,
                success: function (response) {

                    if (response) {
                      //   console.log(response._sumtotal);
                      //   console.log(response._sumvat);
                      //   console.log(response._sumincvat);

                        $("#_sumtotal").val(response._sumtotal);
                        $("#_sumvat").val(response._sumvat);
                        $("#_sumincvat").val(response._sumincvat);

                    }
                },
                failure: function (msg) {
                }
            });
        }
        setSumValue();
    }
    function checkSession() {
        return new Promise((resolve, reject) => {
                $.ajax({
                    url: '@Url.Action("CheckSession", "ReportInstallationCostbyOrder")',
                    type: 'GET',
                    success: function (response) {
                        if (!response.sessionActive) {
                            bootbox.alert('Session TimeOut !', function () {
                                window.location.href = '@Url.Action("Login", "Account")';
                            });
                        }
                        resolve(response.sessionActive);
                    },
                    error: function() {
                        // Reject the promise if an error occurs
                        reject('An error occurred while checking the session.');
                    }
                });
        });
    }

    var checkedIds = {};
    function searchOrderList() {
        //checkTabStrip();


        //clear checkbox
        $(".k-cb").prop("checked", false);
        checkedIds = {};
        $('#export').attr("disabled", true);
        $('#sendmail').attr("disabled", true);
        $("#updateall").prop("disabled", true);
       // $('#btnUpallWTS').attr("disabled", false);

      //  $('#btnUpallHOLD').attr("disabled", false);


      //  var chknote = checkNote();
      //  if (chknote) {
        var chk = ValidationSearchDate();
        if (chk) {
            checkSession().then(sessionActive => {
                if (sessionActive) {
                    var grid = getGridName();
                    grid.dataSource.page(1);

                    $('#_orderListPanel').hide();
                    $('#_orderListHistory').hide();
                    $('#_DistanceDetail').hide();
                    $('#_SapDetail').hide();
                    $('#_orderListPackage').hide();
                    $('#_orderListFee').hide();              
                } else {

                }
            }).catch(error => {
                console.error(error);
            });
        } else {

        }
       // }

        //   getSumValue();


    }


    function _Export_kendo() {
        var grid = getGridName();
        grid.hideColumn(0);
        grid.bind("excelExport", function (e) {
            e.workbook.fileName = "ReportInstallationCostbyOrder.xlsx";

            var columns = e.workbook.sheets[0].columns;
            columns.forEach(function (column) {
                delete column.width;
                column.autoWidth = true;
            });

        });
        grid.saveAsExcel();

        setTimeout(function () {
            grid.showColumn(0);
            Loading(0);
        }, 10000);
    }

    function _Export() {
        var chknote = checkNote();
        var model = new defaultData();

        if (chknote === false) {
            return;
        }

        var arrAccessNumber = [];
        for (var i in checkedIds) {
            if (checkedIds[i]) {
                arrAccessNumber.push(i);
            }
        }

        if (arrAccessNumber.length > 0) {
            model.ACCESS_NO = arrAccessNumber.join(",");
        }


        //window.open("/LastMileByDistance/ExportExcel?dataS=" + JSON.stringify(model) + "");
        window.open("/ReportInstallationCostbyOrder/ExportExcel");
    }

    function OpenExport() {
        $('#validatefor-_emailinput').html("");
        $('#_emailinput').val("");
        var dialog = $("#_ExportEmail").data("kendoWindow").open();
        dialog = $("#_ExportEmail").data("kendoWindow");
        dialog.center();
    }

    function getVisibleColumns() {
        var tabStrip = $("#SoftwareTabStrip").data("kendoTabStrip");
        var selectedIndex = tabStrip.select().index();

        var grid;
                if (("@usertype" === "SCM")) {
            if (selectedIndex === 0) {//INSTALL
                grid = $("#SCMView").data("kendoGrid");
            } else if (selectedIndex === 1) {//MA
                grid = $("#SCMView2").data("kendoGrid");
            }
        }
        else if ("@usertype" === "FAPO") {
            if (selectedIndex === 0) {//INSTALL
                grid = $("#FAPOView").data("kendoGrid");
            } else if (selectedIndex === 1) {//MA
                grid = $("#FAPOView2").data("kendoGrid");
                $('#radio2_wrapper').hide();
                $("#cal_radio1").prop('checked', true);
            }
        }
        else if ("@usertype" === "ACCT") {
            if (selectedIndex === 0) {//INSTALL
                grid = $("#AccountingView").data("kendoGrid");
            } else if (selectedIndex === 1) {//MA
                grid = $("#AccountingView2").data("kendoGrid");
            }
        }

        //var columns = grid.columns.filter(function (column) {
        //    return !column.hidden;
        //}).map(function (column) {
        //    return column.field;
        //});

        var columns = grid.columns.map(function (column) {
            return column.field;
        });

        return columns;
    }

    function _ExportByEmail() {


        var  emailvalid = document.getElementById("_emailinput").validity.valid;

        // alert(ttt);
        var email = $('#_emailinput').val();

        if (email == "" || email == null) {
            $("#validatefor-_emailinput").html(ValidationIcon() + "This Field is Required");

        }
        else {
            if (emailvalid == false) {
                $("#validatefor-_emailinput").html(ValidationIcon() + "Email is not valid");
            }
            else {
                $('#validatefor-_emailinput').html("");
                var tabStrip = $("#SoftwareTabStrip").data("kendoTabStrip");
                var selectedIndex = tabStrip.select().index();
                var tab = "";
                if (selectedIndex === 0) {
                    // INSTALLATION tab is selected
                    tab = "INSTALL";
                } else if (selectedIndex === 1) {
                    // MA tab is selected
                    tab = "MA";
                }

                var visibleColumn = getVisibleColumns();
            Loading(0);
            $.ajax({
                type: "POST",
                url: "/ReportInstallationCostbyOrder/ExportByEmail",
                data: {
                    "Email": email,
                    "tab": tab,
                    "visibleColumn": JSON.stringify(visibleColumn)
                },
                dataType: "text",
                async: true,
                success: function (response) {

                    //if (response) {
                    //}

                    downloadExcel();
                },
                failure: function (msg) {

                }
            });
            $("#_ExportEmail").data("kendoWindow").close();
                showFeedback("success", "Export File will send to you by email.");

                setTimeout(function () {
                    $("#MessageFeedbackPopUp").modal('hide');
                }, 2000);

            }

        }
    }
    function downloadExcel() {
        var tabStrip = $("#SoftwareTabStrip").data("kendoTabStrip");
        var selectedIndex = tabStrip.select().index();
        var tab = selectedIndex === 0 ? "INSTALL" : "MA";
        var visibleColumn = getVisibleColumns();

        // Construct the URL with parameters
        var url = "/ReportInstallationCostbyOrder/DownloadExcel?tab=" + encodeURIComponent(tab);
        // Use window.open to initiate the download
        window.open(url, "_blank"); // Open in a new tab/window
    }


    function CloseEmailExport() {
        $("#_ExportEmail").data("kendoWindow").close();
    }
    function clearValidatefor() {
        $("#validatefor-ACCESSNO").html("");
        //$("#validatefor-" + "dtpCsApproveDateFrom").html("");
        //$("#validatefor-" + "dtpCsApproveDateTo").html("");

        //$("#validatefor-" + "dtpWithdrawalDateFrom").html("");
        //$("#validatefor-" + "dtpWithdrawalDateTo").html("");

        //$("#validatefor-" + "dtpTransferDateFrom").html("");
        //$("#validatefor-" + "dtpTransferDateTo").html("");

        //$("#validatefor-" + "dtpFoaDateFrom").html("");
        //$("#validatefor-" + "dtpFoaDateTo").html("");
    }

    function ValidationSearchDate() {
        var chk = ValidationProcessing("dateselect");
        var searchData = defaultData();
        if (chk) //check blank value
        {
            clearValidatefor();
            if (
                searchData.ORDER_NO == "" //ORDER_NO
                && searchData.ACCESS_NO == "" //ACCESS_NO
                && (searchData.PRODUCT_NAME == "" || searchData.PRODUCT_NAME == null) //ddlProductName
                && searchData.SUBCONT_CODE == "" //ddlVendorcode
                && searchData.ORG_ID == ""//ddlSubContract
                && searchData.IR_DOC == "ALL" //ddlIrDoc
                && searchData.INVOICE_NO == "" //INVOICE_NO
                && (searchData.WORK_STATUS == "" || searchData.WORK_STATUS == null)//ddlWorkflowStatus
                && searchData.ORD_STATUS == "ALL"
                && searchData.ORD_TYPE == "ALL"
                && searchData.REGION == "ALL"
                && searchData.SUBCONT_TYPE == "ALL"
                && searchData.SUBCONTSUB_TYPE == "ALL"
                && (searchData.FOA_FM == "" && searchData.FOA_TO == "")
                && (searchData.PERIOD_FM == "" && searchData.PERIOD_TO == "")
                && (searchData.APPROVE_FM == "" && searchData.APPROVE_TO == "")
                && (searchData.TRANS_FM == "" && searchData.TRANS_TO == "")
                && (searchData.PRODUCT_OWNER == "ALL")//PRODUCT OWNER




            ) {
                chk = false;

                $("#validatefor-ACCESSNO").html(ValidationIcon() + "This field is required.");
            } else {
                $("#validatefor-ACCESSNO").html("");

                if ($.trim($("#dtpFoaDateFrom").val()) != '') {
                    $("#validatefor-" + "dtpFoaDateFrom").html("");
                    if ($.trim($("#dtpFoaDateTo").val()) == '') {
                        $("#validatefor-" + "dtpFoaDateTo").html(ValidationIcon() + "This field is required.");
                        chk = false;
                    }
                    else {
                        $("#validatefor-" + "dtpFoaDateTo").html("");
                    }

                } else if ($.trim($("#dtpFoaDateTo").val()) != '') {
                    if ($.trim($("#dtpFoaDateFrom").val()) == '') {
                        $("#validatefor-" + "dtpFoaDateFrom").html(ValidationIcon() + "This field is required.");
                        chk = false;
                    }
                    else {
                        $("#validatefor-" + "dtpFoaDateFrom").html("");
                    }

                }



                if ($.trim($("#dtpTransferDateFrom").val()) != '') {
                if ($.trim($("#dtpTransferDateTo").val()) == '') {
                    $("#validatefor-" + "dtpTransferDateTo").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    $("#validatefor-" + "dtpTransferDateTo").html("");
                }

            } else if ($.trim($("#dtpTransferDateTo").val()) != '') {
                if ($.trim($("#dtpTransferDateFrom").val()) == '') {
                    $("#validatefor-" + "dtpTransferDateFrom").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    $("#validatefor-" + "dtpTransferDateFrom").html("");
                }

            }


            if ($.trim($("#dtpCsApproveDateFrom").val()) != '') {
                if ($.trim($("#dtpCsApproveDateTo").val()) == '') {
                    $("#validatefor-" + "dtpCsApproveDateTo").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    $("#validatefor-" + "dtpCsApproveDateTo").html("");
                }

            } else if ($.trim($("#dtpCsApproveDateTo").val()) != '') {
                if ($.trim($("#dtpCsApproveDateFrom").val()) == '') {
                    $("#validatefor-" + "dtpCsApproveDateFrom").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    $("#validatefor-" + "dtpCsApproveDateFrom").html("");
                }

            }

            if ($.trim($("#dtpWithdrawalDateFrom").val()) != '') {
                if ($.trim($("#dtpWithdrawalDateTo").val()) == '') {
                    $("#validatefor-" + "dtpWithdrawalDateTo").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    $("#validatefor-" + "dtpWithdrawalDateTo").html("");
                }

            } else if ($.trim($("#dtpWithdrawalDateTo").val()) != '') {
                if ($.trim($("#dtpWithdrawalDateFrom").val()) == '') {
                    $("#validatefor-" + "dtpWithdrawalDateFrom").html(ValidationIcon() + "This field is required.");
                    chk = false;
                }
                else {
                    $("#validatefor-" + "dtpWithdrawalDateFrom").html("");
                }

            }


        }


        if (!kendo.parseDate($("#dtpTransferDateFrom").val(), "dd/MM/yyyy")) {
            if ($("#dtpTransferDateFrom").val() != "") {
                $("#validatefor-" + "dtpTransferDateFrom").html(ValidationIcon() + "This field is not correct format.");
                chk = false;
            }
        }
        else {
            $("#validatefor-" + "dtpTransferDateFrom").html("");
        }

        if (!kendo.parseDate($("#dtpTransferDateTo").val(), "dd/MM/yyyy")) {
            if ($("#dtpTransferDateTo").val() != "") {
                $("#validatefor-" + "dtpTransferDateTo").html(ValidationIcon() + "This field is not correct format.");
                chk = false;
            }
        }
        else {
            $("#validatefor-" + "dtpTransferDateTo").html("");
        }

        if (!kendo.parseDate($("#dtpCsApproveDateFrom").val(), "dd/MM/yyyy")) {
            if ($("#dtpCsApproveDateFrom").val() != "") {
                $("#validatefor-" + "dtpCsApproveDateFrom").html(ValidationIcon() + "This field is not correct format.");
                chk = false;
            }
        }
        else {
            $("#validatefor-" + "dtpCsApproveDateFrom").html("");
        }

        if (!kendo.parseDate($("#dtpCsApproveDateTo").val(), "dd/MM/yyyy")) {
            if ($("#dtpCsApproveDateTo").val() != "") {
                $("#validatefor-" + "dtpCsApproveDateTo").html(ValidationIcon() + "This field is not correct format.");
                chk = false;
            }
        }
        else {
            $("#validatefor-" + "dtpCsApproveDateTo").html("");
        }


        if (!kendo.parseDate($("#dtpWithdrawalDateFrom").val(), "dd/MM/yyyy")) {
            if ($("#dtpWithdrawalDateFrom").val() != "") {
                $("#validatefor-" + "dtpWithdrawalDateFrom").html(ValidationIcon() + "This field is not correct format.");
                chk = false;
            }
        }
        else {
            $("#validatefor-" + "dtpWithdrawalDateFrom").html("");
        }

        if (!kendo.parseDate($("#dtpWithdrawalDateTo").val(), "dd/MM/yyyy")) {
            if ($("#dtpWithdrawalDateTo").val() != "") {
                $("#validatefor-" + "dtpWithdrawalDateTo").html(ValidationIcon() + "This field is not correct format.");
                chk = false;
            }
        }
        else {
            $("#validatefor-" + "dtpWithdrawalDateTo").html("");
        }


        }
        return chk;
    }

    function onChangeddlSubContract() {
        var ddlSubContract = $("#ddlSubContract").data("kendoDropDownList");
        var ddlVendorcode = $("#ddlVendorcode").data("kendoDropDownList");
        $.ajax({
            type: "POST",
            url: "/ReportInstallationCostbyOrder/ChangeddlSubContract",
            data: { subContractorName: ddlSubContract.value(), subContractorCode: ddlVendorcode.value() },
            dataType: "json",
            async: false,
            success: function (response) {
                if (JSON.stringify(response) !== "[]") {
                    ddlVendorcode.setDataSource(response);
                    ddlVendorcode.refresh();
                }
            },
            failure: function (msg) {
            }
        });
    }

    function onChangeddlVendorcode() {
        var ddlSubContract = $("#ddlSubContract").data("kendoDropDownList");
        var ddlVendorcode = $("#ddlVendorcode").data("kendoDropDownList");
        $.ajax({
            type: "POST",
            url: "/ReportInstallationCostbyOrder/ChangeddlVendorcode",
            data: { subContractorName: ddlSubContract.value(), subContractorCode: ddlVendorcode.value() },
            dataType: "json",
            async: false,
            success: function (response) {
                if (JSON.stringify(response) !== "[]") {
                    ddlSubContract.setDataSource(response);
                    ddlSubContract.refresh();
                }
            },
            failure: function (msg) {
            }
        });
    }


    function showFeedback(type, msg, title) {
        //
       // $('#MessageFeedbackPopUp').addClass("popups");
        $("#headerMessageFeedback").removeClass();
        $("#headerMessageFeedback").addClass("modal-header");
        if (type === "primary") { $("#headerMessageFeedback").addClass("btn-primary"); }
        else if (type === "success") { $("#headerMessageFeedback").addClass("btn-success"); }
        else if (type === "info") { $("#headerMessageFeedback").addClass("btn-info"); }
        else if (type === "warning") { $("#headerMessageFeedback").addClass("btn-warning"); }
        else if (type === "error") { $("#headerMessageFeedback").addClass("btn-danger"); }
        else { $("#headerMessageFeedback").addClass("btn-default"); }

        if (title !== undefined) $("#MessageFeedbackPopUpLabel").text(title); else $("#MessageFeedbackPopUpLabel").text("Notification");

        $("#lbMessageFeedback").html(msg);

        $("#MessageFeedbackPopUp").modal('show');
        $('.popups').css('z-index', 9999);
    }

    var checkCount = 0;
    function checkUpdateAllButton() {


     //   AccessListModel.ACCESS_NUMBER = $("#accNo").val();

        var count = 0;
        var index = 0;
        idsToSend = [];
        $.each(checkedIds, function (i, val) {
            if (checkedIds[i]) {
                //AccessListModel.ACCESS_NUMBER = i;
                //
                var AccessListModel = new AccessList();
                AccessListModel.ACCESS_NUMBER = i;
                idsToSend.push(AccessListModel);
                count++;
            }
            index++;
        });
       /// console.log('count:' + count)
      //  console.log(idsToSend);
        if (count >= 2) {
            $('#btnAcctUpdate').attr("disabled", false);
        }
        else {
            $('#btnAcctUpdate').attr("disabled", true);
        }


        //} else {
        //    $("#chk").val("False");
        //    $("#updateall").prop("disabled", true);
        //}

        //if (count > 0 && count === checkCount) {
        //    $('.h-cb').prop('checked', true);
        //} else {
        //    $('.h-cb').prop('checked', false);
        //}
    }
    // R19.03 update all Re Cal Add Function Check open popup
    function UpdateAllCheckOpenConfirmPopupByStatus() {
        var dialog = $("#UpdateAllCheckOpenConfirmPopupByStatus").data("kendoWindow").open();
        dialog = $("#UpdateAllCheckOpenConfirmPopupByStatus").data("kendoWindow");
        dialog.center();
        $("#ddlFAPOWorkFlowStatus").data('kendoDropDownList').select(0);
    }
    function CanCelRecalFAPODistanceWorkStatus() {
        $("#UpdateAllCheckOpenConfirmPopupByStatus").data("kendoWindow").close();
    }
    function ConfirmRecalFAPODistanceWorkStatus() {
        //alert("FAPOConfirmRecalDistance");
        //var status = $("#ddlStatus").val();
        //$("#chk").val("True")
        //setSaveButtonFAPO();

        var chk = validateFAPOWorkFlowStatus();
        if (chk) {
            var chkST = $("#ddlFAPOWorkFlowStatus").val().toUpperCase().trim().replace(" ", "");
            if (chkST == "RECHECK" || chkST == "NODATA") {
                $("#UpdateAllCheckOpenConfirmPopupByStatus").data("kendoWindow").close();

                var dialog = $("#EditConfigPopupFOA").data("kendoWindow").open();
                dialog = $("#EditConfigPopupFOA").data("kendoWindow");
                dialog.center();

            }
            //else if (chkST == "NODATA") {
            //    $("#UpdateAllCheckOpenConfirmPopupByStatus").data("kendoWindow").close();

            //    var dialog = $("#EditConfigPopup").data("kendoWindow").open();
            //    dialog = $("#EditConfigPopup").data("kendoWindow");
            //    dialog.center();
            //}
            else {
                $("#validatefor-FAPOWorkFlowStatus").html(ValidationIcon() + " Please Check WorkFlow Status in FAPO.");
            }
        }


    }
    function validateFAPOWorkFlowStatus() {
        var chk = false;

        if ($("#ddlFAPOWorkFlowStatus").val() == '' || $("#ddlFAPOWorkFlowStatus").val() == 'ALL') {
            $("#validatefor-FAPOWorkFlowStatus").html(ValidationIcon() + "This field is required.");
            chk = false;

        }
        else {
            $("#validatefor-FAPOWorkFlowStatus").html("");
            chk = true;
        }
        return chk;
    }

    function SwitchPartial(e) {
        if (e.value === "price") {
            contentToToggle.style.display = "block";
            var dialogFOA = $("#EditConfigPopupFOA").data("kendoWindow").open();
            dialogFOA = $("#EditConfigPopupFOA").data("kendoWindow");
            var dialogRadio = $("#EditConfigPopupWithRadioBtn").data("kendoWindow").close();
            dialogFOA.center();
            dialogRadio.refresh();
            $("#cal_radio1").prop('checked', true);
        } else {
            var dialogRadio = $("#EditConfigPopupWithRadioBtn").data("kendoWindow").open();
            dialogRadio = $("#EditConfigPopupWithRadioBtn").data("kendoWindow");
            var dialogFOA = $("#EditConfigPopupFOA").data("kendoWindow").close();
            dialogRadio.center();
            dialogFOA.refresh();
            $("#cal_radio4").prop('checked', true);
        }
        $("#TOTAL_PRICE").val("");
        var container = $("#dynamicGridsContainer");
        container.empty();


        var dropdown = $("#NEW_LOOKUP").data("kendoDropDownList");
        if (dropdown) {
            dropdown.select(0);
            //dropdown.trigger("change");
        }
        setSaveButtonFAPO2();
    }



    function onSelect(e) {
        ClearSearch();
        var selectedTabText = $(e.item).find("> .k-link").text().trim();

        if (selectedTabText === "MA") {
            $("#ddlOrdStatus").closest(".col-sm-12").hide();
            $("#ddlOrdertype").closest(".col-sm-12").hide();
            $("#ddlIrDoc").closest(".col-sm-12").hide();
            //$("#ddlSymptomName").closest(".col-sm-12").show();
            //$("#ddlSymptomGroup").closest(".col-sm-12").show();
            $("#ddlSymptomName").closest(".col-sm-12").hide();
            $("#ddlSymptomGroup").closest(".col-sm-12").hide();
            $('input[name="INVOICE_NO"]').closest(".col-sm-12").hide();


            $('.row.i-gap-top-1.WithdrawalDate').hide();
            $('.row.i-gap-top-1.TranfDate').hide();

            //$('input[name="dtpWithdrawalDateFrom"]').closest(".col-md-6").hide();
            //$('input[name="dtpWithdrawalDateTo"]').closest(".col-md-6").hide();

            //$('input[name="dtpTransferDateFrom"]').closest(".col-md-6").hide();
            //$('input[name="dtpTransferDateTo"]').closest(".col-md-6").hide();

            //$("#dtpTransferDateFrom").closest(".col-sm-12").hide();
            //$("#dtpTransferDateTo").closest(".col-sm-12").hide();
            //$("#L_CS_APPROVE_DATE_HIDE").hide();
        } else {
            $("#ddlOrdStatus").closest(".col-sm-12").show();
            $("#ddlOrdertype").closest(".col-sm-12").show();
            $("#ddlIrDoc").closest(".col-sm-12").show();

            $("#ddlSymptomName").closest(".col-sm-12").hide();
            $("#ddlSymptomGroup").closest(".col-sm-12").hide();
            //$("#ddlOrdertype").closest(".col-sm-12").hide();
            $('input[name="INVOICE_NO"]').closest(".col-sm-12").show();


            $('.row.i-gap-top-1.WithdrawalDate').show();
            $('.row.i-gap-top-1.TranfDate').show();
            //$("#L_CS_APPROVE_DATE_HIDE").show();
        }
    }
</script>
