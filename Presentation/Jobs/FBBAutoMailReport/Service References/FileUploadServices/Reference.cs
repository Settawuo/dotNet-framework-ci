//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FBBAutoMailReport.FileUploadServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileUploadServices.IFileUploadService")]
    public interface IFileUploadService {
        
        // CODEGEN: Generating message contract since the wrapper name (FileDownloadMessage) of message FileDownloadMessage does not match the default value (DownloadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploadService/DownloadFile", ReplyAction="http://tempuri.org/IFileUploadService/DownloadFileResponse")]
        FBBAutoMailReport.FileUploadServices.FileDownloadReturnMessage DownloadFile(FBBAutoMailReport.FileUploadServices.FileDownloadMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploadService/DownloadFile", ReplyAction="http://tempuri.org/IFileUploadService/DownloadFileResponse")]
        System.Threading.Tasks.Task<FBBAutoMailReport.FileUploadServices.FileDownloadReturnMessage> DownloadFileAsync(FBBAutoMailReport.FileUploadServices.FileDownloadMessage request);
        
        // CODEGEN: Generating message contract since the wrapper name (FileUploadMessage) of message FileUploadMessage does not match the default value (UploadFile)
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFileUploadService/UploadFile")]
        void UploadFile(FBBAutoMailReport.FileUploadServices.FileUploadMessage request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFileUploadService/UploadFile")]
        System.Threading.Tasks.Task UploadFileAsync(FBBAutoMailReport.FileUploadServices.FileUploadMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploadService/AttemptToCloseStream", ReplyAction="http://tempuri.org/IFileUploadService/AttemptToCloseStreamResponse")]
        void AttemptToCloseStream(string authenticationKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploadService/AttemptToCloseStream", ReplyAction="http://tempuri.org/IFileUploadService/AttemptToCloseStreamResponse")]
        System.Threading.Tasks.Task AttemptToCloseStreamAsync(string authenticationKey);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileDownloadMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileDownloadMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string AuthenticationKey;
        
        public FileDownloadMessage() {
        }
        
        public FileDownloadMessage(string AuthenticationKey) {
            this.AuthenticationKey = AuthenticationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileDownloadReturnMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileDownloadReturnMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public FileDownloadReturnMessage() {
        }
        
        public FileDownloadReturnMessage(System.IO.Stream FileByteStream) {
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUploadMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileUploadMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string AuthenticationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public FileUploadMessage() {
        }
        
        public FileUploadMessage(string AuthenticationKey, System.IO.Stream FileByteStream) {
            this.AuthenticationKey = AuthenticationKey;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileUploadServiceChannel : FBBAutoMailReport.FileUploadServices.IFileUploadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileUploadServiceClient : System.ServiceModel.ClientBase<FBBAutoMailReport.FileUploadServices.IFileUploadService>, FBBAutoMailReport.FileUploadServices.IFileUploadService {
        
        public FileUploadServiceClient() {
        }
        
        public FileUploadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileUploadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUploadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUploadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FBBAutoMailReport.FileUploadServices.FileDownloadReturnMessage FBBAutoMailReport.FileUploadServices.IFileUploadService.DownloadFile(FBBAutoMailReport.FileUploadServices.FileDownloadMessage request) {
            return base.Channel.DownloadFile(request);
        }
        
        public System.IO.Stream DownloadFile(string AuthenticationKey) {
            FBBAutoMailReport.FileUploadServices.FileDownloadMessage inValue = new FBBAutoMailReport.FileUploadServices.FileDownloadMessage();
            inValue.AuthenticationKey = AuthenticationKey;
            FBBAutoMailReport.FileUploadServices.FileDownloadReturnMessage retVal = ((FBBAutoMailReport.FileUploadServices.IFileUploadService)(this)).DownloadFile(inValue);
            return retVal.FileByteStream;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FBBAutoMailReport.FileUploadServices.FileDownloadReturnMessage> FBBAutoMailReport.FileUploadServices.IFileUploadService.DownloadFileAsync(FBBAutoMailReport.FileUploadServices.FileDownloadMessage request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<FBBAutoMailReport.FileUploadServices.FileDownloadReturnMessage> DownloadFileAsync(string AuthenticationKey) {
            FBBAutoMailReport.FileUploadServices.FileDownloadMessage inValue = new FBBAutoMailReport.FileUploadServices.FileDownloadMessage();
            inValue.AuthenticationKey = AuthenticationKey;
            return ((FBBAutoMailReport.FileUploadServices.IFileUploadService)(this)).DownloadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void FBBAutoMailReport.FileUploadServices.IFileUploadService.UploadFile(FBBAutoMailReport.FileUploadServices.FileUploadMessage request) {
            base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string AuthenticationKey, System.IO.Stream FileByteStream) {
            FBBAutoMailReport.FileUploadServices.FileUploadMessage inValue = new FBBAutoMailReport.FileUploadServices.FileUploadMessage();
            inValue.AuthenticationKey = AuthenticationKey;
            inValue.FileByteStream = FileByteStream;
            ((FBBAutoMailReport.FileUploadServices.IFileUploadService)(this)).UploadFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task FBBAutoMailReport.FileUploadServices.IFileUploadService.UploadFileAsync(FBBAutoMailReport.FileUploadServices.FileUploadMessage request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task UploadFileAsync(string AuthenticationKey, System.IO.Stream FileByteStream) {
            FBBAutoMailReport.FileUploadServices.FileUploadMessage inValue = new FBBAutoMailReport.FileUploadServices.FileUploadMessage();
            inValue.AuthenticationKey = AuthenticationKey;
            inValue.FileByteStream = FileByteStream;
            return ((FBBAutoMailReport.FileUploadServices.IFileUploadService)(this)).UploadFileAsync(inValue);
        }
        
        public void AttemptToCloseStream(string authenticationKey) {
            base.Channel.AttemptToCloseStream(authenticationKey);
        }
        
        public System.Threading.Tasks.Task AttemptToCloseStreamAsync(string authenticationKey) {
            return base.Channel.AttemptToCloseStreamAsync(authenticationKey);
        }
    }
}
