//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WBBBusinessLayer.SiebelService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AIS_spcDRM_spcChannel_spcInfo", Namespace="http://siebel.com/asi/")]
    public partial class AIS_spcDRM_spcChannel_spcInfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AISDRMChannelInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AIS_spcDRM_spcChannel_spcInfo() {
            this.Url = global::WBBBusinessLayer.Properties.Settings.Default.WBBBusinessLayer_SiebelGenActivity_AIS_spcIM_spcCommon_spcCreate_spcActivity;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AISDRMChannelInfoCompletedEventHandler AISDRMChannelInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("rpc/http://siebel.com/asi/:AISDRMChannelInfo", RequestNamespace="http://siebel.com/asi/", ResponseNamespace="http://siebel.com/asi/")]
        [return: System.Xml.Serialization.SoapElementAttribute("outASCCode")]
        public string AISDRMChannelInfo(
                    string inParam5, 
                    string inParam4, 
                    string inParam1, 
                    string inParam2, 
                    string inLocationCode, 
                    string inASCCode, 
                    string inParam3, 
                    out string outASCPartnerName, 
                    out string outBusinessType, 
                    out string outCharacteristic, 
                    out string outErrorMessage, 
                    out string outFullAddress, 
                    out string outLocationCode, 
                    out string outMainFax, 
                    out string outMainPhone, 
                    out string outMobileNo, 
                    out string outOperatorClass, 
                    out string outParam1, 
                    out string outParam10, 
                    out string outParam11, 
                    out string outParam12, 
                    out string outParam13, 
                    out string outParam14, 
                    out string outParam15, 
                    out string outParam16, 
                    out string outParam17, 
                    out string outParam18, 
                    out string outParam19, 
                    out string outParam2, 
                    out string outParam20, 
                    out string outParam21, 
                    out string outParam22, 
                    out string outParam23, 
                    out string outParam24, 
                    out string outParam25, 
                    out string outParam3, 
                    out string outParam4, 
                    out string outParam5, 
                    out string outParam6, 
                    out string outParam7, 
                    out string outParam8, 
                    out string outParam9, 
                    out string outPartnerName, 
                    out string outProvince, 
                    out string outRegion, 
                    out string outStatus, 
                    out string outSubRegion, 
                    out string outSubType, 
                    out string outTitle, 
                    out string outType, 
                    out string outWTName) {
            object[] results = this.Invoke("AISDRMChannelInfo", new object[] {
                        inParam5,
                        inParam4,
                        inParam1,
                        inParam2,
                        inLocationCode,
                        inASCCode,
                        inParam3});
            outASCPartnerName = ((string)(results[1]));
            outBusinessType = ((string)(results[2]));
            outCharacteristic = ((string)(results[3]));
            outErrorMessage = ((string)(results[4]));
            outFullAddress = ((string)(results[5]));
            outLocationCode = ((string)(results[6]));
            outMainFax = ((string)(results[7]));
            outMainPhone = ((string)(results[8]));
            outMobileNo = ((string)(results[9]));
            outOperatorClass = ((string)(results[10]));
            outParam1 = ((string)(results[11]));
            outParam10 = ((string)(results[12]));
            outParam11 = ((string)(results[13]));
            outParam12 = ((string)(results[14]));
            outParam13 = ((string)(results[15]));
            outParam14 = ((string)(results[16]));
            outParam15 = ((string)(results[17]));
            outParam16 = ((string)(results[18]));
            outParam17 = ((string)(results[19]));
            outParam18 = ((string)(results[20]));
            outParam19 = ((string)(results[21]));
            outParam2 = ((string)(results[22]));
            outParam20 = ((string)(results[23]));
            outParam21 = ((string)(results[24]));
            outParam22 = ((string)(results[25]));
            outParam23 = ((string)(results[26]));
            outParam24 = ((string)(results[27]));
            outParam25 = ((string)(results[28]));
            outParam3 = ((string)(results[29]));
            outParam4 = ((string)(results[30]));
            outParam5 = ((string)(results[31]));
            outParam6 = ((string)(results[32]));
            outParam7 = ((string)(results[33]));
            outParam8 = ((string)(results[34]));
            outParam9 = ((string)(results[35]));
            outPartnerName = ((string)(results[36]));
            outProvince = ((string)(results[37]));
            outRegion = ((string)(results[38]));
            outStatus = ((string)(results[39]));
            outSubRegion = ((string)(results[40]));
            outSubType = ((string)(results[41]));
            outTitle = ((string)(results[42]));
            outType = ((string)(results[43]));
            outWTName = ((string)(results[44]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AISDRMChannelInfoAsync(string inParam5, string inParam4, string inParam1, string inParam2, string inLocationCode, string inASCCode, string inParam3) {
            this.AISDRMChannelInfoAsync(inParam5, inParam4, inParam1, inParam2, inLocationCode, inASCCode, inParam3, null);
        }
        
        /// <remarks/>
        public void AISDRMChannelInfoAsync(string inParam5, string inParam4, string inParam1, string inParam2, string inLocationCode, string inASCCode, string inParam3, object userState) {
            if ((this.AISDRMChannelInfoOperationCompleted == null)) {
                this.AISDRMChannelInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAISDRMChannelInfoOperationCompleted);
            }
            this.InvokeAsync("AISDRMChannelInfo", new object[] {
                        inParam5,
                        inParam4,
                        inParam1,
                        inParam2,
                        inLocationCode,
                        inASCCode,
                        inParam3}, this.AISDRMChannelInfoOperationCompleted, userState);
        }
        
        private void OnAISDRMChannelInfoOperationCompleted(object arg) {
            if ((this.AISDRMChannelInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AISDRMChannelInfoCompleted(this, new AISDRMChannelInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AISDRMChannelInfoCompletedEventHandler(object sender, AISDRMChannelInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AISDRMChannelInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AISDRMChannelInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string outASCPartnerName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string outBusinessType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string outCharacteristic {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string outErrorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string outFullAddress {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string outLocationCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string outMainFax {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string outMainPhone {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string outMobileNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string outOperatorClass {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public string outParam1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[11]));
            }
        }
        
        /// <remarks/>
        public string outParam10 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[12]));
            }
        }
        
        /// <remarks/>
        public string outParam11 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[13]));
            }
        }
        
        /// <remarks/>
        public string outParam12 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[14]));
            }
        }
        
        /// <remarks/>
        public string outParam13 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[15]));
            }
        }
        
        /// <remarks/>
        public string outParam14 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[16]));
            }
        }
        
        /// <remarks/>
        public string outParam15 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[17]));
            }
        }
        
        /// <remarks/>
        public string outParam16 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[18]));
            }
        }
        
        /// <remarks/>
        public string outParam17 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[19]));
            }
        }
        
        /// <remarks/>
        public string outParam18 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[20]));
            }
        }
        
        /// <remarks/>
        public string outParam19 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[21]));
            }
        }
        
        /// <remarks/>
        public string outParam2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[22]));
            }
        }
        
        /// <remarks/>
        public string outParam20 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[23]));
            }
        }
        
        /// <remarks/>
        public string outParam21 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[24]));
            }
        }
        
        /// <remarks/>
        public string outParam22 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[25]));
            }
        }
        
        /// <remarks/>
        public string outParam23 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[26]));
            }
        }
        
        /// <remarks/>
        public string outParam24 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[27]));
            }
        }
        
        /// <remarks/>
        public string outParam25 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[28]));
            }
        }
        
        /// <remarks/>
        public string outParam3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[29]));
            }
        }
        
        /// <remarks/>
        public string outParam4 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[30]));
            }
        }
        
        /// <remarks/>
        public string outParam5 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[31]));
            }
        }
        
        /// <remarks/>
        public string outParam6 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[32]));
            }
        }
        
        /// <remarks/>
        public string outParam7 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[33]));
            }
        }
        
        /// <remarks/>
        public string outParam8 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[34]));
            }
        }
        
        /// <remarks/>
        public string outParam9 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[35]));
            }
        }
        
        /// <remarks/>
        public string outPartnerName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[36]));
            }
        }
        
        /// <remarks/>
        public string outProvince {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[37]));
            }
        }
        
        /// <remarks/>
        public string outRegion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[38]));
            }
        }
        
        /// <remarks/>
        public string outStatus {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[39]));
            }
        }
        
        /// <remarks/>
        public string outSubRegion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[40]));
            }
        }
        
        /// <remarks/>
        public string outSubType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[41]));
            }
        }
        
        /// <remarks/>
        public string outTitle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[42]));
            }
        }
        
        /// <remarks/>
        public string outType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[43]));
            }
        }
        
        /// <remarks/>
        public string outWTName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[44]));
            }
        }
    }
}

#pragma warning restore 1591