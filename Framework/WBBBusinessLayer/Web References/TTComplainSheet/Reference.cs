//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WBBBusinessLayer.TTComplainSheet {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TTComplainSheetSOAP", Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class TTComplainSheet : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback newWorkSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback QUERYCAPACITYOperationCompleted;
        
        private System.Threading.SendOrPostCallback RESERVEDCAPACITYOperationCompleted;
        
        private System.Threading.SendOrPostCallback RELEASECAPACITYOperationCompleted;
        
        private System.Threading.SendOrPostCallback queryCPEPenaltyOperationCompleted;
        
        private System.Threading.SendOrPostCallback debtCollectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubcontractorOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySparePartOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCPEWarrantyOperationCompleted;
        
        private System.Threading.SendOrPostCallback MAappointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback newEDStaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMADetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelfServiceAppointOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TTComplainSheet() {
            this.Url = global::WBBBusinessLayer.Properties.Settings.Default.WBBBusinessLayer_TTComplainSheet_TTComplainSheet;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event newWorkSheetCompletedEventHandler newWorkSheetCompleted;
        
        /// <remarks/>
        public event QUERYCAPACITYCompletedEventHandler QUERYCAPACITYCompleted;
        
        /// <remarks/>
        public event RESERVEDCAPACITYCompletedEventHandler RESERVEDCAPACITYCompleted;
        
        /// <remarks/>
        public event RELEASECAPACITYCompletedEventHandler RELEASECAPACITYCompleted;
        
        /// <remarks/>
        public event queryCPEPenaltyCompletedEventHandler queryCPEPenaltyCompleted;
        
        /// <remarks/>
        public event debtCollectorCompletedEventHandler debtCollectorCompleted;
        
        /// <remarks/>
        public event getSubcontractorCompletedEventHandler getSubcontractorCompleted;
        
        /// <remarks/>
        public event QuerySparePartCompletedEventHandler QuerySparePartCompleted;
        
        /// <remarks/>
        public event SetCPEWarrantyCompletedEventHandler SetCPEWarrantyCompleted;
        
        /// <remarks/>
        public event MAappointmentCompletedEventHandler MAappointmentCompleted;
        
        /// <remarks/>
        public event cancelAppointmentCompletedEventHandler cancelAppointmentCompleted;
        
        /// <remarks/>
        public event newEDStaskCompletedEventHandler newEDStaskCompleted;
        
        /// <remarks/>
        public event QueryMADetailsCompletedEventHandler QueryMADetailsCompleted;
        
        /// <remarks/>
        public event SelfServiceAppointCompletedEventHandler SelfServiceAppointCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/newWorkSheet", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newWorkSheet(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SOURCE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCEPT_CONTACT_NAME, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCEPT_CONTACT, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NOC_CONTACT_NAME, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NOC_CONTACT, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCEPT_DATE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PRIORITY, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string COMMIT_DATE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CC_SERIAL_NO, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal CUST_ID, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool CUST_IDSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CUST_LEVEL, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SUB_CATEGORY, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SYMPTOM_CODE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string COMP_TITLE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CUST_NAME, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string COMP_CALLING, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string COMP_CALLED, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CONTACT_NAME, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string COMP_DESCRIPTION, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACC_NBR, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CUSTOMER_COMPLAINT_NAME, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CUSTOMER_COMPLAINT_MOBILE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NOC_REMARK, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DETAILS_FOR_RESOLVED, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string RESERVED_ID, 
                    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("ASSIGN_CONDITION_ATTR", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] assCondiAttr[] ASSIGN_CONDITION_LIST, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string TT_SERIAL_NO, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string DESC) {
            object[] results = this.Invoke("newWorkSheet", new object[] {
                        SOURCE,
                        ACCEPT_CONTACT_NAME,
                        ACCEPT_CONTACT,
                        NOC_CONTACT_NAME,
                        NOC_CONTACT,
                        ACCEPT_DATE,
                        PRIORITY,
                        COMMIT_DATE,
                        CC_SERIAL_NO,
                        CUST_ID,
                        CUST_IDSpecified,
                        CUST_LEVEL,
                        SUB_CATEGORY,
                        SYMPTOM_CODE,
                        COMP_TITLE,
                        CUST_NAME,
                        COMP_CALLING,
                        COMP_CALLED,
                        CONTACT_NAME,
                        COMP_DESCRIPTION,
                        ACC_NBR,
                        CUSTOMER_COMPLAINT_NAME,
                        CUSTOMER_COMPLAINT_MOBILE,
                        NOC_REMARK,
                        DETAILS_FOR_RESOLVED,
                        RESERVED_ID,
                        ASSIGN_CONDITION_LIST});
            TT_SERIAL_NO = ((string)(results[1]));
            DESC = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newWorkSheetAsync(
                    string SOURCE, 
                    string ACCEPT_CONTACT_NAME, 
                    string ACCEPT_CONTACT, 
                    string NOC_CONTACT_NAME, 
                    string NOC_CONTACT, 
                    string ACCEPT_DATE, 
                    string PRIORITY, 
                    string COMMIT_DATE, 
                    string CC_SERIAL_NO, 
                    decimal CUST_ID, 
                    bool CUST_IDSpecified, 
                    string CUST_LEVEL, 
                    string SUB_CATEGORY, 
                    string SYMPTOM_CODE, 
                    string COMP_TITLE, 
                    string CUST_NAME, 
                    string COMP_CALLING, 
                    string COMP_CALLED, 
                    string CONTACT_NAME, 
                    string COMP_DESCRIPTION, 
                    string ACC_NBR, 
                    string CUSTOMER_COMPLAINT_NAME, 
                    string CUSTOMER_COMPLAINT_MOBILE, 
                    string NOC_REMARK, 
                    string DETAILS_FOR_RESOLVED, 
                    string RESERVED_ID, 
                    assCondiAttr[] ASSIGN_CONDITION_LIST) {
            this.newWorkSheetAsync(SOURCE, ACCEPT_CONTACT_NAME, ACCEPT_CONTACT, NOC_CONTACT_NAME, NOC_CONTACT, ACCEPT_DATE, PRIORITY, COMMIT_DATE, CC_SERIAL_NO, CUST_ID, CUST_IDSpecified, CUST_LEVEL, SUB_CATEGORY, SYMPTOM_CODE, COMP_TITLE, CUST_NAME, COMP_CALLING, COMP_CALLED, CONTACT_NAME, COMP_DESCRIPTION, ACC_NBR, CUSTOMER_COMPLAINT_NAME, CUSTOMER_COMPLAINT_MOBILE, NOC_REMARK, DETAILS_FOR_RESOLVED, RESERVED_ID, ASSIGN_CONDITION_LIST, null);
        }
        
        /// <remarks/>
        public void newWorkSheetAsync(
                    string SOURCE, 
                    string ACCEPT_CONTACT_NAME, 
                    string ACCEPT_CONTACT, 
                    string NOC_CONTACT_NAME, 
                    string NOC_CONTACT, 
                    string ACCEPT_DATE, 
                    string PRIORITY, 
                    string COMMIT_DATE, 
                    string CC_SERIAL_NO, 
                    decimal CUST_ID, 
                    bool CUST_IDSpecified, 
                    string CUST_LEVEL, 
                    string SUB_CATEGORY, 
                    string SYMPTOM_CODE, 
                    string COMP_TITLE, 
                    string CUST_NAME, 
                    string COMP_CALLING, 
                    string COMP_CALLED, 
                    string CONTACT_NAME, 
                    string COMP_DESCRIPTION, 
                    string ACC_NBR, 
                    string CUSTOMER_COMPLAINT_NAME, 
                    string CUSTOMER_COMPLAINT_MOBILE, 
                    string NOC_REMARK, 
                    string DETAILS_FOR_RESOLVED, 
                    string RESERVED_ID, 
                    assCondiAttr[] ASSIGN_CONDITION_LIST, 
                    object userState) {
            if ((this.newWorkSheetOperationCompleted == null)) {
                this.newWorkSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewWorkSheetOperationCompleted);
            }
            this.InvokeAsync("newWorkSheet", new object[] {
                        SOURCE,
                        ACCEPT_CONTACT_NAME,
                        ACCEPT_CONTACT,
                        NOC_CONTACT_NAME,
                        NOC_CONTACT,
                        ACCEPT_DATE,
                        PRIORITY,
                        COMMIT_DATE,
                        CC_SERIAL_NO,
                        CUST_ID,
                        CUST_IDSpecified,
                        CUST_LEVEL,
                        SUB_CATEGORY,
                        SYMPTOM_CODE,
                        COMP_TITLE,
                        CUST_NAME,
                        COMP_CALLING,
                        COMP_CALLED,
                        CONTACT_NAME,
                        COMP_DESCRIPTION,
                        ACC_NBR,
                        CUSTOMER_COMPLAINT_NAME,
                        CUSTOMER_COMPLAINT_MOBILE,
                        NOC_REMARK,
                        DETAILS_FOR_RESOLVED,
                        RESERVED_ID,
                        ASSIGN_CONDITION_LIST}, this.newWorkSheetOperationCompleted, userState);
        }
        
        private void OnnewWorkSheetOperationCompleted(object arg) {
            if ((this.newWorkSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newWorkSheetCompleted(this, new newWorkSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/QUERYCAPACITY", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("AREA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QUERYCAPACITY([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCESS_NO, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MA_DATE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCESS_MODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DAYS, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SUBCONTRACTOR_ID, [System.Xml.Serialization.XmlElementAttribute("EXT_ATTR", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] extAttr[] EXT_ATTR, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SYMPTOM_CODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string ADDRESS_ID, [System.Xml.Serialization.XmlElementAttribute("TIME_SLOT_LIST", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out timeSlotList[] TIME_SLOT_LIST, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string INSTALL_SUBCONTRACTOR_NAME, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string INSTALL_SUBCONTRACTOR_TEAM, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string FOA_CLOSE_DATE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_CODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESC) {
            object[] results = this.Invoke("QUERYCAPACITY", new object[] {
                        ACCESS_NO,
                        MA_DATE,
                        ACCESS_MODE,
                        DAYS,
                        SUBCONTRACTOR_ID,
                        EXT_ATTR,
                        SYMPTOM_CODE});
            ADDRESS_ID = ((string)(results[1]));
            TIME_SLOT_LIST = ((timeSlotList[])(results[2]));
            INSTALL_SUBCONTRACTOR_NAME = ((string)(results[3]));
            INSTALL_SUBCONTRACTOR_TEAM = ((string)(results[4]));
            FOA_CLOSE_DATE = ((string)(results[5]));
            RESULT_CODE = ((string)(results[6]));
            RESULT_DESC = ((string)(results[7]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QUERYCAPACITYAsync(string ACCESS_NO, string MA_DATE, string ACCESS_MODE, string DAYS, string SUBCONTRACTOR_ID, extAttr[] EXT_ATTR, string SYMPTOM_CODE) {
            this.QUERYCAPACITYAsync(ACCESS_NO, MA_DATE, ACCESS_MODE, DAYS, SUBCONTRACTOR_ID, EXT_ATTR, SYMPTOM_CODE, null);
        }
        
        /// <remarks/>
        public void QUERYCAPACITYAsync(string ACCESS_NO, string MA_DATE, string ACCESS_MODE, string DAYS, string SUBCONTRACTOR_ID, extAttr[] EXT_ATTR, string SYMPTOM_CODE, object userState) {
            if ((this.QUERYCAPACITYOperationCompleted == null)) {
                this.QUERYCAPACITYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQUERYCAPACITYOperationCompleted);
            }
            this.InvokeAsync("QUERYCAPACITY", new object[] {
                        ACCESS_NO,
                        MA_DATE,
                        ACCESS_MODE,
                        DAYS,
                        SUBCONTRACTOR_ID,
                        EXT_ATTR,
                        SYMPTOM_CODE}, this.QUERYCAPACITYOperationCompleted, userState);
        }
        
        private void OnQUERYCAPACITYOperationCompleted(object arg) {
            if ((this.QUERYCAPACITYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QUERYCAPACITYCompleted(this, new QUERYCAPACITYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/RESERVEDCAPACITY", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RESERVEDCAPACITY([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MA_DATE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MA_TIME_SLOT, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCESS_MODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SUBCONTRACTOR_ID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ADDRESS_ID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCESS_NO, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ASSIGN_FLAG, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SYMPTOM_CODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SERVICE_LEVEL, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESC, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESERVED_ID) {
            object[] results = this.Invoke("RESERVEDCAPACITY", new object[] {
                        MA_DATE,
                        MA_TIME_SLOT,
                        ACCESS_MODE,
                        SUBCONTRACTOR_ID,
                        ADDRESS_ID,
                        ACCESS_NO,
                        ASSIGN_FLAG,
                        SYMPTOM_CODE,
                        SERVICE_LEVEL});
            RESULT_DESC = ((string)(results[1]));
            RESERVED_ID = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RESERVEDCAPACITYAsync(string MA_DATE, string MA_TIME_SLOT, string ACCESS_MODE, string SUBCONTRACTOR_ID, string ADDRESS_ID, string ACCESS_NO, string ASSIGN_FLAG, string SYMPTOM_CODE, string SERVICE_LEVEL) {
            this.RESERVEDCAPACITYAsync(MA_DATE, MA_TIME_SLOT, ACCESS_MODE, SUBCONTRACTOR_ID, ADDRESS_ID, ACCESS_NO, ASSIGN_FLAG, SYMPTOM_CODE, SERVICE_LEVEL, null);
        }
        
        /// <remarks/>
        public void RESERVEDCAPACITYAsync(string MA_DATE, string MA_TIME_SLOT, string ACCESS_MODE, string SUBCONTRACTOR_ID, string ADDRESS_ID, string ACCESS_NO, string ASSIGN_FLAG, string SYMPTOM_CODE, string SERVICE_LEVEL, object userState) {
            if ((this.RESERVEDCAPACITYOperationCompleted == null)) {
                this.RESERVEDCAPACITYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRESERVEDCAPACITYOperationCompleted);
            }
            this.InvokeAsync("RESERVEDCAPACITY", new object[] {
                        MA_DATE,
                        MA_TIME_SLOT,
                        ACCESS_MODE,
                        SUBCONTRACTOR_ID,
                        ADDRESS_ID,
                        ACCESS_NO,
                        ASSIGN_FLAG,
                        SYMPTOM_CODE,
                        SERVICE_LEVEL}, this.RESERVEDCAPACITYOperationCompleted, userState);
        }
        
        private void OnRESERVEDCAPACITYOperationCompleted(object arg) {
            if ((this.RESERVEDCAPACITYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RESERVEDCAPACITYCompleted(this, new RESERVEDCAPACITYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/RELEASECAPACITY", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RELEASECAPACITY([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string RESERVED_ID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESC) {
            object[] results = this.Invoke("RELEASECAPACITY", new object[] {
                        RESERVED_ID});
            RESULT_DESC = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RELEASECAPACITYAsync(string RESERVED_ID) {
            this.RELEASECAPACITYAsync(RESERVED_ID, null);
        }
        
        /// <remarks/>
        public void RELEASECAPACITYAsync(string RESERVED_ID, object userState) {
            if ((this.RELEASECAPACITYOperationCompleted == null)) {
                this.RELEASECAPACITYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRELEASECAPACITYOperationCompleted);
            }
            this.InvokeAsync("RELEASECAPACITY", new object[] {
                        RESERVED_ID}, this.RELEASECAPACITYOperationCompleted, userState);
        }
        
        private void OnRELEASECAPACITYOperationCompleted(object arg) {
            if ((this.RELEASECAPACITYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RELEASECAPACITYCompleted(this, new RELEASECAPACITYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/queryCPEPenalty", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queryCPEPenalty([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OPTION, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FIBRENET_ID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SERIAL_NO, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string STATUS, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MAC_ADDRESS, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESCRIPTION, [System.Xml.Serialization.XmlElementAttribute("CPE_INFO_LIST", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out cpePenalty[] CPE_INFO_LIST) {
            object[] results = this.Invoke("queryCPEPenalty", new object[] {
                        OPTION,
                        FIBRENET_ID,
                        SERIAL_NO,
                        STATUS,
                        MAC_ADDRESS});
            RESULT_DESCRIPTION = ((string)(results[1]));
            CPE_INFO_LIST = ((cpePenalty[])(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void queryCPEPenaltyAsync(string OPTION, string FIBRENET_ID, string SERIAL_NO, string STATUS, string MAC_ADDRESS) {
            this.queryCPEPenaltyAsync(OPTION, FIBRENET_ID, SERIAL_NO, STATUS, MAC_ADDRESS, null);
        }
        
        /// <remarks/>
        public void queryCPEPenaltyAsync(string OPTION, string FIBRENET_ID, string SERIAL_NO, string STATUS, string MAC_ADDRESS, object userState) {
            if ((this.queryCPEPenaltyOperationCompleted == null)) {
                this.queryCPEPenaltyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryCPEPenaltyOperationCompleted);
            }
            this.InvokeAsync("queryCPEPenalty", new object[] {
                        OPTION,
                        FIBRENET_ID,
                        SERIAL_NO,
                        STATUS,
                        MAC_ADDRESS}, this.queryCPEPenaltyOperationCompleted, userState);
        }
        
        private void OnqueryCPEPenaltyOperationCompleted(object arg) {
            if ((this.queryCPEPenaltyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryCPEPenaltyCompleted(this, new queryCPEPenaltyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/debtCollector", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string debtCollector([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SERIAL_NO, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OPER_DATE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MATERAIL_CODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CPE_TYPE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CPE_MODEL, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string STORAGE_LOCATION, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string STATUS, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCESS_NO, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DESCRIPTION, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ORDER_NO, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CHANNEL, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CREATE_DATE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESCRIPTION) {
            object[] results = this.Invoke("debtCollector", new object[] {
                        SERIAL_NO,
                        OPER_DATE,
                        MATERAIL_CODE,
                        CPE_TYPE,
                        CPE_MODEL,
                        STORAGE_LOCATION,
                        STATUS,
                        ACCESS_NO,
                        DESCRIPTION,
                        ORDER_NO,
                        CHANNEL,
                        CREATE_DATE});
            RESULT_DESCRIPTION = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void debtCollectorAsync(string SERIAL_NO, string OPER_DATE, string MATERAIL_CODE, string CPE_TYPE, string CPE_MODEL, string STORAGE_LOCATION, string STATUS, string ACCESS_NO, string DESCRIPTION, string ORDER_NO, string CHANNEL, string CREATE_DATE) {
            this.debtCollectorAsync(SERIAL_NO, OPER_DATE, MATERAIL_CODE, CPE_TYPE, CPE_MODEL, STORAGE_LOCATION, STATUS, ACCESS_NO, DESCRIPTION, ORDER_NO, CHANNEL, CREATE_DATE, null);
        }
        
        /// <remarks/>
        public void debtCollectorAsync(string SERIAL_NO, string OPER_DATE, string MATERAIL_CODE, string CPE_TYPE, string CPE_MODEL, string STORAGE_LOCATION, string STATUS, string ACCESS_NO, string DESCRIPTION, string ORDER_NO, string CHANNEL, string CREATE_DATE, object userState) {
            if ((this.debtCollectorOperationCompleted == null)) {
                this.debtCollectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndebtCollectorOperationCompleted);
            }
            this.InvokeAsync("debtCollector", new object[] {
                        SERIAL_NO,
                        OPER_DATE,
                        MATERAIL_CODE,
                        CPE_TYPE,
                        CPE_MODEL,
                        STORAGE_LOCATION,
                        STATUS,
                        ACCESS_NO,
                        DESCRIPTION,
                        ORDER_NO,
                        CHANNEL,
                        CREATE_DATE}, this.debtCollectorOperationCompleted, userState);
        }
        
        private void OndebtCollectorOperationCompleted(object arg) {
            if ((this.debtCollectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.debtCollectorCompleted(this, new debtCollectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/getSubcontractor", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getSubcontractor([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ATTR_1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ATTR_2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESCRIPTION, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string STAFF_NAME, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string STAFF_PHONE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string STAFF_EMAIL, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string STAFF_ROLE, [System.Xml.Serialization.XmlElementAttribute("COMPANY_LIST", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out companyList[] COMPANY_LIST) {
            object[] results = this.Invoke("getSubcontractor", new object[] {
                        ATTR_1,
                        ATTR_2});
            RESULT_DESCRIPTION = ((string)(results[1]));
            STAFF_NAME = ((string)(results[2]));
            STAFF_PHONE = ((string)(results[3]));
            STAFF_EMAIL = ((string)(results[4]));
            STAFF_ROLE = ((string)(results[5]));
            COMPANY_LIST = ((companyList[])(results[6]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSubcontractorAsync(string ATTR_1, string ATTR_2) {
            this.getSubcontractorAsync(ATTR_1, ATTR_2, null);
        }
        
        /// <remarks/>
        public void getSubcontractorAsync(string ATTR_1, string ATTR_2, object userState) {
            if ((this.getSubcontractorOperationCompleted == null)) {
                this.getSubcontractorOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubcontractorOperationCompleted);
            }
            this.InvokeAsync("getSubcontractor", new object[] {
                        ATTR_1,
                        ATTR_2}, this.getSubcontractorOperationCompleted, userState);
        }
        
        private void OngetSubcontractorOperationCompleted(object arg) {
            if ((this.getSubcontractorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubcontractorCompleted(this, new getSubcontractorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/QuerySparePart", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QuerySparePart(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OPTION, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string STORAGE_LOCATION, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SHIP_TO, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SPARE_TYPE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MODEL, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string STATUS, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TRANSFER_DATE_FROM, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TRANSFER_DATE_TO, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TRANSFER_DATE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FIBRENET_ID, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SERIAL_NO, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESCRIPTION, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string REPORT_JOB_ID, 
                    [System.Xml.Serialization.XmlElementAttribute("SpareTypeStatusList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out spareTypeList[] SpareTypeStatusList, 
                    [System.Xml.Serialization.XmlElementAttribute("TransferDateList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out transferList[] TransferDateList, 
                    [System.Xml.Serialization.XmlElementAttribute("FibreSNList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out snList[] FibreSNList) {
            object[] results = this.Invoke("QuerySparePart", new object[] {
                        OPTION,
                        STORAGE_LOCATION,
                        SHIP_TO,
                        SPARE_TYPE,
                        MODEL,
                        STATUS,
                        TRANSFER_DATE_FROM,
                        TRANSFER_DATE_TO,
                        TRANSFER_DATE,
                        FIBRENET_ID,
                        SERIAL_NO});
            RESULT_DESCRIPTION = ((string)(results[1]));
            REPORT_JOB_ID = ((string)(results[2]));
            SpareTypeStatusList = ((spareTypeList[])(results[3]));
            TransferDateList = ((transferList[])(results[4]));
            FibreSNList = ((snList[])(results[5]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySparePartAsync(string OPTION, string STORAGE_LOCATION, string SHIP_TO, string SPARE_TYPE, string MODEL, string STATUS, string TRANSFER_DATE_FROM, string TRANSFER_DATE_TO, string TRANSFER_DATE, string FIBRENET_ID, string SERIAL_NO) {
            this.QuerySparePartAsync(OPTION, STORAGE_LOCATION, SHIP_TO, SPARE_TYPE, MODEL, STATUS, TRANSFER_DATE_FROM, TRANSFER_DATE_TO, TRANSFER_DATE, FIBRENET_ID, SERIAL_NO, null);
        }
        
        /// <remarks/>
        public void QuerySparePartAsync(string OPTION, string STORAGE_LOCATION, string SHIP_TO, string SPARE_TYPE, string MODEL, string STATUS, string TRANSFER_DATE_FROM, string TRANSFER_DATE_TO, string TRANSFER_DATE, string FIBRENET_ID, string SERIAL_NO, object userState) {
            if ((this.QuerySparePartOperationCompleted == null)) {
                this.QuerySparePartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySparePartOperationCompleted);
            }
            this.InvokeAsync("QuerySparePart", new object[] {
                        OPTION,
                        STORAGE_LOCATION,
                        SHIP_TO,
                        SPARE_TYPE,
                        MODEL,
                        STATUS,
                        TRANSFER_DATE_FROM,
                        TRANSFER_DATE_TO,
                        TRANSFER_DATE,
                        FIBRENET_ID,
                        SERIAL_NO}, this.QuerySparePartOperationCompleted, userState);
        }
        
        private void OnQuerySparePartOperationCompleted(object arg) {
            if ((this.QuerySparePartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySparePartCompleted(this, new QuerySparePartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/SetCPEWarranty", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SetCPEWarranty([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OPTION, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SERIAL_NO, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FIBRENET_ID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string WARRANTY_START_DATE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DAY_WARRANTY, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MONTH_WARRANTY, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string YEAR_WARRANTY, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FIX_WARRANTY_END_DATE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESCRIPTION) {
            object[] results = this.Invoke("SetCPEWarranty", new object[] {
                        OPTION,
                        SERIAL_NO,
                        FIBRENET_ID,
                        WARRANTY_START_DATE,
                        DAY_WARRANTY,
                        MONTH_WARRANTY,
                        YEAR_WARRANTY,
                        FIX_WARRANTY_END_DATE});
            RESULT_DESCRIPTION = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetCPEWarrantyAsync(string OPTION, string SERIAL_NO, string FIBRENET_ID, string WARRANTY_START_DATE, string DAY_WARRANTY, string MONTH_WARRANTY, string YEAR_WARRANTY, string FIX_WARRANTY_END_DATE) {
            this.SetCPEWarrantyAsync(OPTION, SERIAL_NO, FIBRENET_ID, WARRANTY_START_DATE, DAY_WARRANTY, MONTH_WARRANTY, YEAR_WARRANTY, FIX_WARRANTY_END_DATE, null);
        }
        
        /// <remarks/>
        public void SetCPEWarrantyAsync(string OPTION, string SERIAL_NO, string FIBRENET_ID, string WARRANTY_START_DATE, string DAY_WARRANTY, string MONTH_WARRANTY, string YEAR_WARRANTY, string FIX_WARRANTY_END_DATE, object userState) {
            if ((this.SetCPEWarrantyOperationCompleted == null)) {
                this.SetCPEWarrantyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCPEWarrantyOperationCompleted);
            }
            this.InvokeAsync("SetCPEWarranty", new object[] {
                        OPTION,
                        SERIAL_NO,
                        FIBRENET_ID,
                        WARRANTY_START_DATE,
                        DAY_WARRANTY,
                        MONTH_WARRANTY,
                        YEAR_WARRANTY,
                        FIX_WARRANTY_END_DATE}, this.SetCPEWarrantyOperationCompleted, userState);
        }
        
        private void OnSetCPEWarrantyOperationCompleted(object arg) {
            if ((this.SetCPEWarrantyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCPEWarrantyCompleted(this, new SetCPEWarrantyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/MAappointment", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SUBDISTRICT", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MAappointment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCESS_NO, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string MA_DATE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ACCESS_MODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DAYS, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SYMPTOM_CODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SERVICE_LEVEL, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string POSTCODE, [System.Xml.Serialization.XmlElementAttribute("TIME_SLOT_LIST", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out slotList[] TIME_SLOT_LIST, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_CODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESC) {
            object[] results = this.Invoke("MAappointment", new object[] {
                        ACCESS_NO,
                        MA_DATE,
                        ACCESS_MODE,
                        DAYS,
                        SYMPTOM_CODE,
                        SERVICE_LEVEL});
            POSTCODE = ((string)(results[1]));
            TIME_SLOT_LIST = ((slotList[])(results[2]));
            RESULT_CODE = ((string)(results[3]));
            RESULT_DESC = ((string)(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MAappointmentAsync(string ACCESS_NO, string MA_DATE, string ACCESS_MODE, string DAYS, string SYMPTOM_CODE, string SERVICE_LEVEL) {
            this.MAappointmentAsync(ACCESS_NO, MA_DATE, ACCESS_MODE, DAYS, SYMPTOM_CODE, SERVICE_LEVEL, null);
        }
        
        /// <remarks/>
        public void MAappointmentAsync(string ACCESS_NO, string MA_DATE, string ACCESS_MODE, string DAYS, string SYMPTOM_CODE, string SERVICE_LEVEL, object userState) {
            if ((this.MAappointmentOperationCompleted == null)) {
                this.MAappointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMAappointmentOperationCompleted);
            }
            this.InvokeAsync("MAappointment", new object[] {
                        ACCESS_NO,
                        MA_DATE,
                        ACCESS_MODE,
                        DAYS,
                        SYMPTOM_CODE,
                        SERVICE_LEVEL}, this.MAappointmentOperationCompleted, userState);
        }
        
        private void OnMAappointmentOperationCompleted(object arg) {
            if ((this.MAappointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MAappointmentCompleted(this, new MAappointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/cancelAppointment", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cancelAppointment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FIBRENET_ID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TRANSACTION_NUMBER, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FAILED_REASON, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string REMARK_FOR_CS_NOTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESC) {
            object[] results = this.Invoke("cancelAppointment", new object[] {
                        FIBRENET_ID,
                        TRANSACTION_NUMBER,
                        FAILED_REASON,
                        REMARK_FOR_CS_NOTE});
            RESULT_DESC = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelAppointmentAsync(string FIBRENET_ID, string TRANSACTION_NUMBER, string FAILED_REASON, string REMARK_FOR_CS_NOTE) {
            this.cancelAppointmentAsync(FIBRENET_ID, TRANSACTION_NUMBER, FAILED_REASON, REMARK_FOR_CS_NOTE, null);
        }
        
        /// <remarks/>
        public void cancelAppointmentAsync(string FIBRENET_ID, string TRANSACTION_NUMBER, string FAILED_REASON, string REMARK_FOR_CS_NOTE, object userState) {
            if ((this.cancelAppointmentOperationCompleted == null)) {
                this.cancelAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelAppointmentOperationCompleted);
            }
            this.InvokeAsync("cancelAppointment", new object[] {
                        FIBRENET_ID,
                        TRANSACTION_NUMBER,
                        FAILED_REASON,
                        REMARK_FOR_CS_NOTE}, this.cancelAppointmentOperationCompleted, userState);
        }
        
        private void OncancelAppointmentOperationCompleted(object arg) {
            if ((this.cancelAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelAppointmentCompleted(this, new cancelAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/newEDStask", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("TASK_NO", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newEDStask(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Order_NO, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Circuit_ID, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Order_Type, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Project_Name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Bill_Name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Order_Date, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Service_Type, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Speed_Current, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Speed_New, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Current_Customer_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Current_Customer_Address_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string New_Customer_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string New_Customer_Address_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Current_Customer_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Current_Customer_Address_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string New_Customer_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string New_Customer_Address_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Region_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Latitude_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Longitude_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Region_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Latitude_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Longitude_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Contact_Name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Contact_Phone, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Contact_Email, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Last_Mile_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Last_Mile_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Mobile_No, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IP_SIM, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PLAN, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PLAN_INFO, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Cost_Sheet_No, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TC_Name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string BC_Name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Remark, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Terminate_Ref_Order, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IPRAN_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IPRAN_NAME_Source, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IPRAN_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IPRAN_NAME_Destination, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Task, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Sale_Type, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SIM, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ON_SERVICE_DATE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string RELOCATE_DATE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TERMINATE_DATE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESPONSE_CODE, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESPONSE_MESSAGE) {
            object[] results = this.Invoke("newEDStask", new object[] {
                        Order_NO,
                        Circuit_ID,
                        Order_Type,
                        Project_Name,
                        Bill_Name,
                        Order_Date,
                        Service_Type,
                        Speed_Current,
                        Speed_New,
                        Current_Customer_Source,
                        Current_Customer_Address_Source,
                        New_Customer_Source,
                        New_Customer_Address_Source,
                        Current_Customer_Destination,
                        Current_Customer_Address_Destination,
                        New_Customer_Destination,
                        New_Customer_Address_Destination,
                        Region_Source,
                        Latitude_Source,
                        Longitude_Source,
                        Region_Destination,
                        Latitude_Destination,
                        Longitude_Destination,
                        Contact_Name,
                        Contact_Phone,
                        Contact_Email,
                        Last_Mile_Source,
                        Last_Mile_Destination,
                        Mobile_No,
                        IP_SIM,
                        PLAN,
                        PLAN_INFO,
                        Cost_Sheet_No,
                        TC_Name,
                        BC_Name,
                        Remark,
                        Terminate_Ref_Order,
                        IPRAN_Source,
                        IPRAN_NAME_Source,
                        IPRAN_Destination,
                        IPRAN_NAME_Destination,
                        Task,
                        Sale_Type,
                        SIM,
                        ON_SERVICE_DATE,
                        RELOCATE_DATE,
                        TERMINATE_DATE});
            RESPONSE_CODE = ((string)(results[1]));
            RESPONSE_MESSAGE = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newEDStaskAsync(
                    string Order_NO, 
                    string Circuit_ID, 
                    string Order_Type, 
                    string Project_Name, 
                    string Bill_Name, 
                    string Order_Date, 
                    string Service_Type, 
                    string Speed_Current, 
                    string Speed_New, 
                    string Current_Customer_Source, 
                    string Current_Customer_Address_Source, 
                    string New_Customer_Source, 
                    string New_Customer_Address_Source, 
                    string Current_Customer_Destination, 
                    string Current_Customer_Address_Destination, 
                    string New_Customer_Destination, 
                    string New_Customer_Address_Destination, 
                    string Region_Source, 
                    string Latitude_Source, 
                    string Longitude_Source, 
                    string Region_Destination, 
                    string Latitude_Destination, 
                    string Longitude_Destination, 
                    string Contact_Name, 
                    string Contact_Phone, 
                    string Contact_Email, 
                    string Last_Mile_Source, 
                    string Last_Mile_Destination, 
                    string Mobile_No, 
                    string IP_SIM, 
                    string PLAN, 
                    string PLAN_INFO, 
                    string Cost_Sheet_No, 
                    string TC_Name, 
                    string BC_Name, 
                    string Remark, 
                    string Terminate_Ref_Order, 
                    string IPRAN_Source, 
                    string IPRAN_NAME_Source, 
                    string IPRAN_Destination, 
                    string IPRAN_NAME_Destination, 
                    string Task, 
                    string Sale_Type, 
                    string SIM, 
                    string ON_SERVICE_DATE, 
                    string RELOCATE_DATE, 
                    string TERMINATE_DATE) {
            this.newEDStaskAsync(Order_NO, Circuit_ID, Order_Type, Project_Name, Bill_Name, Order_Date, Service_Type, Speed_Current, Speed_New, Current_Customer_Source, Current_Customer_Address_Source, New_Customer_Source, New_Customer_Address_Source, Current_Customer_Destination, Current_Customer_Address_Destination, New_Customer_Destination, New_Customer_Address_Destination, Region_Source, Latitude_Source, Longitude_Source, Region_Destination, Latitude_Destination, Longitude_Destination, Contact_Name, Contact_Phone, Contact_Email, Last_Mile_Source, Last_Mile_Destination, Mobile_No, IP_SIM, PLAN, PLAN_INFO, Cost_Sheet_No, TC_Name, BC_Name, Remark, Terminate_Ref_Order, IPRAN_Source, IPRAN_NAME_Source, IPRAN_Destination, IPRAN_NAME_Destination, Task, Sale_Type, SIM, ON_SERVICE_DATE, RELOCATE_DATE, TERMINATE_DATE, null);
        }
        
        /// <remarks/>
        public void newEDStaskAsync(
                    string Order_NO, 
                    string Circuit_ID, 
                    string Order_Type, 
                    string Project_Name, 
                    string Bill_Name, 
                    string Order_Date, 
                    string Service_Type, 
                    string Speed_Current, 
                    string Speed_New, 
                    string Current_Customer_Source, 
                    string Current_Customer_Address_Source, 
                    string New_Customer_Source, 
                    string New_Customer_Address_Source, 
                    string Current_Customer_Destination, 
                    string Current_Customer_Address_Destination, 
                    string New_Customer_Destination, 
                    string New_Customer_Address_Destination, 
                    string Region_Source, 
                    string Latitude_Source, 
                    string Longitude_Source, 
                    string Region_Destination, 
                    string Latitude_Destination, 
                    string Longitude_Destination, 
                    string Contact_Name, 
                    string Contact_Phone, 
                    string Contact_Email, 
                    string Last_Mile_Source, 
                    string Last_Mile_Destination, 
                    string Mobile_No, 
                    string IP_SIM, 
                    string PLAN, 
                    string PLAN_INFO, 
                    string Cost_Sheet_No, 
                    string TC_Name, 
                    string BC_Name, 
                    string Remark, 
                    string Terminate_Ref_Order, 
                    string IPRAN_Source, 
                    string IPRAN_NAME_Source, 
                    string IPRAN_Destination, 
                    string IPRAN_NAME_Destination, 
                    string Task, 
                    string Sale_Type, 
                    string SIM, 
                    string ON_SERVICE_DATE, 
                    string RELOCATE_DATE, 
                    string TERMINATE_DATE, 
                    object userState) {
            if ((this.newEDStaskOperationCompleted == null)) {
                this.newEDStaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewEDStaskOperationCompleted);
            }
            this.InvokeAsync("newEDStask", new object[] {
                        Order_NO,
                        Circuit_ID,
                        Order_Type,
                        Project_Name,
                        Bill_Name,
                        Order_Date,
                        Service_Type,
                        Speed_Current,
                        Speed_New,
                        Current_Customer_Source,
                        Current_Customer_Address_Source,
                        New_Customer_Source,
                        New_Customer_Address_Source,
                        Current_Customer_Destination,
                        Current_Customer_Address_Destination,
                        New_Customer_Destination,
                        New_Customer_Address_Destination,
                        Region_Source,
                        Latitude_Source,
                        Longitude_Source,
                        Region_Destination,
                        Latitude_Destination,
                        Longitude_Destination,
                        Contact_Name,
                        Contact_Phone,
                        Contact_Email,
                        Last_Mile_Source,
                        Last_Mile_Destination,
                        Mobile_No,
                        IP_SIM,
                        PLAN,
                        PLAN_INFO,
                        Cost_Sheet_No,
                        TC_Name,
                        BC_Name,
                        Remark,
                        Terminate_Ref_Order,
                        IPRAN_Source,
                        IPRAN_NAME_Source,
                        IPRAN_Destination,
                        IPRAN_NAME_Destination,
                        Task,
                        Sale_Type,
                        SIM,
                        ON_SERVICE_DATE,
                        RELOCATE_DATE,
                        TERMINATE_DATE}, this.newEDStaskOperationCompleted, userState);
        }
        
        private void OnnewEDStaskOperationCompleted(object arg) {
            if ((this.newEDStaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newEDStaskCompleted(this, new newEDStaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/QueryMADetails", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QueryMADetails([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SEARCH_KEY, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SEARCH_VALUE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string ERROR_CODE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string ERROR_DESCRIPTION, [System.Xml.Serialization.XmlElementAttribute("MA_ORDER_LIST", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out MA_ORDER[] MA_ORDER_LIST) {
            object[] results = this.Invoke("QueryMADetails", new object[] {
                        SEARCH_KEY,
                        SEARCH_VALUE});
            ERROR_CODE = ((string)(results[1]));
            ERROR_DESCRIPTION = ((string)(results[2]));
            MA_ORDER_LIST = ((MA_ORDER[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMADetailsAsync(string SEARCH_KEY, string SEARCH_VALUE) {
            this.QueryMADetailsAsync(SEARCH_KEY, SEARCH_VALUE, null);
        }
        
        /// <remarks/>
        public void QueryMADetailsAsync(string SEARCH_KEY, string SEARCH_VALUE, object userState) {
            if ((this.QueryMADetailsOperationCompleted == null)) {
                this.QueryMADetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMADetailsOperationCompleted);
            }
            this.InvokeAsync("QueryMADetails", new object[] {
                        SEARCH_KEY,
                        SEARCH_VALUE}, this.QueryMADetailsOperationCompleted, userState);
        }
        
        private void OnQueryMADetailsOperationCompleted(object arg) {
            if ((this.QueryMADetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMADetailsCompleted(this, new QueryMADetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TTComplainSheet/SelfServiceAppoint", RequestNamespace="http://www.example.org/TTComplainSheet/", ResponseNamespace="http://www.example.org/TTComplainSheet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RESULT_CODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SelfServiceAppoint([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FIBRENET_ID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string REQUEST_NO, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string APPOINTMENT_DATE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string TIME_SLOT, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ASSIGN_FLAG, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SUBCONTRACTOR_ID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CHANNEL, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RESULT_DESCRIPTION) {
            object[] results = this.Invoke("SelfServiceAppoint", new object[] {
                        FIBRENET_ID,
                        REQUEST_NO,
                        APPOINTMENT_DATE,
                        TIME_SLOT,
                        ASSIGN_FLAG,
                        SUBCONTRACTOR_ID,
                        CHANNEL});
            RESULT_DESCRIPTION = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelfServiceAppointAsync(string FIBRENET_ID, string REQUEST_NO, string APPOINTMENT_DATE, string TIME_SLOT, string ASSIGN_FLAG, string SUBCONTRACTOR_ID, string CHANNEL) {
            this.SelfServiceAppointAsync(FIBRENET_ID, REQUEST_NO, APPOINTMENT_DATE, TIME_SLOT, ASSIGN_FLAG, SUBCONTRACTOR_ID, CHANNEL, null);
        }
        
        /// <remarks/>
        public void SelfServiceAppointAsync(string FIBRENET_ID, string REQUEST_NO, string APPOINTMENT_DATE, string TIME_SLOT, string ASSIGN_FLAG, string SUBCONTRACTOR_ID, string CHANNEL, object userState) {
            if ((this.SelfServiceAppointOperationCompleted == null)) {
                this.SelfServiceAppointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelfServiceAppointOperationCompleted);
            }
            this.InvokeAsync("SelfServiceAppoint", new object[] {
                        FIBRENET_ID,
                        REQUEST_NO,
                        APPOINTMENT_DATE,
                        TIME_SLOT,
                        ASSIGN_FLAG,
                        SUBCONTRACTOR_ID,
                        CHANNEL}, this.SelfServiceAppointOperationCompleted, userState);
        }
        
        private void OnSelfServiceAppointOperationCompleted(object arg) {
            if ((this.SelfServiceAppointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelfServiceAppointCompleted(this, new SelfServiceAppointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class assCondiAttr {
        
        private string aTTR_NAMEField;
        
        private string vALUEField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ATTR_NAME {
            get {
                return this.aTTR_NAMEField;
            }
            set {
                this.aTTR_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VALUE {
            get {
                return this.vALUEField;
            }
            set {
                this.vALUEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class TEAM_INFO {
        
        private string tEAM_NAMEField;
        
        private string tEAM_IDField;
        
        private string tEAM_SERVICEField;
        
        private string vENDOR_CODEField;
        
        private string lOCATION_CODEField;
        
        private string sTORAGE_LOCATIONField;
        
        private string sHIP_TOField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TEAM_NAME {
            get {
                return this.tEAM_NAMEField;
            }
            set {
                this.tEAM_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TEAM_ID {
            get {
                return this.tEAM_IDField;
            }
            set {
                this.tEAM_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TEAM_SERVICE {
            get {
                return this.tEAM_SERVICEField;
            }
            set {
                this.tEAM_SERVICEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VENDOR_CODE {
            get {
                return this.vENDOR_CODEField;
            }
            set {
                this.vENDOR_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LOCATION_CODE {
            get {
                return this.lOCATION_CODEField;
            }
            set {
                this.lOCATION_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STORAGE_LOCATION {
            get {
                return this.sTORAGE_LOCATIONField;
            }
            set {
                this.sTORAGE_LOCATIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHIP_TO {
            get {
                return this.sHIP_TOField;
            }
            set {
                this.sHIP_TOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class COMPANY {
        
        private string cOMPANY_NAMEField;
        
        private string cOMPANY_IDField;
        
        private string vENDOR_CODEField;
        
        private string lOCATION_CODEField;
        
        private string sTORAGE_LOCATIONField;
        
        private TEAM_INFO[] tEAM_LISTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string COMPANY_NAME {
            get {
                return this.cOMPANY_NAMEField;
            }
            set {
                this.cOMPANY_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string COMPANY_ID {
            get {
                return this.cOMPANY_IDField;
            }
            set {
                this.cOMPANY_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VENDOR_CODE {
            get {
                return this.vENDOR_CODEField;
            }
            set {
                this.vENDOR_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LOCATION_CODE {
            get {
                return this.lOCATION_CODEField;
            }
            set {
                this.lOCATION_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STORAGE_LOCATION {
            get {
                return this.sTORAGE_LOCATIONField;
            }
            set {
                this.sTORAGE_LOCATIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TEAM_LIST", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TEAM_INFO[] TEAM_LIST {
            get {
                return this.tEAM_LISTField;
            }
            set {
                this.tEAM_LISTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class STAFF_INFO {
        
        private string sTAFF_CODEField;
        
        private string sTAFF_NAMEField;
        
        private string sTAFF_PHONEField;
        
        private string sTAFF_EMAILField;
        
        private string sTAFF_LATITUDEField;
        
        private string sTAFF_LONGITUDEField;
        
        private string sTAFF_FIRST_DAY_WORKINGField;
        
        private string sTAFF_END_DAY_WORKINGField;
        
        private string sTAFF_ROLEField;
        
        private string sTAFF_PROFILE_PICTURE_FILENAMEField;
        
        private COMPANY[] cOMPANY_LISTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_CODE {
            get {
                return this.sTAFF_CODEField;
            }
            set {
                this.sTAFF_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_NAME {
            get {
                return this.sTAFF_NAMEField;
            }
            set {
                this.sTAFF_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_PHONE {
            get {
                return this.sTAFF_PHONEField;
            }
            set {
                this.sTAFF_PHONEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_EMAIL {
            get {
                return this.sTAFF_EMAILField;
            }
            set {
                this.sTAFF_EMAILField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_LATITUDE {
            get {
                return this.sTAFF_LATITUDEField;
            }
            set {
                this.sTAFF_LATITUDEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_LONGITUDE {
            get {
                return this.sTAFF_LONGITUDEField;
            }
            set {
                this.sTAFF_LONGITUDEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_FIRST_DAY_WORKING {
            get {
                return this.sTAFF_FIRST_DAY_WORKINGField;
            }
            set {
                this.sTAFF_FIRST_DAY_WORKINGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_END_DAY_WORKING {
            get {
                return this.sTAFF_END_DAY_WORKINGField;
            }
            set {
                this.sTAFF_END_DAY_WORKINGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_ROLE {
            get {
                return this.sTAFF_ROLEField;
            }
            set {
                this.sTAFF_ROLEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STAFF_PROFILE_PICTURE_FILENAME {
            get {
                return this.sTAFF_PROFILE_PICTURE_FILENAMEField;
            }
            set {
                this.sTAFF_PROFILE_PICTURE_FILENAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("COMPANY_LIST", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public COMPANY[] COMPANY_LIST {
            get {
                return this.cOMPANY_LISTField;
            }
            set {
                this.cOMPANY_LISTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class MA_ORDER {
        
        private string tROUBLE_TICKET_NOField;
        
        private string sIEBEL_REQUEST_NOField;
        
        private string fIBRENET_IDField;
        
        private string cOMMIT_DATEField;
        
        private string aCCEPT_DATEField;
        
        private string cOMPLAINT_TITLEField;
        
        private string cUSTOMER_COMPLAINT_NAMEField;
        
        private string cUSTOMER_COMPLAINT_MOBILEField;
        
        private string nOC_REMARKField;
        
        private string dETAILS_FOR_RESOLVEDField;
        
        private string cOMPLAINT_DESCRIPTIONField;
        
        private string iNSTALLATION_ADDRESSField;
        
        private string aPPOINTMENT_DATEField;
        
        private string aPPOINTMENT_TIMESLOTField;
        
        private STAFF_INFO sTAFF_LISTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TROUBLE_TICKET_NO {
            get {
                return this.tROUBLE_TICKET_NOField;
            }
            set {
                this.tROUBLE_TICKET_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SIEBEL_REQUEST_NO {
            get {
                return this.sIEBEL_REQUEST_NOField;
            }
            set {
                this.sIEBEL_REQUEST_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FIBRENET_ID {
            get {
                return this.fIBRENET_IDField;
            }
            set {
                this.fIBRENET_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string COMMIT_DATE {
            get {
                return this.cOMMIT_DATEField;
            }
            set {
                this.cOMMIT_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ACCEPT_DATE {
            get {
                return this.aCCEPT_DATEField;
            }
            set {
                this.aCCEPT_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string COMPLAINT_TITLE {
            get {
                return this.cOMPLAINT_TITLEField;
            }
            set {
                this.cOMPLAINT_TITLEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CUSTOMER_COMPLAINT_NAME {
            get {
                return this.cUSTOMER_COMPLAINT_NAMEField;
            }
            set {
                this.cUSTOMER_COMPLAINT_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CUSTOMER_COMPLAINT_MOBILE {
            get {
                return this.cUSTOMER_COMPLAINT_MOBILEField;
            }
            set {
                this.cUSTOMER_COMPLAINT_MOBILEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NOC_REMARK {
            get {
                return this.nOC_REMARKField;
            }
            set {
                this.nOC_REMARKField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DETAILS_FOR_RESOLVED {
            get {
                return this.dETAILS_FOR_RESOLVEDField;
            }
            set {
                this.dETAILS_FOR_RESOLVEDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string COMPLAINT_DESCRIPTION {
            get {
                return this.cOMPLAINT_DESCRIPTIONField;
            }
            set {
                this.cOMPLAINT_DESCRIPTIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string INSTALLATION_ADDRESS {
            get {
                return this.iNSTALLATION_ADDRESSField;
            }
            set {
                this.iNSTALLATION_ADDRESSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string APPOINTMENT_DATE {
            get {
                return this.aPPOINTMENT_DATEField;
            }
            set {
                this.aPPOINTMENT_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string APPOINTMENT_TIMESLOT {
            get {
                return this.aPPOINTMENT_TIMESLOTField;
            }
            set {
                this.aPPOINTMENT_TIMESLOTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public STAFF_INFO STAFF_LIST {
            get {
                return this.sTAFF_LISTField;
            }
            set {
                this.sTAFF_LISTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class slotList {
        
        private string mA_DATEField;
        
        private string mA_TIME_SLOTField;
        
        private string cAPACITYField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MA_DATE {
            get {
                return this.mA_DATEField;
            }
            set {
                this.mA_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MA_TIME_SLOT {
            get {
                return this.mA_TIME_SLOTField;
            }
            set {
                this.mA_TIME_SLOTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CAPACITY {
            get {
                return this.cAPACITYField;
            }
            set {
                this.cAPACITYField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class snList {
        
        private string sPARE_TYPE_NAMEField;
        
        private string mODEL_NAMEField;
        
        private string sERIAL_NOField;
        
        private string sTATUS_NAMEField;
        
        private string oRD_NOField;
        
        private string fIRST_SERVICE_DATEField;
        
        private string cPE_SERVICE_YEARField;
        
        private string fIBRENET_IDField;
        
        private string sUBCONTRACT_NAMEField;
        
        private string sTORAGE_LOCATIONField;
        
        private string sHIP_TOField;
        
        private string lOST_WRITEOFFField;
        
        private string tRANSFER_DATEField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SPARE_TYPE_NAME {
            get {
                return this.sPARE_TYPE_NAMEField;
            }
            set {
                this.sPARE_TYPE_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MODEL_NAME {
            get {
                return this.mODEL_NAMEField;
            }
            set {
                this.mODEL_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SERIAL_NO {
            get {
                return this.sERIAL_NOField;
            }
            set {
                this.sERIAL_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STATUS_NAME {
            get {
                return this.sTATUS_NAMEField;
            }
            set {
                this.sTATUS_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ORD_NO {
            get {
                return this.oRD_NOField;
            }
            set {
                this.oRD_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FIRST_SERVICE_DATE {
            get {
                return this.fIRST_SERVICE_DATEField;
            }
            set {
                this.fIRST_SERVICE_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CPE_SERVICE_YEAR {
            get {
                return this.cPE_SERVICE_YEARField;
            }
            set {
                this.cPE_SERVICE_YEARField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FIBRENET_ID {
            get {
                return this.fIBRENET_IDField;
            }
            set {
                this.fIBRENET_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SUBCONTRACT_NAME {
            get {
                return this.sUBCONTRACT_NAMEField;
            }
            set {
                this.sUBCONTRACT_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STORAGE_LOCATION {
            get {
                return this.sTORAGE_LOCATIONField;
            }
            set {
                this.sTORAGE_LOCATIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHIP_TO {
            get {
                return this.sHIP_TOField;
            }
            set {
                this.sHIP_TOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LOST_WRITEOFF {
            get {
                return this.lOST_WRITEOFFField;
            }
            set {
                this.lOST_WRITEOFFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TRANSFER_DATE {
            get {
                return this.tRANSFER_DATEField;
            }
            set {
                this.tRANSFER_DATEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class transferList {
        
        private string tRANSFER_DATEField;
        
        private string aMOUNT_EQUIPField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TRANSFER_DATE {
            get {
                return this.tRANSFER_DATEField;
            }
            set {
                this.tRANSFER_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AMOUNT_EQUIP {
            get {
                return this.aMOUNT_EQUIPField;
            }
            set {
                this.aMOUNT_EQUIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class spareTypeList {
        
        private string sPARE_TYPEField;
        
        private string sTATUSField;
        
        private string aMOUNT_EQUIPField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SPARE_TYPE {
            get {
                return this.sPARE_TYPEField;
            }
            set {
                this.sPARE_TYPEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STATUS {
            get {
                return this.sTATUSField;
            }
            set {
                this.sTATUSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AMOUNT_EQUIP {
            get {
                return this.aMOUNT_EQUIPField;
            }
            set {
                this.aMOUNT_EQUIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class teamList {
        
        private string tEAM_NAMEField;
        
        private string tEAM_IDField;
        
        private string tEAM_SERVICEField;
        
        private string vENDOR_CODEField;
        
        private string lOCATION_CODEField;
        
        private string sTORAGE_LOCATIONField;
        
        private string sHIP_TOField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TEAM_NAME {
            get {
                return this.tEAM_NAMEField;
            }
            set {
                this.tEAM_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TEAM_ID {
            get {
                return this.tEAM_IDField;
            }
            set {
                this.tEAM_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TEAM_SERVICE {
            get {
                return this.tEAM_SERVICEField;
            }
            set {
                this.tEAM_SERVICEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VENDOR_CODE {
            get {
                return this.vENDOR_CODEField;
            }
            set {
                this.vENDOR_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LOCATION_CODE {
            get {
                return this.lOCATION_CODEField;
            }
            set {
                this.lOCATION_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STORAGE_LOCATION {
            get {
                return this.sTORAGE_LOCATIONField;
            }
            set {
                this.sTORAGE_LOCATIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHIP_TO {
            get {
                return this.sHIP_TOField;
            }
            set {
                this.sHIP_TOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class companyList {
        
        private string cOMPANY_NAMEField;
        
        private string cOMPANY_IDField;
        
        private string vENDOR_CODEField;
        
        private string lOCATION_CODEField;
        
        private string sTORAGE_LOCATIONField;
        
        private teamList[] tEAM_LISTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string COMPANY_NAME {
            get {
                return this.cOMPANY_NAMEField;
            }
            set {
                this.cOMPANY_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string COMPANY_ID {
            get {
                return this.cOMPANY_IDField;
            }
            set {
                this.cOMPANY_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VENDOR_CODE {
            get {
                return this.vENDOR_CODEField;
            }
            set {
                this.vENDOR_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LOCATION_CODE {
            get {
                return this.lOCATION_CODEField;
            }
            set {
                this.lOCATION_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STORAGE_LOCATION {
            get {
                return this.sTORAGE_LOCATIONField;
            }
            set {
                this.sTORAGE_LOCATIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TEAM_LIST", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public teamList[] TEAM_LIST {
            get {
                return this.tEAM_LISTField;
            }
            set {
                this.tEAM_LISTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class cpePenalty {
        
        private string sERIAL_NOField;
        
        private string sTATUSField;
        
        private string sTATUS_DESCField;
        
        private string cPE_TYPEField;
        
        private string cPE_MODEL_NAMEField;
        
        private string cOMPANY_CODEField;
        
        private string pLANTField;
        
        private string sTORAGE_LOCATIONField;
        
        private string mATERIAL_CODEField;
        
        private string pENALTYField;
        
        private string pENALTY_PRODUCT_CODEField;
        
        private string oPER_DATEField;
        
        private string cPE_BRAND_NAMEField;
        
        private string cPE_GROUP_TYPEField;
        
        private string rEGISTER_DATEField;
        
        private string cPE_MODEL_IDField;
        
        private string fIBRENET_IDField;
        
        private string sN_PATTERNField;
        
        private string sHIP_TOField;
        
        private string wARRANTY_START_DATEField;
        
        private string wARRANTY_END_DATEField;
        
        private string mAC_ADDRESSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SERIAL_NO {
            get {
                return this.sERIAL_NOField;
            }
            set {
                this.sERIAL_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STATUS {
            get {
                return this.sTATUSField;
            }
            set {
                this.sTATUSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STATUS_DESC {
            get {
                return this.sTATUS_DESCField;
            }
            set {
                this.sTATUS_DESCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CPE_TYPE {
            get {
                return this.cPE_TYPEField;
            }
            set {
                this.cPE_TYPEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CPE_MODEL_NAME {
            get {
                return this.cPE_MODEL_NAMEField;
            }
            set {
                this.cPE_MODEL_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string COMPANY_CODE {
            get {
                return this.cOMPANY_CODEField;
            }
            set {
                this.cOMPANY_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PLANT {
            get {
                return this.pLANTField;
            }
            set {
                this.pLANTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string STORAGE_LOCATION {
            get {
                return this.sTORAGE_LOCATIONField;
            }
            set {
                this.sTORAGE_LOCATIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MATERIAL_CODE {
            get {
                return this.mATERIAL_CODEField;
            }
            set {
                this.mATERIAL_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PENALTY {
            get {
                return this.pENALTYField;
            }
            set {
                this.pENALTYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PENALTY_PRODUCT_CODE {
            get {
                return this.pENALTY_PRODUCT_CODEField;
            }
            set {
                this.pENALTY_PRODUCT_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OPER_DATE {
            get {
                return this.oPER_DATEField;
            }
            set {
                this.oPER_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CPE_BRAND_NAME {
            get {
                return this.cPE_BRAND_NAMEField;
            }
            set {
                this.cPE_BRAND_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CPE_GROUP_TYPE {
            get {
                return this.cPE_GROUP_TYPEField;
            }
            set {
                this.cPE_GROUP_TYPEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string REGISTER_DATE {
            get {
                return this.rEGISTER_DATEField;
            }
            set {
                this.rEGISTER_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CPE_MODEL_ID {
            get {
                return this.cPE_MODEL_IDField;
            }
            set {
                this.cPE_MODEL_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FIBRENET_ID {
            get {
                return this.fIBRENET_IDField;
            }
            set {
                this.fIBRENET_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SN_PATTERN {
            get {
                return this.sN_PATTERNField;
            }
            set {
                this.sN_PATTERNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SHIP_TO {
            get {
                return this.sHIP_TOField;
            }
            set {
                this.sHIP_TOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WARRANTY_START_DATE {
            get {
                return this.wARRANTY_START_DATEField;
            }
            set {
                this.wARRANTY_START_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WARRANTY_END_DATE {
            get {
                return this.wARRANTY_END_DATEField;
            }
            set {
                this.wARRANTY_END_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MAC_ADDRESS {
            get {
                return this.mAC_ADDRESSField;
            }
            set {
                this.mAC_ADDRESSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class timeSlotList {
        
        private string sUBCONTRACTOR_TEAMField;
        
        private string sUBCONTRACTOR_TEAMIDField;
        
        private string mA_DATEField;
        
        private string mA_TIME_SLOTField;
        
        private string cAPACITYField;
        
        private string aSSIGNER_INFOField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SUBCONTRACTOR_TEAM {
            get {
                return this.sUBCONTRACTOR_TEAMField;
            }
            set {
                this.sUBCONTRACTOR_TEAMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SUBCONTRACTOR_TEAMID {
            get {
                return this.sUBCONTRACTOR_TEAMIDField;
            }
            set {
                this.sUBCONTRACTOR_TEAMIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MA_DATE {
            get {
                return this.mA_DATEField;
            }
            set {
                this.mA_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MA_TIME_SLOT {
            get {
                return this.mA_TIME_SLOTField;
            }
            set {
                this.mA_TIME_SLOTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CAPACITY {
            get {
                return this.cAPACITYField;
            }
            set {
                this.cAPACITYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ASSIGNER_INFO {
            get {
                return this.aSSIGNER_INFOField;
            }
            set {
                this.aSSIGNER_INFOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TTComplainSheet/")]
    public partial class extAttr {
        
        private string fIELD_CODEField;
        
        private string fIELD_NAMEField;
        
        private string fIELD_VALUEField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FIELD_CODE {
            get {
                return this.fIELD_CODEField;
            }
            set {
                this.fIELD_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FIELD_NAME {
            get {
                return this.fIELD_NAMEField;
            }
            set {
                this.fIELD_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FIELD_VALUE {
            get {
                return this.fIELD_VALUEField;
            }
            set {
                this.fIELD_VALUEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void newWorkSheetCompletedEventHandler(object sender, newWorkSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newWorkSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newWorkSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string TT_SERIAL_NO {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string DESC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void QUERYCAPACITYCompletedEventHandler(object sender, QUERYCAPACITYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QUERYCAPACITYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QUERYCAPACITYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ADDRESS_ID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public timeSlotList[] TIME_SLOT_LIST {
            get {
                this.RaiseExceptionIfNecessary();
                return ((timeSlotList[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string INSTALL_SUBCONTRACTOR_NAME {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string INSTALL_SUBCONTRACTOR_TEAM {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string FOA_CLOSE_DATE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string RESULT_CODE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RESERVEDCAPACITYCompletedEventHandler(object sender, RESERVEDCAPACITYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RESERVEDCAPACITYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RESERVEDCAPACITYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string RESERVED_ID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RELEASECAPACITYCompletedEventHandler(object sender, RELEASECAPACITYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RELEASECAPACITYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RELEASECAPACITYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void queryCPEPenaltyCompletedEventHandler(object sender, queryCPEPenaltyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryCPEPenaltyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryCPEPenaltyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESCRIPTION {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public cpePenalty[] CPE_INFO_LIST {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cpePenalty[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void debtCollectorCompletedEventHandler(object sender, debtCollectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class debtCollectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal debtCollectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESCRIPTION {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSubcontractorCompletedEventHandler(object sender, getSubcontractorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubcontractorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubcontractorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESCRIPTION {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string STAFF_NAME {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string STAFF_PHONE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string STAFF_EMAIL {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string STAFF_ROLE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public companyList[] COMPANY_LIST {
            get {
                this.RaiseExceptionIfNecessary();
                return ((companyList[])(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void QuerySparePartCompletedEventHandler(object sender, QuerySparePartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySparePartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySparePartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESCRIPTION {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string REPORT_JOB_ID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public spareTypeList[] SpareTypeStatusList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((spareTypeList[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public transferList[] TransferDateList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transferList[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public snList[] FibreSNList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snList[])(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SetCPEWarrantyCompletedEventHandler(object sender, SetCPEWarrantyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCPEWarrantyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCPEWarrantyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESCRIPTION {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void MAappointmentCompletedEventHandler(object sender, MAappointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MAappointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MAappointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string POSTCODE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public slotList[] TIME_SLOT_LIST {
            get {
                this.RaiseExceptionIfNecessary();
                return ((slotList[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string RESULT_CODE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void cancelAppointmentCompletedEventHandler(object sender, cancelAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void newEDStaskCompletedEventHandler(object sender, newEDStaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newEDStaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newEDStaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESPONSE_CODE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string RESPONSE_MESSAGE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void QueryMADetailsCompletedEventHandler(object sender, QueryMADetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMADetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMADetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ERROR_CODE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ERROR_DESCRIPTION {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public MA_ORDER[] MA_ORDER_LIST {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MA_ORDER[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SelfServiceAppointCompletedEventHandler(object sender, SelfServiceAppointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelfServiceAppointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelfServiceAppointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RESULT_DESCRIPTION {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591